Search.setIndex({"docnames": ["index", "modules", "nokey", "nokey.animals", "nokey.books_and_literature", "nokey.calendar", "nokey.country_info", "nokey.developer_tools", "nokey.education", "nokey.finance_and_crypto", "nokey.food", "nokey.games", "nokey.geolocation", "nokey.government", "nokey.helperFuncs", "nokey.inspiration", "nokey.jokes", "nokey.language", "nokey.random", "nokey.science_and_nature", "nokey.spaceflight", "nokey.tv_and_film", "nokey.weather"], "filenames": ["index.rst", "modules.rst", "nokey.rst", "nokey.animals.rst", "nokey.books_and_literature.rst", "nokey.calendar.rst", "nokey.country_info.rst", "nokey.developer_tools.rst", "nokey.education.rst", "nokey.finance_and_crypto.rst", "nokey.food.rst", "nokey.games.rst", "nokey.geolocation.rst", "nokey.government.rst", "nokey.helperFuncs.rst", "nokey.inspiration.rst", "nokey.jokes.rst", "nokey.language.rst", "nokey.random.rst", "nokey.science_and_nature.rst", "nokey.spaceflight.rst", "nokey.tv_and_film.rst", "nokey.weather.rst"], "titles": ["Welcome to nokey\u2019s documentation!", "nokey", "nokey package", "nokey.animals package", "nokey.books_and_literature package", "nokey.calendar package", "nokey.country_info package", "nokey.developer_tools package", "nokey.education package", "nokey.finance_and_crypto package", "nokey.food package", "nokey.games package", "nokey.geolocation package", "nokey.government package", "nokey.helperFuncs package", "nokey.inspiration package", "nokey.jokes package", "nokey.language package", "nokey.random package", "nokey.science_and_nature package", "nokey.spaceflight package", "nokey.tv_and_film package", "nokey.weather package"], "terms": {"packag": [0, 1], "index": [0, 20], "modul": [0, 1], "search": [0, 4, 8, 9, 13, 15, 16, 19, 20], "page": [0, 4, 15, 19, 20, 21], "subpackag": 1, "anim": [1, 2, 11, 21], "submodul": [1, 2], "dog_api": [1, 2], "content": 1, "books_and_literatur": [1, 2], "gutendex": [1, 2], "calendar": [1, 2], "nager_d": [1, 2], "country_info": [1, 2], "rest_countri": [1, 2], "developer_tool": [1, 2], "apis_guru": [1, 2], "filter_list": [1, 2], "microlink": [1, 2], "url_hau": [1, 2], "url_shorten": [1, 2], "educ": [1, 2], "university_domains_and_nam": [1, 2], "finance_and_crypto": [1, 2], "coinmap": [1, 2], "exchange_api": [1, 2], "wall_street_bet": [1, 2], "food": [1, 2, 21], "fruityvic": [1, 2], "game": [1, 2, 21], "free_to_gam": [1, 2], "open_trivia_db": [1, 2], "geoloc": [1, 2], "ip_api": [1, 2], "zippopotamu": [1, 2], "govern": [1, 2], "federal_regist": [1, 2], "helperfunc": [1, 2], "get_api_list": [1, 2], "make_request": [1, 2], "nokey_api": [1, 2], "inspir": [1, 2], "dictum": [1, 2], "joke": [1, 2], "joke_api": [1, 2], "languag": [1, 2, 4, 6, 7, 15, 16, 19], "free_dictionari": [1, 2], "random": [1, 2, 3, 11, 15], "random_us": [1, 2], "science_and_natur": [1, 2], "integrated_taxonomic_information_system": [1, 2], "nobel_pr": [1, 2], "spaceflight": [1, 2], "spaceflight_new": [1, 2], "tv_and_film": [1, 2], "star_trek_api": [1, 2], "weather": [1, 2], "national_weather_servic": [1, 2], "dogapi": [2, 3], "get_all_dog_bre": [2, 3], "get_all_subbre": [2, 3], "get_docs_url": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "get_dog_images_by_bre": [2, 3], "get_random_dog_imag": [2, 3], "get_random_dog_image_by_bre": [2, 3], "get_authors_before_specified_year": [2, 4], "get_authors_within_date_rang": [2, 4], "get_book_by_id": [2, 4, 21], "get_book": [2, 4, 21], "get_books_by_id": [2, 4], "search_books_by_author_and_titl": [2, 4], "search_books_by_top": [2, 4], "nagerd": [2, 5], "get_available_countri": [2, 5], "get_country_info": [2, 5], "get_long_weekends_by_countri": [2, 5], "get_public_holdiays_for_next_365": [2, 5], "get_public_holidai": [2, 5], "get_public_holidays_worldwide_for_next_7": [2, 5], "is_today_a_public_holidai": [2, 5], "restcountri": [2, 6], "get_all_countri": [2, 6], "get_country_by_capit": [2, 6], "get_country_by_cod": [2, 6], "get_country_by_curr": [2, 6], "get_country_by_languag": [2, 6], "get_country_by_nam": [2, 6], "get_country_by_region": [2, 6], "get_country_by_subregion": [2, 6], "get_country_by_transl": [2, 6], "apisguru": [2, 7], "get_all_api": [2, 7], "get_all_provid": [2, 7], "get_apis_by_provid": [2, 7], "get_basic_metr": [2, 7], "get_particular_api_version_no_service_nam": [2, 7], "get_particular_api_version_with_service_nam": [2, 7], "get_service_names_by_provid": [2, 7], "filterlist": [2, 7], "get_languag": [2, 7, 15], "get_licens": [2, 7], "get_list_by_id": [2, 7], "get_list": [2, 7], "get_maintain": [2, 7], "get_softwar": [2, 7], "get_syntax": [2, 7], "get_tag": [2, 7], "get_color_palette_for_target_url": [2, 7], "get_metadata_for_target_url": [2, 7], "get_pdf_of_target_url": [2, 7], "get_screenshot_of_target_url": [2, 7], "urlhau": [2, 7], "download_malware_sampl": [2, 7], "get_info_about_host": [2, 7], "get_info_about_payload": [2, 7], "get_info_about_signatur": [2, 7], "get_info_about_tag": [2, 7], "get_info_about_url": [2, 7], "get_info_about_url_by_id": [2, 7], "get_recent_payload": [2, 7], "get_recent_url": [2, 7], "urlshorten": [2, 7], "shorten_url": [2, 7], "universitydomainsandnam": [2, 8], "get_university_name_and_domain": [2, 8], "update_list": [2, 8], "get_atm_oper": [2, 9], "get_coin": [2, 9], "get_comments_by_venue_id": [2, 9], "get_ratings_by_venue_id": [2, 9], "get_venue_by_id": [2, 9], "get_venu": [2, 9], "exchangeapi": [2, 9], "get_available_curr": [2, 9], "get_rates_from_bas": [2, 9], "wallstreetbet": [2, 9], "get_stock_sentiment_from_reddit": [2, 9], "get_all_fruit": [2, 10], "get_fruit_by_famili": [2, 10], "get_fruit_by_genu": [2, 10], "get_fruit_by_nutrit": [2, 10], "get_fruit_by_ord": [2, 10], "freetogam": [2, 11], "filter_gam": [2, 11], "get_all_live_gam": [2, 11], "get_game_by_id": [2, 11], "get_games_by_categori": [2, 11], "get_games_by_platform": [2, 11], "get_games_by_platform_and_categori": [2, 11], "opentriviadb": [2, 11], "get_random_trivia_quest": [2, 11], "get_specified_trivia_quest": [2, 11], "get_location_info_by_ip_address": [2, 12], "zippopotomu": [2, 12], "get_info_by_zipcod": [2, 12], "get_zipcode_by_c": [2, 12], "federalregist": [2, 13], "get_agencies_detail": [2, 13], "get_agency_by_slug": [2, 13], "get_current_public_inspection_docu": [2, 13], "get_document_counts_by_facet": [2, 13], "get_document_toc_by_d": [2, 13], "get_fed_reg_docu": [2, 13], "get_image_variants_by_id": [2, 13], "get_multiple_fed_reg_docu": [2, 13], "get_multiple_public_inspection_docu": [2, 13], "get_public_inspection_docu": [2, 13], "get_suggested_search_by_slug": [2, 13], "get_suggested_searches_by_sect": [2, 13], "search_all_docu": [2, 13], "search_all_public_inspection_docu": [2, 13], "make_request_for_cont": [2, 14], "make_request_with_param": [2, 14], "get_inspiring_author_by_id": [2, 15], "get_inspiring_author": [2, 15], "get_inspiring_quote_by_quote_id": [2, 15], "get_inspiring_quot": [2, 15], "get_inspiring_quotes_by_author_id": [2, 15], "get_number_of_quotes_and_author": [2, 15], "get_random_quot": [2, 15], "jokeapi": [2, 16], "get_jok": [2, 16], "freedictionari": [2, 17], "look_up_word": [2, 17], "randomusergener": [2, 18], "generate_random_us": [2, 18], "nobelprizeapi": [2, 19], "get_all_nobel_pr": [2, 19], "get_nobel_laureate_by_id": [2, 19], "get_nobel_prize_laur": [2, 19], "get_one_nobel_pr": [2, 19], "spaceflightnew": [2, 20], "get_article_by_id": [2, 20], "get_articl": [2, 20], "get_blog_by_id": [2, 20], "get_blog": [2, 20], "get_info": [2, 20], "get_report_by_id": [2, 20], "get_report": [2, 20], "stapi": [2, 21], "get_animal_by_id": [2, 21], "get_anim": [2, 21], "get_astronomical_object_by_id": [2, 21], "get_astronomical_object": [2, 21], "get_book_collection_by_id": [2, 21], "get_book_collect": [2, 21], "get_book_seri": [2, 21], "get_book_series_by_id": [2, 21], "get_character_by_id": [2, 21], "get_charact": [2, 21], "get_comic_by_id": [2, 21], "get_comic_collection_by_id": [2, 21], "get_comic_collect": [2, 21], "get_comic_seri": [2, 21], "get_comic_series_by_id": [2, 21], "get_comic_strip_by_id": [2, 21], "get_comic_strip": [2, 21], "get_com": [2, 21], "get_compani": [2, 21], "get_company_by_id": [2, 21], "get_conflict_by_id": [2, 21], "get_conflict": [2, 21], "get_data_vers": [2, 21], "get_element_by_id": [2, 21], "get_el": [2, 21], "get_episode_by_id": [2, 21], "get_episod": [2, 21], "get_food_by_id": [2, 21], "get_food": [2, 21], "get_literatur": [2, 21], "get_literature_by_id": [2, 21], "get_location_by_id": [2, 21], "get_loc": [2, 21], "get_magazine_by_id": [2, 21], "get_magazine_seri": [2, 21], "get_magazine_series_by_id": [2, 21], "get_magazin": [2, 21], "get_material_by_id": [2, 21], "get_materi": [2, 21], "get_medical_condition_by_id": [2, 21], "get_medical_condit": [2, 21], "get_movie_by_id": [2, 21], "get_movi": [2, 21], "get_occupation_by_id": [2, 21], "get_occup": [2, 21], "get_organization_by_id": [2, 21], "get_organ": [2, 21], "get_performer_by_id": [2, 21], "get_perform": [2, 21], "get_season_by_id": [2, 21], "get_season": [2, 21], "get_seri": [2, 21], "get_series_by_id": [2, 21], "get_soundtrack_by_id": [2, 21], "get_soundtrack": [2, 21], "get_spacecraft_by_id": [2, 21], "get_spacecraft_class_by_id": [2, 21], "get_spacecraft_class": [2, 21], "get_spacecraft": [2, 21], "get_speci": [2, 21], "get_species_by_id": [2, 21], "get_staff": [2, 21], "get_staff_by_id": [2, 21], "get_technologi": [2, 21], "get_technology_by_id": [2, 21], "get_title_by_id": [2, 21], "get_titl": [2, 21], "get_trading_card_by_id": [2, 21], "get_trading_card_deck_by_id": [2, 21], "get_trading_card_deck": [2, 21], "get_trading_card_set_by_id": [2, 21], "get_trading_card_set": [2, 21], "get_trading_card": [2, 21], "get_video_game_by_id": [2, 21], "get_video_gam": [2, 21], "get_video_release_by_id": [2, 21], "get_video_releas": [2, 21], "get_weapon_by_id": [2, 21], "get_weapon": [2, 21], "nationalweatherservic": [2, 22], "get_nws_office_headline_by_headline_id": [2, 22], "get_nws_office_headlin": [2, 22], "get_nws_office_metadata": [2, 22], "get_active_alert": [2, 22], "get_active_alerts_by_area": [2, 22], "get_active_alerts_by_region": [2, 22], "get_active_alerts_by_zon": [2, 22], "get_active_alerts_count": [2, 22], "get_alert_by_id": [2, 22], "get_alert_typ": [2, 22], "get_alert": [2, 22], "get_cwsu_advisori": [2, 22], "get_cwsu_advisories_by_date_and_seq": [2, 22], "get_cwsu_metadata": [2, 22], "get_glossari": [2, 22], "get_observation_stations_by_gridpoint": [2, 22], "get_observation_stations_by_zon": [2, 22], "get_observations_by_st": [2, 22], "get_radar_queue_metadata": [2, 22], "get_radar_server_metadata_by_id": [2, 22], "get_radar_serv": [2, 22], "get_radar_station_alarms_metadata_by_id": [2, 22], "get_radar_station_metadata_by_id": [2, 22], "get_radar_st": [2, 22], "get_radar_wind_profiler_metadata": [2, 22], "get_raw_data_by_gridpoint": [2, 22], "get_sigmets_by_atsu": [2, 22], "get_sigmets_by_atsu_and_d": [2, 22], "get_specific_sigmet": [2, 22], "get_station_metadata": [2, 22], "get_station_observation_by_tim": [2, 22], "get_stat": [2, 22], "get_taf_by_date_tim": [2, 22], "get_tafs_by_st": [2, 22], "get_text_product_by_id": [2, 22], "get_text_product_loc": [2, 22], "get_text_product_locations_by_typ": [2, 22], "get_text_product_typ": [2, 22], "get_text_product_types_by_loc": [2, 22], "get_text_product": [2, 22], "get_text_products_by_typ": [2, 22], "get_text_products_by_type_and_loc": [2, 22], "get_textual_forecast_by_gridpoint": [2, 22], "get_textual_hourly_forecast_by_gridpoint": [2, 22], "get_zone_forecast": [2, 22], "get_zone_metadata": [2, 22], "get_zone_observ": [2, 22], "get_zon": [2, 22], "get_zones_by_typ": [2, 22], "class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "A": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "interact": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "dog": 3, "api": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "attribut": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "base_url": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "url": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "about": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "short": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "descript": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "list": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 19, 20, 21, 22], "all": [3, 5, 6, 7, 9, 10, 11, 13, 19, 20], "breed": 3, "arg": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "dictionari": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "contain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "sub": 3, "specifi": [3, 4, 10, 11, 14, 19, 21, 22], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22], "document": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22], "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "an": [3, 6, 7, 8, 9, 14, 15, 19], "arrai": 3, "imag": [3, 7, 13], "author_year_end": 4, "sort": [4, 11, 19], "popular": [4, 11], "en": [4, 15, 16], "author": [4, 15, 19], "metadata": [4, 7, 13, 19, 22], "book": [4, 21], "exist": 4, "befor": [4, 9], "year": [4, 5, 19], "int": [4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 19, 20, 21, 22], "which": [4, 10, 11, 13, 20], "wa": [4, 19], "aliv": 4, "can": [4, 11, 19], "neg": 4, "bc": 4, "era": 4, "posit": 4, "paramet": [4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 20], "data": [4, 6, 11, 14, 18, 19, 21, 22], "default": [4, 7, 8, 9, 10, 11, 13, 15, 16, 19, 20, 21], "i": [4, 5, 6, 7, 9, 10, 11, 13, 15, 19, 22], "other": [4, 9, 11, 14, 15, 16, 17, 19], "support": [4, 5, 11, 12, 13, 14, 15, 19], "valu": [4, 9, 10, 11, 13, 15, 16, 19, 20, 22], "ar": [4, 10, 11, 13, 16, 19, 21], "ascend": [4, 19], "descend": [4, 19], "written": 4, "english": [4, 15, 16, 19], "take": 4, "multipl": [4, 11, 13, 19], "comma": [4, 13], "separ": [4, 13], "non": [4, 16], "space": [4, 11, 13], "who": [4, 9], "were": 4, "author_year_start": 4, "within": [4, 19], "rang": [4, 10, 12], "mark": 4, "begin": [4, 19], "end": [4, 19], "whose": 4, "live": [4, 11], "book_id": 4, "singl": [4, 11, 13, 16, 22], "match": [4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 21], "given": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 22], "id": [4, 7, 9, 11, 15, 19, 20, 21, 22], "uniqu": [4, 7, 9, 11, 13, 15, 19, 20, 21], "integ": [4, 5, 20], "identifi": [4, 7, 9, 13, 15, 19, 20, 21, 22], "databas": [4, 11, 19], "1": [4, 16, 19], "first": [4, 9, 11, 19, 21], "option": [4, 7, 8, 9, 11, 13, 14, 16, 19], "number": [4, 8, 9, 11, 13, 15, 16, 19, 20, 21, 22], "download": [4, 7], "doc": [4, 5, 6, 7, 9, 11, 12, 13, 15, 19, 22], "titl": [4, 20, 21], "from": [4, 5, 15, 19, 20, 22], "give": 4, "ani": [4, 7, 11, 14, 16, 19], "part": [4, 19], "": [4, 5, 7, 12, 13, 15, 16], "name": [4, 6, 7, 8, 9, 10, 12, 15, 18, 19], "topic": [4, 13], "nager": 5, "date": [5, 9, 11, 13, 19, 22], "countri": [5, 6, 8, 12], "avail": [5, 7, 9, 13, 19, 22], "countrycod": 5, "inform": [5, 6, 7, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22], "code": [5, 6, 9, 12, 22], "repres": [5, 11], "one": [5, 7, 19], "over": [5, 7], "hundr": 5, "long": 5, "weekend": 5, "question": [5, 7, 8, 11, 12], "upcom": 5, "public": [5, 13, 22], "holidai": 5, "next": 5, "365": 5, "dai": 5, "worldwid": 5, "7": 5, "utc_offset": 5, "0": [5, 10, 15, 21], "true": [5, 11, 19], "todai": 5, "utc": [5, 22], "time": [5, 15, 19, 21, 22], "zone": [5, 22], "fals": [5, 9, 11], "offset": [5, 8, 9, 15, 20], "adjust": 5, "own": 5, "bool": [5, 9], "error": [6, 7, 14], "found": [6, 19], "capit": 6, "citi": [6, 12], "us": [6, 9, 15, 19], "its": [6, 10], "cca2": 6, "ccn3": 6, "cca3": 6, "cioc": 6, "currenc": [6, 9, 19], "specif": [6, 7, 9, 15, 19, 20, 22], "speak": 6, "spoken": 6, "region": [6, 22], "subregion": 6, "translat": 6, "guru": 7, "directori": 7, "provid": [7, 19], "particular": [7, 13, 19], "basic": 7, "metric": 7, "entir": 7, "entri": [7, 21], "version": [7, 9, 20, 21], "where": 7, "servic": [7, 19, 22], "ervic": 7, "target": 7, "licens": 7, "appli": 7, "list_id": 7, "detail": [7, 13], "numer": [7, 22], "maintain": 7, "softwar": 7, "subscrib": 7, "syntax": 7, "tag": [7, 11], "predomin": 7, "color": 7, "pallett": 7, "each": [7, 11], "detect": 7, "pdf": 7, "screenshot": 7, "sha256": 7, "zip": 7, "file": 7, "malwar": 7, "sampl": 7, "payload": [7, 14], "hash": 7, "path": 7, "success": 7, "messag": [7, 14], "otherwis": 7, "host": [7, 22], "mai": 7, "have": 7, "ipv4": [7, 12], "address": [7, 12, 18], "domain": [7, 8, 12], "hostnam": 7, "p_load": 7, "ha": 7, "md5": 7, "signatur": 7, "queri": [7, 9, 13, 15], "urlid": 7, "limit": [7, 8, 9, 13, 15, 19, 20], "recent": 7, "seen": 7, "ad": 7, "shorten": 7, "shorturl": 7, "origin": [7, 19], "desir": [7, 11, 16, 19], "case": [7, 11], "sensit": 7, "must": [7, 9], "between": 7, "5": 7, "30": 7, "charact": [7, 21], "univers": 8, "whole": 8, "partial": [8, 19], "pagin": [8, 19], "result": [8, 9, 19, 20], "respect": [8, 14], "forc": 8, "refresh": 8, "sinc": [8, 13], "won": 8, "t": 8, "automat": 8, "updat": [8, 19], "dataset": 8, "chang": 8, "atm": 9, "oper": 9, "coin": 9, "venue_id": 9, "comment": [9, 19], "venu": 9, "rate": [9, 19], "min_lat": 9, "float": [9, 10], "max_lat": 9, "min_lon": 9, "max_lon": 9, "categori": [9, 11, 14, 16, 19, 22], "owner": 9, "upvot": 9, "after": 9, "promot": 9, "crypto": 9, "minimum": [9, 10], "latitud": 9, "maximum": [9, 10, 13], "longitud": 9, "substr": 9, "filter": [9, 11], "userhash": 9, "user": [9, 18], "onli": [9, 15, 19, 21], "show": 9, "creat": 9, "yyyi": [9, 13, 22], "mm": [9, 13, 22], "dd": [9, 13, 22], "unset": 9, "both": 9, "skip": 9, "n": 9, "exchang": 9, "minified_vers": 9, "get": [9, 19], "minifi": 9, "currency_cod": 9, "latest": 9, "format": [9, 12, 14, 19, 22], "wallstreet": 9, "bet": 9, "top": [9, 11, 22], "50": [9, 19, 21], "stock": 9, "discuss": 9, "reddit": 9, "subeddit": 9, "subreddit": 9, "fruit": 10, "famili": 10, "genu": [10, 19], "nutrit": 10, "minval": 10, "maxval": 10, "1000": [10, 13], "compon": [10, 19], "possibl": [10, 13, 16, 19], "carbohydr": 10, "protein": 10, "fat": 10, "calori": 10, "sugar": 10, "per": [10, 19, 20, 21], "100g": 10, "order": [10, 19], "free": [11, 17], "To": 11, "platform": 11, "sort_bi": 11, "period": 11, "delimit": 11, "mmorpg": 11, "shooter": 11, "strategi": 11, "moba": 11, "race": 11, "sport": 11, "social": 11, "sandbox": 11, "open": 11, "world": [11, 13], "surviv": 11, "pvp": 11, "pve": 11, "pixel": 11, "voxel": 11, "zombi": 11, "turn": 11, "person": 11, "third": 11, "down": [11, 22], "tank": 11, "sail": 11, "side": 11, "scroller": 11, "superhero": 11, "permadeath": 11, "card": [11, 21], "battl": 11, "royal": 11, "mmo": 11, "mmofp": 11, "mmotp": 11, "3d": 11, "2d": 11, "fantasi": 11, "sci": 11, "fi": 11, "fight": 11, "action": 11, "rpg": 11, "militari": 11, "martial": 11, "art": 11, "flight": 11, "low": 11, "spec": 11, "tower": 11, "defens": 11, "horror": 11, "mmort": 11, "plai": 11, "browser": 11, "pc": 11, "releas": [11, 21], "alphabet": [11, 19], "relev": [11, 19], "gameid": 11, "trivia": 11, "amount": [11, 16], "variou": [11, 22], "difficulti": 11, "subject": 11, "answer": 11, "those": 11, "along": [11, 15, 19], "q_type": 11, "trivial": 11, "level": 11, "easi": 11, "medium": 11, "hard": 11, "type": [11, 13, 14, 22], "boolean": [11, 19], "choic": 11, "ip": 12, "info": 12, "state": [12, 22], "coordin": [12, 22], "etc": [12, 18], "ipv6": 12, "locat": [12, 21, 22], "zipcod": 12, "defin": 12, "see": [12, 13], "feder": 13, "regist": 13, "agenc": 13, "slug": 13, "extens": 13, "inspect": 13, "current": [13, 19, 22], "facet": 13, "search_term": 13, "doc_typ": 13, "count": [13, 19, 22], "group": 13, "daili": 13, "weekli": 13, "monthli": 13, "quarterli": 13, "yearli": 13, "section": 13, "subtyp": 13, "term": [13, 19, 22], "addit": 13, "rule": 13, "final": 13, "prorul": 13, "propos": 13, "notic": 13, "presdocu": 13, "presidenti": 13, "pub_dat": 13, "tabl": [13, 19], "print": [13, 14], "edit": 13, "exact": 13, "document_num": 13, "image_id": 13, "variant": 13, "unspac": 13, "suggest": 13, "gov": 13, "busi": 13, "industri": 13, "environ": 13, "health": 13, "welfar": 13, "monei": 13, "scienc": [13, 19], "technologi": [13, 21], "per_pag": 13, "20": 13, "publish": 13, "1994": 13, "onc": 13, "issu": 13, "header": 14, "make": 14, "http": 14, "request": [14, 19, 22], "endpoint": 14, "includ": 14, "sent": 14, "bodi": 14, "respons": 14, "call": 14, "than": [14, 19], "json": [14, 19], "text": [14, 22], "either": [14, 16], "param": 14, "requir": 14, "authorid": 15, "ru": 15, "russian": 15, "hexadecim": 15, "search_queri": 15, "featur": [15, 20], "item": 15, "quoteid": 15, "quot": 15, "thi": [15, 19, 20, 21, 22], "lang": 16, "flag": 16, "joke_typ": 16, "search_str": 16, "program": 16, "misc": 16, "dark": 16, "pin": 16, "spooki": 16, "christma": 16, "c": 16, "czech": 16, "de": 16, "german": [16, 19], "e": [16, 19], "spanish": [16, 19], "fr": 16, "french": [16, 19], "pt": 16, "portugues": [16, 19], "blacklist": 16, "nsfw": 16, "religi": 16, "polit": 16, "racist": 16, "sexist": 16, "explicit": 16, "twopart": 16, "thre": 17, "word": 17, "definit": [17, 22], "look": 17, "up": 17, "relat": 17, "gener": 18, "randomli": 18, "dob": 18, "ssn": 18, "nobel": 19, "prize": 19, "award": 19, "winner": 19, "laureateid": 19, "laureat": 19, "che": 19, "chemistri": 19, "eco": 19, "econom": 19, "lit": 19, "literatur": [19, 21], "pea": 19, "peac": 19, "phy": 19, "physic": 19, "med": 19, "medicin": 19, "pass": 19, "piec": 19, "new": [20, 22], "articl": 20, "10": 20, "summary_contain": 20, "title_contain": 20, "fit": 20, "initi": [19, 20], "phrase": 20, "summari": 20, "blog": 20, "site": 20, "report": 20, "star": 21, "trek": 21, "uid": 21, "pagenumb": 21, "pages": 21, "size": 21, "astronom": 21, "collect": [21, 22], "seri": 21, "comic": 21, "strip": 21, "compani": 21, "conflict": 21, "element": 21, "episod": 21, "eposod": 21, "magazin": 21, "materi": 21, "medic": 21, "condit": 21, "movi": 21, "although": 21, "14": 21, "occup": 21, "organ": 21, "perform": 21, "season": 21, "12": 21, "soundtrack": 21, "spacecraft": 21, "speci": 21, "staff": 21, "trade": 21, "deck": 21, "set": [19, 21], "video": 21, "weapon": 21, "nation": 22, "officeid": 22, "headlineid": 22, "headlin": 22, "nw": 22, "offic": 22, "record": [19, 22], "forecast": 22, "activ": 22, "alert": 22, "infor": 22, "area": 22, "marin": 22, "al": 22, "AT": 22, "gl": 22, "gm": 22, "pa": 22, "pi": 22, "zoneid": 22, "counti": 22, "broken": 22, "broke": 22, "cwsuid": 22, "center": 22, "advisori": 22, "cwsu": 22, "zab": 22, "zan": 22, "zau": 22, "zbw": 22, "zdc": 22, "zdv": 22, "zfa": 22, "zfw": 22, "zhu": 22, "zid": 22, "zjx": 22, "zkc": 22, "zla": 22, "zlc": 22, "zma": 22, "zme": 22, "zmp": 22, "zny": 22, "zoa": 22, "zob": 22, "zse": 22, "ztl": 22, "sequenc": 22, "unit": 22, "glossari": 22, "wfo": 22, "x": 22, "y": 22, "observ": 22, "station": 22, "usabl": 22, "2": 22, "5km": 22, "grid": 22, "akq": 22, "ali": 22, "bgm": 22, "box": 22, "btv": 22, "buf": 22, "cae": 22, "car": 22, "ch": 22, "cle": 22, "ctp": 22, "gsp": 22, "gyx": 22, "ilm": 22, "iln": 22, "lwx": 22, "mhx": 22, "okx": 22, "pbz": 22, "phi": 22, "rah": 22, "rlx": 22, "rnk": 22, "abq": 22, "ama": 22, "bmx": 22, "bro": 22, "crp": 22, "epz": 22, "ewx": 22, "ffc": 22, "fwd": 22, "hgx": 22, "hun": 22, "jan": 22, "jax": 22, "kei": [19, 22], "lch": 22, "lix": 22, "lub": 22, "lzk": 22, "maf": 22, "meg": 22, "mfl": 22, "mlb": 22, "mob": 22, "mrx": 22, "ohx": 22, "oun": 22, "shv": 22, "sjt": 22, "sju": 22, "tae": 22, "tbw": 22, "tsa": 22, "abr": 22, "apx": 22, "arx": 22, "bi": 22, "bou": 22, "cy": 22, "ddc": 22, "dlh": 22, "dmx": 22, "dtx": 22, "dvn": 22, "eax": 22, "fgf": 22, "fsd": 22, "gid": 22, "gjt": 22, "gld": 22, "grb": 22, "grr": 22, "ict": 22, "ilx": 22, "ind": 22, "iwx": 22, "jkl": 22, "lbf": 22, "lmk": 22, "lot": 22, "lsx": 22, "mkx": 22, "mpx": 22, "mqt": 22, "oax": 22, "pah": 22, "pub": 22, "riw": 22, "sgf": 22, "unr": 22, "boi": 22, "byz": 22, "eka": 22, "fgz": 22, "ggw": 22, "hnx": 22, "lkn": 22, "lox": 22, "mfr": 22, "mso": 22, "mtr": 22, "otx": 22, "pdt": 22, "pih": 22, "pqr": 22, "psr": 22, "rev": 22, "sew": 22, "sgx": 22, "slc": 22, "sto": 22, "tfx": 22, "twc": 22, "vef": 22, "aer": 22, "afc": 22, "afg": 22, "ajk": 22, "alu": 22, "gum": 22, "hpa": 22, "hfo": 22, "ppg": 22, "stu": 22, "nh1": 22, "nh2": 22, "ona": 22, "onp": 22, "zkne": 22, "stationid": 22, "radar": 22, "queue": 22, "ldm": 22, "serverid": 22, "server": 22, "alarm": 22, "wind": 22, "profil": 22, "raw": 22, "forcast": 22, "atsu": 22, "sigmet": 22, "airmet": 22, "hhmm": 22, "alwai": 22, "zulu": [19, 22], "timestamp": 22, "termin": 22, "aerodrom": 22, "taf": 22, "airport": 22, "productid": 22, "product": 22, "valid": [19, 22], "issuanc": 22, "typeid": 22, "locationid": 22, "textual": 22, "hourli": 22, "land": 22, "coastal": 22, "offshor": 22, "fire": 22, "out": 14, "visual": 14, "pleas": 14, "head": 14, "individu": 14, "under": 14, "iti": [2, 19], "get_itis_term": [2, 19], "get_itis_terms_from_common_nam": [2, 19], "get_itis_terms_from_scientific_nam": [2, 19], "get_lsid_from_tsn": [2, 19], "get_tsn_from_lsid": [2, 19], "get_tsns_by_vernacular_languag": [2, 19], "get_accepted_names_from_tsn": [2, 19], "get_any_match_count": [2, 19], "get_comment_detail_from_tsn": [2, 19], "get_common_names_from_tsn": [2, 19], "get_core_metadata_from_tsn": [2, 19], "get_coverage_from_tsn": [2, 19], "get_credibility_rating_from_tsn": [2, 19], "get_credibility_r": [2, 19], "get_currency_from_tsn": [2, 19], "get_date_data_from_tsn": [2, 19], "get_descript": [2, 19], "get_experts_from_tsn": [2, 19], "get_full_hierarchy_from_tsn": [2, 19], "get_full_record_from_lsid": [2, 19], "get_full_record_from_tsn": [2, 19], "get_geographic_divisions_from_tsn": [2, 19], "get_geographic_valu": [2, 19], "get_global_species_completeness_from_tsn": [2, 19], "get_hierarchy_down_from_tsn": [2, 19], "get_hierarchy_up_from_tsn": [2, 19], "get_jurisdiction_valu": [2, 19], "get_jurisdictional_origin_from_tsn": [2, 19], "get_jurisdictional_origin_valu": [2, 19], "get_kingdom_name_from_tsn": [2, 19], "get_kingdom_nam": [2, 19], "get_last_change_d": [2, 19], "get_other_sources_from_tsn": [2, 19], "get_parent_tsn_from_tsn": [2, 19], "get_publications_from_tsn": [2, 19], "get_rank_nam": [2, 19], "get_record_from_lsid": [2, 19], "get_review_year_from_tsn": [2, 19], "get_scientific_name_from_tsn": [2, 19], "get_synonym_names_from_tsn": [2, 19], "get_taxon_authorship_from_tsn": [2, 19], "get_taxonomic_rank_name_from_tsn": [2, 19], "get_taxonomic_usage_from_tsn": [2, 19], "get_unacceptability_reason_from_tsn": [2, 19], "get_vernacular_languag": [2, 19], "search_by_common_nam": [2, 19], "search_by_common_name_begins_with": [2, 19], "search_by_common_name_ends_with": [2, 19], "search_by_scientific_nam": [2, 19], "search_for_any_match": [2, 19], "search_for_any_match_pag": [2, 19], "integr": 19, "taxonom": 19, "system": 19, "search_kei": 19, "data_format": 19, "resourc": 19, "catalog": 19, "input": 19, "tool": 19, "common": 19, "scientif": 19, "empti": 19, "xml": 19, "tsn": 19, "lsid": 19, "serial": 19, "correspond": 19, "vernacular": 19, "enter": 19, "afrikaan": 19, "arab": 19, "australian": 19, "bengali": 19, "chines": 19, "djuka": 19, "dutch": 19, "eng": 19, "fijan": 19, "galibi": 19, "greek": 19, "hausa": 19, "hawaiian": 19, "hindi": 19, "iceland": 19, "iglulik": 19, "inuit": 19, "italian": 19, "japanes": 19, "javanes": 19, "khmer": 19, "korean": 19, "lao": 19, "malagasi": 19, "manyika": 19, "nativ": 19, "american": 19, "ndau": 19, "northern": 19, "sotho": 19, "romanian": 19, "shona": 19, "swati": 19, "unspecifi": 19, "xhosa": 19, "accept": 19, "more": 19, "synonym": 19, "compar": 19, "core": 19, "credibl": 19, "usag": 19, "unaccept": 19, "reason": 19, "coverag": 19, "taxon": 19, "abov": 19, "rank_id": 19, "190": 19, "stamp": 19, "last": 19, "web": 19, "expert": 19, "hierarchi": 19, "kingdom": 19, "immedi": 19, "children": 19, "full": 19, "field": 19, "invalid": 19, "geograph": 19, "divis": 19, "completen": 19, "parent": 19, "jurisdict": 19, "pulic": 19, "rank": 19, "review": 19, "also": 19, "indic": 19, "page_s": 19, "page_num": 19, "whether": 19}, "objects": {"": [[2, 0, 0, "-", "nokey"]], "nokey": [[3, 0, 0, "-", "animals"], [4, 0, 0, "-", "books_and_literature"], [5, 0, 0, "-", "calendar"], [6, 0, 0, "-", "country_info"], [7, 0, 0, "-", "developer_tools"], [8, 0, 0, "-", "education"], [9, 0, 0, "-", "finance_and_crypto"], [10, 0, 0, "-", "food"], [11, 0, 0, "-", "games"], [12, 0, 0, "-", "geolocation"], [13, 0, 0, "-", "government"], [14, 0, 0, "-", "helperFuncs"], [15, 0, 0, "-", "inspiration"], [16, 0, 0, "-", "jokes"], [17, 0, 0, "-", "language"], [18, 0, 0, "-", "random"], [19, 0, 0, "-", "science_and_nature"], [20, 0, 0, "-", "spaceflight"], [21, 0, 0, "-", "tv_and_film"], [22, 0, 0, "-", "weather"]], "nokey.animals": [[3, 0, 0, "-", "dog_api"]], "nokey.animals.dog_api": [[3, 1, 1, "", "DogAPI"]], "nokey.animals.dog_api.DogAPI": [[3, 2, 1, "", "get_all_dog_breeds"], [3, 2, 1, "", "get_all_subBreeds"], [3, 2, 1, "", "get_docs_url"], [3, 2, 1, "", "get_dog_images_by_breed"], [3, 2, 1, "", "get_random_dog_image"], [3, 2, 1, "", "get_random_dog_image_by_breed"]], "nokey.books_and_literature": [[4, 0, 0, "-", "gutendex"]], "nokey.books_and_literature.gutendex": [[4, 1, 1, "", "Gutendex"]], "nokey.books_and_literature.gutendex.Gutendex": [[4, 2, 1, "", "get_authors_before_specified_year"], [4, 2, 1, "", "get_authors_within_date_range"], [4, 2, 1, "", "get_book_by_id"], [4, 2, 1, "", "get_books"], [4, 2, 1, "", "get_books_by_ids"], [4, 2, 1, "", "get_docs_url"], [4, 2, 1, "", "search_books_by_author_and_title"], [4, 2, 1, "", "search_books_by_topic"]], "nokey.calendar": [[5, 0, 0, "-", "nager_date"]], "nokey.calendar.nager_date": [[5, 1, 1, "", "NagerDate"]], "nokey.calendar.nager_date.NagerDate": [[5, 2, 1, "", "get_available_countries"], [5, 2, 1, "", "get_country_info"], [5, 2, 1, "", "get_docs_url"], [5, 2, 1, "", "get_long_weekends_by_country"], [5, 2, 1, "", "get_public_holdiays_for_next_365"], [5, 2, 1, "", "get_public_holidays"], [5, 2, 1, "", "get_public_holidays_worldwide_for_next_7"], [5, 2, 1, "", "is_today_a_public_holiday"]], "nokey.country_info": [[6, 0, 0, "-", "rest_country"]], "nokey.country_info.rest_country": [[6, 1, 1, "", "RestCountries"]], "nokey.country_info.rest_country.RestCountries": [[6, 2, 1, "", "get_all_countries"], [6, 2, 1, "", "get_country_by_capital"], [6, 2, 1, "", "get_country_by_code"], [6, 2, 1, "", "get_country_by_currency"], [6, 2, 1, "", "get_country_by_language"], [6, 2, 1, "", "get_country_by_name"], [6, 2, 1, "", "get_country_by_region"], [6, 2, 1, "", "get_country_by_subregion"], [6, 2, 1, "", "get_country_by_translation"], [6, 2, 1, "", "get_docs_url"]], "nokey.developer_tools": [[7, 0, 0, "-", "apis_guru"], [7, 0, 0, "-", "filter_lists"], [7, 0, 0, "-", "microlink"], [7, 0, 0, "-", "url_haus"], [7, 0, 0, "-", "url_shortener"]], "nokey.developer_tools.apis_guru": [[7, 1, 1, "", "APIsGuru"]], "nokey.developer_tools.apis_guru.APIsGuru": [[7, 2, 1, "", "get_all_apis"], [7, 2, 1, "", "get_all_providers"], [7, 2, 1, "", "get_apis_by_provider"], [7, 2, 1, "", "get_basic_metrics"], [7, 2, 1, "", "get_docs_url"], [7, 2, 1, "", "get_particular_api_version_no_service_name"], [7, 2, 1, "", "get_particular_api_version_with_service_name"], [7, 2, 1, "", "get_service_names_by_provider"]], "nokey.developer_tools.filter_lists": [[7, 1, 1, "", "FilterLists"]], "nokey.developer_tools.filter_lists.FilterLists": [[7, 2, 1, "", "get_docs_url"], [7, 2, 1, "", "get_languages"], [7, 2, 1, "", "get_licenses"], [7, 2, 1, "", "get_list_by_id"], [7, 2, 1, "", "get_lists"], [7, 2, 1, "", "get_maintainers"], [7, 2, 1, "", "get_software"], [7, 2, 1, "", "get_syntaxes"], [7, 2, 1, "", "get_tags"]], "nokey.developer_tools.microlink": [[7, 1, 1, "", "Microlink"]], "nokey.developer_tools.microlink.Microlink": [[7, 2, 1, "", "get_color_palette_for_target_url"], [7, 2, 1, "", "get_docs_url"], [7, 2, 1, "", "get_metadata_for_target_url"], [7, 2, 1, "", "get_pdf_of_target_url"], [7, 2, 1, "", "get_screenshot_of_target_url"]], "nokey.developer_tools.url_haus": [[7, 1, 1, "", "URLHaus"]], "nokey.developer_tools.url_haus.URLHaus": [[7, 2, 1, "", "download_malware_sample"], [7, 2, 1, "", "get_docs_url"], [7, 2, 1, "", "get_info_about_host"], [7, 2, 1, "", "get_info_about_payload"], [7, 2, 1, "", "get_info_about_signature"], [7, 2, 1, "", "get_info_about_tag"], [7, 2, 1, "", "get_info_about_url"], [7, 2, 1, "", "get_info_about_url_by_id"], [7, 2, 1, "", "get_recent_payloads"], [7, 2, 1, "", "get_recent_urls"]], "nokey.developer_tools.url_shortener": [[7, 1, 1, "", "UrlShortener"]], "nokey.developer_tools.url_shortener.UrlShortener": [[7, 2, 1, "", "get_docs_url"], [7, 2, 1, "", "shorten_url"]], "nokey.education": [[8, 0, 0, "-", "university_domains_and_names"]], "nokey.education.university_domains_and_names": [[8, 1, 1, "", "UniversityDomainsAndNames"]], "nokey.education.university_domains_and_names.UniversityDomainsAndNames": [[8, 2, 1, "", "get_docs_url"], [8, 2, 1, "", "get_university_name_and_domain"], [8, 2, 1, "", "update_list"]], "nokey.finance_and_crypto": [[9, 0, 0, "-", "coinmap"], [9, 0, 0, "-", "exchange_api"], [9, 0, 0, "-", "wall_street_bets"]], "nokey.finance_and_crypto.coinmap": [[9, 1, 1, "", "Coinmap"]], "nokey.finance_and_crypto.coinmap.Coinmap": [[9, 2, 1, "", "get_atm_operators"], [9, 2, 1, "", "get_coins"], [9, 2, 1, "", "get_comments_by_venue_id"], [9, 2, 1, "", "get_docs_url"], [9, 2, 1, "", "get_ratings_by_venue_id"], [9, 2, 1, "", "get_venue_by_id"], [9, 2, 1, "", "get_venues"]], "nokey.finance_and_crypto.exchange_api": [[9, 1, 1, "", "ExchangeAPI"]], "nokey.finance_and_crypto.exchange_api.ExchangeAPI": [[9, 2, 1, "", "get_available_currencies"], [9, 2, 1, "", "get_docs_url"], [9, 2, 1, "", "get_rates_from_base"]], "nokey.finance_and_crypto.wall_street_bets": [[9, 1, 1, "", "WallstreetBets"]], "nokey.finance_and_crypto.wall_street_bets.WallstreetBets": [[9, 2, 1, "", "get_docs_url"], [9, 2, 1, "", "get_stock_sentiment_from_reddit"]], "nokey.food": [[10, 0, 0, "-", "fruityvice"]], "nokey.food.fruityvice": [[10, 1, 1, "", "Fruityvice"]], "nokey.food.fruityvice.Fruityvice": [[10, 2, 1, "", "get_all_fruit"], [10, 2, 1, "", "get_docs_url"], [10, 2, 1, "", "get_fruit_by_family"], [10, 2, 1, "", "get_fruit_by_genus"], [10, 2, 1, "", "get_fruit_by_nutrition"], [10, 2, 1, "", "get_fruit_by_order"]], "nokey.games": [[11, 0, 0, "-", "free_to_game"], [11, 0, 0, "-", "open_trivia_db"]], "nokey.games.free_to_game": [[11, 1, 1, "", "FreeToGame"]], "nokey.games.free_to_game.FreeToGame": [[11, 2, 1, "", "filter_games"], [11, 2, 1, "", "get_all_live_games"], [11, 2, 1, "", "get_docs_url"], [11, 2, 1, "", "get_game_by_id"], [11, 2, 1, "", "get_games_by_category"], [11, 2, 1, "", "get_games_by_platform"], [11, 2, 1, "", "get_games_by_platform_and_category"]], "nokey.games.open_trivia_db": [[11, 1, 1, "", "OpenTriviaDB"]], "nokey.games.open_trivia_db.OpenTriviaDB": [[11, 2, 1, "", "get_docs_url"], [11, 2, 1, "", "get_random_trivia_questions"], [11, 2, 1, "", "get_specified_trivia_questions"]], "nokey.geolocation": [[12, 0, 0, "-", "ip_api"], [12, 0, 0, "-", "zippopotamus"]], "nokey.geolocation.ip_api": [[12, 1, 1, "", "IP_API"]], "nokey.geolocation.ip_api.IP_API": [[12, 2, 1, "", "get_docs_url"], [12, 2, 1, "", "get_location_info_by_ip_address"]], "nokey.geolocation.zippopotamus": [[12, 1, 1, "", "Zippopotomus"]], "nokey.geolocation.zippopotamus.Zippopotomus": [[12, 2, 1, "", "get_docs_url"], [12, 2, 1, "", "get_info_by_zipcode"], [12, 2, 1, "", "get_zipcode_by_city"]], "nokey.government": [[13, 0, 0, "-", "federal_register"]], "nokey.government.federal_register": [[13, 1, 1, "", "FederalRegister"]], "nokey.government.federal_register.FederalRegister": [[13, 2, 1, "", "get_agencies_details"], [13, 2, 1, "", "get_agency_by_slug"], [13, 2, 1, "", "get_current_public_inspection_documents"], [13, 2, 1, "", "get_docs_url"], [13, 2, 1, "", "get_document_counts_by_facet"], [13, 2, 1, "", "get_document_toc_by_date"], [13, 2, 1, "", "get_fed_reg_document"], [13, 2, 1, "", "get_image_variants_by_id"], [13, 2, 1, "", "get_multiple_fed_reg_documents"], [13, 2, 1, "", "get_multiple_public_inspection_documents"], [13, 2, 1, "", "get_public_inspection_document"], [13, 2, 1, "", "get_suggested_search_by_slug"], [13, 2, 1, "", "get_suggested_searches_by_section"], [13, 2, 1, "", "search_all_documents"], [13, 2, 1, "", "search_all_public_inspection_documents"]], "nokey.helperFuncs": [[14, 0, 0, "-", "get_api_list"], [14, 0, 0, "-", "make_request"], [14, 0, 0, "-", "nokey_apis"]], "nokey.helperFuncs.get_api_list": [[14, 3, 1, "", "get_api_list"]], "nokey.helperFuncs.make_request": [[14, 3, 1, "", "make_request"], [14, 3, 1, "", "make_request_for_content"], [14, 3, 1, "", "make_request_with_params"]], "nokey.inspiration": [[15, 0, 0, "-", "dictum"]], "nokey.inspiration.dictum": [[15, 1, 1, "", "Dictum"]], "nokey.inspiration.dictum.Dictum": [[15, 2, 1, "", "get_docs_url"], [15, 2, 1, "", "get_inspiring_author_by_id"], [15, 2, 1, "", "get_inspiring_authors"], [15, 2, 1, "", "get_inspiring_quote_by_quote_id"], [15, 2, 1, "", "get_inspiring_quotes"], [15, 2, 1, "", "get_inspiring_quotes_by_author_id"], [15, 2, 1, "", "get_languages"], [15, 2, 1, "", "get_number_of_quotes_and_authors"], [15, 2, 1, "", "get_random_quote"]], "nokey.jokes": [[16, 0, 0, "-", "joke_api"]], "nokey.jokes.joke_api": [[16, 1, 1, "", "JokeAPI"]], "nokey.jokes.joke_api.JokeAPI": [[16, 2, 1, "", "get_docs_url"], [16, 2, 1, "", "get_joke"]], "nokey.language": [[17, 0, 0, "-", "free_dictionary"]], "nokey.language.free_dictionary": [[17, 1, 1, "", "FreeDictionary"]], "nokey.language.free_dictionary.FreeDictionary": [[17, 2, 1, "", "get_docs_url"], [17, 2, 1, "", "look_up_word"]], "nokey.random": [[18, 0, 0, "-", "random_user"]], "nokey.random.random_user": [[18, 1, 1, "", "RandomUserGenerator"]], "nokey.random.random_user.RandomUserGenerator": [[18, 2, 1, "", "generate_random_user"], [18, 2, 1, "", "get_docs_url"]], "nokey.science_and_nature": [[19, 0, 0, "-", "integrated_taxonomic_information_system"], [19, 0, 0, "-", "nobel_prize"]], "nokey.science_and_nature.integrated_taxonomic_information_system": [[19, 1, 1, "", "ITIS"]], "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS": [[19, 2, 1, "", "get_ITIS_terms"], [19, 2, 1, "", "get_ITIS_terms_from_common_name"], [19, 2, 1, "", "get_ITIS_terms_from_scientific_name"], [19, 2, 1, "", "get_LSID_from_TSN"], [19, 2, 1, "", "get_TSN_from_LSID"], [19, 2, 1, "", "get_TSNs_by_vernacular_language"], [19, 2, 1, "", "get_accepted_names_from_TSN"], [19, 2, 1, "", "get_any_match_count"], [19, 2, 1, "", "get_comment_detail_from_TSN"], [19, 2, 1, "", "get_common_names_from_TSN"], [19, 2, 1, "", "get_core_metadata_from_TSN"], [19, 2, 1, "", "get_coverage_from_TSN"], [19, 2, 1, "", "get_credibility_rating_from_TSN"], [19, 2, 1, "", "get_credibility_ratings"], [19, 2, 1, "", "get_currency_from_TSN"], [19, 2, 1, "", "get_date_data_from_TSN"], [19, 2, 1, "", "get_description"], [19, 2, 1, "", "get_docs_url"], [19, 2, 1, "", "get_experts_from_TSN"], [19, 2, 1, "", "get_full_hierarchy_from_TSN"], [19, 2, 1, "", "get_full_record_from_LSID"], [19, 2, 1, "", "get_full_record_from_TSN"], [19, 2, 1, "", "get_geographic_divisions_from_TSN"], [19, 2, 1, "", "get_geographic_values"], [19, 2, 1, "", "get_global_species_completeness_from_TSN"], [19, 2, 1, "", "get_hierarchy_down_from_TSN"], [19, 2, 1, "", "get_hierarchy_up_from_TSN"], [19, 2, 1, "", "get_jurisdiction_values"], [19, 2, 1, "", "get_jurisdictional_origin_from_TSN"], [19, 2, 1, "", "get_jurisdictional_origin_values"], [19, 2, 1, "", "get_kingdom_name_from_TSN"], [19, 2, 1, "", "get_kingdom_names"], [19, 2, 1, "", "get_last_change_date"], [19, 2, 1, "", "get_other_sources_from_TSN"], [19, 2, 1, "", "get_parent_TSN_from_TSN"], [19, 2, 1, "", "get_publications_from_TSN"], [19, 2, 1, "", "get_rank_names"], [19, 2, 1, "", "get_record_from_LSID"], [19, 2, 1, "", "get_review_year_from_TSN"], [19, 2, 1, "", "get_scientific_name_from_TSN"], [19, 2, 1, "", "get_synonym_names_from_TSN"], [19, 2, 1, "", "get_taxon_authorship_from_TSN"], [19, 2, 1, "", "get_taxonomic_rank_name_from_TSN"], [19, 2, 1, "", "get_taxonomic_usage_from_TSN"], [19, 2, 1, "", "get_unacceptability_reason_from_TSN"], [19, 2, 1, "", "get_vernacular_languages"], [19, 2, 1, "", "search_by_common_name"], [19, 2, 1, "", "search_by_common_name_begins_with"], [19, 2, 1, "", "search_by_common_name_ends_with"], [19, 2, 1, "", "search_by_scientific_name"], [19, 2, 1, "", "search_for_any_match"], [19, 2, 1, "", "search_for_any_match_paged"]], "nokey.science_and_nature.nobel_prize": [[19, 1, 1, "", "NobelPrizeAPI"]], "nokey.science_and_nature.nobel_prize.NobelPrizeAPI": [[19, 2, 1, "", "get_all_nobel_prizes"], [19, 2, 1, "", "get_docs_url"], [19, 2, 1, "", "get_nobel_laureate_by_id"], [19, 2, 1, "", "get_nobel_prize_laureates"], [19, 2, 1, "", "get_one_nobel_prize"]], "nokey.spaceflight": [[20, 0, 0, "-", "spaceflight_news"]], "nokey.spaceflight.spaceflight_news": [[20, 1, 1, "", "SpaceflightNews"]], "nokey.spaceflight.spaceflight_news.SpaceflightNews": [[20, 2, 1, "", "get_article_by_id"], [20, 2, 1, "", "get_articles"], [20, 2, 1, "", "get_blog_by_id"], [20, 2, 1, "", "get_blogs"], [20, 2, 1, "", "get_docs_url"], [20, 2, 1, "", "get_info"], [20, 2, 1, "", "get_report_by_id"], [20, 2, 1, "", "get_reports"]], "nokey.tv_and_film": [[21, 0, 0, "-", "star_trek_api"]], "nokey.tv_and_film.star_trek_api": [[21, 1, 1, "", "STAPI"]], "nokey.tv_and_film.star_trek_api.STAPI": [[21, 2, 1, "", "get_animal_by_id"], [21, 2, 1, "", "get_animals"], [21, 2, 1, "", "get_astronomical_object_by_id"], [21, 2, 1, "", "get_astronomical_objects"], [21, 2, 1, "", "get_book_by_id"], [21, 2, 1, "", "get_book_collection_by_id"], [21, 2, 1, "", "get_book_collections"], [21, 2, 1, "", "get_book_series"], [21, 2, 1, "", "get_book_series_by_id"], [21, 2, 1, "", "get_books"], [21, 2, 1, "", "get_character_by_id"], [21, 2, 1, "", "get_characters"], [21, 2, 1, "", "get_comic_by_id"], [21, 2, 1, "", "get_comic_collection_by_id"], [21, 2, 1, "", "get_comic_collections"], [21, 2, 1, "", "get_comic_series"], [21, 2, 1, "", "get_comic_series_by_id"], [21, 2, 1, "", "get_comic_strip_by_id"], [21, 2, 1, "", "get_comic_strips"], [21, 2, 1, "", "get_comics"], [21, 2, 1, "", "get_companies"], [21, 2, 1, "", "get_company_by_id"], [21, 2, 1, "", "get_conflict_by_id"], [21, 2, 1, "", "get_conflicts"], [21, 2, 1, "", "get_data_version"], [21, 2, 1, "", "get_docs_url"], [21, 2, 1, "", "get_element_by_id"], [21, 2, 1, "", "get_elements"], [21, 2, 1, "", "get_episode_by_id"], [21, 2, 1, "", "get_episodes"], [21, 2, 1, "", "get_food_by_id"], [21, 2, 1, "", "get_foods"], [21, 2, 1, "", "get_literature"], [21, 2, 1, "", "get_literature_by_id"], [21, 2, 1, "", "get_location_by_id"], [21, 2, 1, "", "get_locations"], [21, 2, 1, "", "get_magazine_by_id"], [21, 2, 1, "", "get_magazine_series"], [21, 2, 1, "", "get_magazine_series_by_id"], [21, 2, 1, "", "get_magazines"], [21, 2, 1, "", "get_material_by_id"], [21, 2, 1, "", "get_materials"], [21, 2, 1, "", "get_medical_condition_by_id"], [21, 2, 1, "", "get_medical_conditions"], [21, 2, 1, "", "get_movie_by_id"], [21, 2, 1, "", "get_movies"], [21, 2, 1, "", "get_occupation_by_id"], [21, 2, 1, "", "get_occupations"], [21, 2, 1, "", "get_organization_by_id"], [21, 2, 1, "", "get_organizations"], [21, 2, 1, "", "get_performer_by_id"], [21, 2, 1, "", "get_performers"], [21, 2, 1, "", "get_season_by_id"], [21, 2, 1, "", "get_seasons"], [21, 2, 1, "", "get_series"], [21, 2, 1, "", "get_series_by_id"], [21, 2, 1, "", "get_soundtrack_by_id"], [21, 2, 1, "", "get_soundtracks"], [21, 2, 1, "", "get_spacecraft_by_id"], [21, 2, 1, "", "get_spacecraft_class_by_id"], [21, 2, 1, "", "get_spacecraft_classes"], [21, 2, 1, "", "get_spacecrafts"], [21, 2, 1, "", "get_species"], [21, 2, 1, "", "get_species_by_id"], [21, 2, 1, "", "get_staff"], [21, 2, 1, "", "get_staff_by_id"], [21, 2, 1, "", "get_technologies"], [21, 2, 1, "", "get_technology_by_id"], [21, 2, 1, "", "get_title_by_id"], [21, 2, 1, "", "get_titles"], [21, 2, 1, "", "get_trading_card_by_id"], [21, 2, 1, "", "get_trading_card_deck_by_id"], [21, 2, 1, "", "get_trading_card_decks"], [21, 2, 1, "", "get_trading_card_set_by_id"], [21, 2, 1, "", "get_trading_card_sets"], [21, 2, 1, "", "get_trading_cards"], [21, 2, 1, "", "get_video_game_by_id"], [21, 2, 1, "", "get_video_games"], [21, 2, 1, "", "get_video_release_by_id"], [21, 2, 1, "", "get_video_releases"], [21, 2, 1, "", "get_weapon_by_id"], [21, 2, 1, "", "get_weapons"]], "nokey.weather": [[22, 0, 0, "-", "national_weather_service"]], "nokey.weather.national_weather_service": [[22, 1, 1, "", "NationalWeatherService"]], "nokey.weather.national_weather_service.NationalWeatherService": [[22, 2, 1, "", "get_NWS_office_headline_by_headline_id"], [22, 2, 1, "", "get_NWS_office_headlines"], [22, 2, 1, "", "get_NWS_office_metadata"], [22, 2, 1, "", "get_active_alerts"], [22, 2, 1, "", "get_active_alerts_by_area"], [22, 2, 1, "", "get_active_alerts_by_region"], [22, 2, 1, "", "get_active_alerts_by_zone"], [22, 2, 1, "", "get_active_alerts_count"], [22, 2, 1, "", "get_alert_by_id"], [22, 2, 1, "", "get_alert_types"], [22, 2, 1, "", "get_alerts"], [22, 2, 1, "", "get_cwsu_advisories"], [22, 2, 1, "", "get_cwsu_advisories_by_date_and_seq"], [22, 2, 1, "", "get_cwsu_metadata"], [22, 2, 1, "", "get_docs_url"], [22, 2, 1, "", "get_glossary"], [22, 2, 1, "", "get_observation_stations_by_gridpoints"], [22, 2, 1, "", "get_observation_stations_by_zone"], [22, 2, 1, "", "get_observations_by_station"], [22, 2, 1, "", "get_radar_queue_metadata"], [22, 2, 1, "", "get_radar_server_metadata_by_id"], [22, 2, 1, "", "get_radar_servers"], [22, 2, 1, "", "get_radar_station_alarms_metadata_by_id"], [22, 2, 1, "", "get_radar_station_metadata_by_id"], [22, 2, 1, "", "get_radar_stations"], [22, 2, 1, "", "get_radar_wind_profiler_metadata"], [22, 2, 1, "", "get_raw_data_by_gridpoints"], [22, 2, 1, "", "get_sigmets_by_atsu"], [22, 2, 1, "", "get_sigmets_by_atsu_and_date"], [22, 2, 1, "", "get_specific_sigmet"], [22, 2, 1, "", "get_station_metadata"], [22, 2, 1, "", "get_station_observation_by_time"], [22, 2, 1, "", "get_stations"], [22, 2, 1, "", "get_taf_by_date_time"], [22, 2, 1, "", "get_tafs_by_station"], [22, 2, 1, "", "get_text_product_by_id"], [22, 2, 1, "", "get_text_product_locations"], [22, 2, 1, "", "get_text_product_locations_by_type"], [22, 2, 1, "", "get_text_product_types"], [22, 2, 1, "", "get_text_product_types_by_location"], [22, 2, 1, "", "get_text_products"], [22, 2, 1, "", "get_text_products_by_type"], [22, 2, 1, "", "get_text_products_by_type_and_location"], [22, 2, 1, "", "get_textual_forecast_by_gridpoints"], [22, 2, 1, "", "get_textual_hourly_forecast_by_gridpoints"], [22, 2, 1, "", "get_zone_forecast"], [22, 2, 1, "", "get_zone_metadata"], [22, 2, 1, "", "get_zone_observations"], [22, 2, 1, "", "get_zones"], [22, 2, 1, "", "get_zones_by_type"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "nokei": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "": 0, "document": 0, "content": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "indic": 0, "tabl": 0, "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "subpackag": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "anim": 3, "submodul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "dog_api": 3, "books_and_literatur": 4, "gutendex": 4, "calendar": 5, "nager_d": 5, "country_info": 6, "rest_countri": 6, "developer_tool": 7, "apis_guru": 7, "filter_list": 7, "microlink": 7, "url_hau": 7, "url_shorten": 7, "educ": 8, "university_domains_and_nam": 8, "finance_and_crypto": 9, "coinmap": 9, "exchange_api": 9, "wall_street_bet": 9, "food": 10, "fruityvic": 10, "game": 11, "free_to_gam": 11, "open_trivia_db": 11, "geoloc": 12, "ip_api": 12, "zippopotamu": 12, "govern": 13, "federal_regist": 13, "helperfunc": 14, "get_api_list": 14, "make_request": 14, "nokey_api": 14, "inspir": 15, "dictum": 15, "joke": 16, "joke_api": 16, "languag": 17, "free_dictionari": 17, "random": 18, "random_us": 18, "science_and_natur": 19, "integrated_taxonomic_information_system": 19, "nobel_pr": 19, "spaceflight": 20, "spaceflight_new": 20, "tv_and_film": 21, "star_trek_api": 21, "weather": 22, "national_weather_servic": 22}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Welcome to nokey\u2019s documentation!": [[0, "welcome-to-nokey-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "nokey": [[1, "nokey"]], "nokey package": [[2, "nokey-package"]], "Subpackages": [[2, "subpackages"]], "Module contents": [[2, "module-nokey"], [3, "module-nokey.animals"], [4, "module-nokey.books_and_literature"], [5, "module-nokey.calendar"], [6, "module-nokey.country_info"], [7, "module-nokey.developer_tools"], [8, "module-nokey.education"], [9, "module-nokey.finance_and_crypto"], [10, "module-nokey.food"], [11, "module-nokey.games"], [12, "module-nokey.geolocation"], [13, "module-nokey.government"], [14, "module-nokey.helperFuncs"], [15, "module-nokey.inspiration"], [16, "module-nokey.jokes"], [17, "module-nokey.language"], [18, "module-nokey.random"], [19, "module-nokey.science_and_nature"], [20, "module-nokey.spaceflight"], [21, "module-nokey.tv_and_film"], [22, "module-nokey.weather"]], "nokey.animals package": [[3, "nokey-animals-package"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"]], "nokey.animals.dog_api module": [[3, "module-nokey.animals.dog_api"]], "nokey.books_and_literature package": [[4, "nokey-books-and-literature-package"]], "nokey.books_and_literature.gutendex module": [[4, "module-nokey.books_and_literature.gutendex"]], "nokey.calendar package": [[5, "nokey-calendar-package"]], "nokey.calendar.nager_date module": [[5, "module-nokey.calendar.nager_date"]], "nokey.country_info package": [[6, "nokey-country-info-package"]], "nokey.country_info.rest_country module": [[6, "module-nokey.country_info.rest_country"]], "nokey.developer_tools package": [[7, "nokey-developer-tools-package"]], "nokey.developer_tools.apis_guru module": [[7, "module-nokey.developer_tools.apis_guru"]], "nokey.developer_tools.filter_lists module": [[7, "module-nokey.developer_tools.filter_lists"]], "nokey.developer_tools.microlink module": [[7, "module-nokey.developer_tools.microlink"]], "nokey.developer_tools.url_haus module": [[7, "module-nokey.developer_tools.url_haus"]], "nokey.developer_tools.url_shortener module": [[7, "module-nokey.developer_tools.url_shortener"]], "nokey.education package": [[8, "nokey-education-package"]], "nokey.education.university_domains_and_names module": [[8, "module-nokey.education.university_domains_and_names"]], "nokey.finance_and_crypto package": [[9, "nokey-finance-and-crypto-package"]], "nokey.finance_and_crypto.coinmap module": [[9, "module-nokey.finance_and_crypto.coinmap"]], "nokey.finance_and_crypto.exchange_api module": [[9, "module-nokey.finance_and_crypto.exchange_api"]], "nokey.finance_and_crypto.wall_street_bets module": [[9, "module-nokey.finance_and_crypto.wall_street_bets"]], "nokey.food package": [[10, "nokey-food-package"]], "nokey.food.fruityvice module": [[10, "module-nokey.food.fruityvice"]], "nokey.games package": [[11, "nokey-games-package"]], "nokey.games.free_to_game module": [[11, "module-nokey.games.free_to_game"]], "nokey.games.open_trivia_db module": [[11, "module-nokey.games.open_trivia_db"]], "nokey.geolocation package": [[12, "nokey-geolocation-package"]], "nokey.geolocation.ip_api module": [[12, "module-nokey.geolocation.ip_api"]], "nokey.geolocation.zippopotamus module": [[12, "module-nokey.geolocation.zippopotamus"]], "nokey.government package": [[13, "nokey-government-package"]], "nokey.government.federal_register module": [[13, "module-nokey.government.federal_register"]], "nokey.helperFuncs package": [[14, "nokey-helperfuncs-package"]], "nokey.helperFuncs.get_api_list module": [[14, "module-nokey.helperFuncs.get_api_list"]], "nokey.helperFuncs.make_request module": [[14, "module-nokey.helperFuncs.make_request"]], "nokey.helperFuncs.nokey_apis module": [[14, "module-nokey.helperFuncs.nokey_apis"]], "nokey.inspiration package": [[15, "nokey-inspiration-package"]], "nokey.inspiration.dictum module": [[15, "module-nokey.inspiration.dictum"]], "nokey.jokes package": [[16, "nokey-jokes-package"]], "nokey.jokes.joke_api module": [[16, "module-nokey.jokes.joke_api"]], "nokey.language package": [[17, "nokey-language-package"]], "nokey.language.free_dictionary module": [[17, "module-nokey.language.free_dictionary"]], "nokey.random package": [[18, "nokey-random-package"]], "nokey.random.random_user module": [[18, "module-nokey.random.random_user"]], "nokey.science_and_nature package": [[19, "nokey-science-and-nature-package"]], "nokey.science_and_nature.integrated_taxonomic_information_system module": [[19, "module-nokey.science_and_nature.integrated_taxonomic_information_system"]], "nokey.science_and_nature.nobel_prize module": [[19, "module-nokey.science_and_nature.nobel_prize"]], "nokey.spaceflight package": [[20, "nokey-spaceflight-package"]], "nokey.spaceflight.spaceflight_news module": [[20, "module-nokey.spaceflight.spaceflight_news"]], "nokey.tv_and_film package": [[21, "nokey-tv-and-film-package"]], "nokey.tv_and_film.star_trek_api module": [[21, "module-nokey.tv_and_film.star_trek_api"]], "nokey.weather package": [[22, "nokey-weather-package"]], "nokey.weather.national_weather_service module": [[22, "module-nokey.weather.national_weather_service"]]}, "indexentries": {"module": [[2, "module-nokey"], [3, "module-nokey.animals"], [3, "module-nokey.animals.dog_api"], [4, "module-nokey.books_and_literature"], [4, "module-nokey.books_and_literature.gutendex"], [5, "module-nokey.calendar"], [5, "module-nokey.calendar.nager_date"], [6, "module-nokey.country_info"], [6, "module-nokey.country_info.rest_country"], [7, "module-nokey.developer_tools"], [7, "module-nokey.developer_tools.apis_guru"], [7, "module-nokey.developer_tools.filter_lists"], [7, "module-nokey.developer_tools.microlink"], [7, "module-nokey.developer_tools.url_haus"], [7, "module-nokey.developer_tools.url_shortener"], [8, "module-nokey.education"], [8, "module-nokey.education.university_domains_and_names"], [9, "module-nokey.finance_and_crypto"], [9, "module-nokey.finance_and_crypto.coinmap"], [9, "module-nokey.finance_and_crypto.exchange_api"], [9, "module-nokey.finance_and_crypto.wall_street_bets"], [10, "module-nokey.food"], [10, "module-nokey.food.fruityvice"], [11, "module-nokey.games"], [11, "module-nokey.games.free_to_game"], [11, "module-nokey.games.open_trivia_db"], [12, "module-nokey.geolocation"], [12, "module-nokey.geolocation.ip_api"], [12, "module-nokey.geolocation.zippopotamus"], [13, "module-nokey.government"], [13, "module-nokey.government.federal_register"], [14, "module-nokey.helperFuncs"], [14, "module-nokey.helperFuncs.get_api_list"], [14, "module-nokey.helperFuncs.make_request"], [14, "module-nokey.helperFuncs.nokey_apis"], [15, "module-nokey.inspiration"], [15, "module-nokey.inspiration.dictum"], [16, "module-nokey.jokes"], [16, "module-nokey.jokes.joke_api"], [17, "module-nokey.language"], [17, "module-nokey.language.free_dictionary"], [18, "module-nokey.random"], [18, "module-nokey.random.random_user"], [19, "module-nokey.science_and_nature"], [19, "module-nokey.science_and_nature.integrated_taxonomic_information_system"], [19, "module-nokey.science_and_nature.nobel_prize"], [20, "module-nokey.spaceflight"], [20, "module-nokey.spaceflight.spaceflight_news"], [21, "module-nokey.tv_and_film"], [21, "module-nokey.tv_and_film.star_trek_api"], [22, "module-nokey.weather"], [22, "module-nokey.weather.national_weather_service"]], "nokey": [[2, "module-nokey"]], "dogapi (class in nokey.animals.dog_api)": [[3, "nokey.animals.dog_api.DogAPI"]], "get_all_dog_breeds() (nokey.animals.dog_api.dogapi method)": [[3, "nokey.animals.dog_api.DogAPI.get_all_dog_breeds"]], "get_all_subbreeds() (nokey.animals.dog_api.dogapi method)": [[3, "nokey.animals.dog_api.DogAPI.get_all_subBreeds"]], "get_docs_url() (nokey.animals.dog_api.dogapi method)": [[3, "nokey.animals.dog_api.DogAPI.get_docs_url"]], "get_dog_images_by_breed() (nokey.animals.dog_api.dogapi method)": [[3, "nokey.animals.dog_api.DogAPI.get_dog_images_by_breed"]], "get_random_dog_image() (nokey.animals.dog_api.dogapi method)": [[3, "nokey.animals.dog_api.DogAPI.get_random_dog_image"]], "get_random_dog_image_by_breed() (nokey.animals.dog_api.dogapi method)": [[3, "nokey.animals.dog_api.DogAPI.get_random_dog_image_by_breed"]], "nokey.animals": [[3, "module-nokey.animals"]], "nokey.animals.dog_api": [[3, "module-nokey.animals.dog_api"]], "gutendex (class in nokey.books_and_literature.gutendex)": [[4, "nokey.books_and_literature.gutendex.Gutendex"]], "get_authors_before_specified_year() (nokey.books_and_literature.gutendex.gutendex method)": [[4, "nokey.books_and_literature.gutendex.Gutendex.get_authors_before_specified_year"]], "get_authors_within_date_range() (nokey.books_and_literature.gutendex.gutendex method)": [[4, "nokey.books_and_literature.gutendex.Gutendex.get_authors_within_date_range"]], "get_book_by_id() (nokey.books_and_literature.gutendex.gutendex method)": [[4, "nokey.books_and_literature.gutendex.Gutendex.get_book_by_id"]], "get_books() (nokey.books_and_literature.gutendex.gutendex method)": [[4, "nokey.books_and_literature.gutendex.Gutendex.get_books"]], "get_books_by_ids() (nokey.books_and_literature.gutendex.gutendex method)": [[4, "nokey.books_and_literature.gutendex.Gutendex.get_books_by_ids"]], "get_docs_url() (nokey.books_and_literature.gutendex.gutendex method)": [[4, "nokey.books_and_literature.gutendex.Gutendex.get_docs_url"]], "nokey.books_and_literature": [[4, "module-nokey.books_and_literature"]], "nokey.books_and_literature.gutendex": [[4, "module-nokey.books_and_literature.gutendex"]], "search_books_by_author_and_title() (nokey.books_and_literature.gutendex.gutendex method)": [[4, "nokey.books_and_literature.gutendex.Gutendex.search_books_by_author_and_title"]], "search_books_by_topic() (nokey.books_and_literature.gutendex.gutendex method)": [[4, "nokey.books_and_literature.gutendex.Gutendex.search_books_by_topic"]], "nagerdate (class in nokey.calendar.nager_date)": [[5, "nokey.calendar.nager_date.NagerDate"]], "get_available_countries() (nokey.calendar.nager_date.nagerdate method)": [[5, "nokey.calendar.nager_date.NagerDate.get_available_countries"]], "get_country_info() (nokey.calendar.nager_date.nagerdate method)": [[5, "nokey.calendar.nager_date.NagerDate.get_country_info"]], "get_docs_url() (nokey.calendar.nager_date.nagerdate method)": [[5, "nokey.calendar.nager_date.NagerDate.get_docs_url"]], "get_long_weekends_by_country() (nokey.calendar.nager_date.nagerdate method)": [[5, "nokey.calendar.nager_date.NagerDate.get_long_weekends_by_country"]], "get_public_holdiays_for_next_365() (nokey.calendar.nager_date.nagerdate method)": [[5, "nokey.calendar.nager_date.NagerDate.get_public_holdiays_for_next_365"]], "get_public_holidays() (nokey.calendar.nager_date.nagerdate method)": [[5, "nokey.calendar.nager_date.NagerDate.get_public_holidays"]], "get_public_holidays_worldwide_for_next_7() (nokey.calendar.nager_date.nagerdate method)": [[5, "nokey.calendar.nager_date.NagerDate.get_public_holidays_worldwide_for_next_7"]], "is_today_a_public_holiday() (nokey.calendar.nager_date.nagerdate method)": [[5, "nokey.calendar.nager_date.NagerDate.is_today_a_public_holiday"]], "nokey.calendar": [[5, "module-nokey.calendar"]], "nokey.calendar.nager_date": [[5, "module-nokey.calendar.nager_date"]], "restcountries (class in nokey.country_info.rest_country)": [[6, "nokey.country_info.rest_country.RestCountries"]], "get_all_countries() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_all_countries"]], "get_country_by_capital() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_country_by_capital"]], "get_country_by_code() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_country_by_code"]], "get_country_by_currency() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_country_by_currency"]], "get_country_by_language() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_country_by_language"]], "get_country_by_name() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_country_by_name"]], "get_country_by_region() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_country_by_region"]], "get_country_by_subregion() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_country_by_subregion"]], "get_country_by_translation() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_country_by_translation"]], "get_docs_url() (nokey.country_info.rest_country.restcountries method)": [[6, "nokey.country_info.rest_country.RestCountries.get_docs_url"]], "nokey.country_info": [[6, "module-nokey.country_info"]], "nokey.country_info.rest_country": [[6, "module-nokey.country_info.rest_country"]], "apisguru (class in nokey.developer_tools.apis_guru)": [[7, "nokey.developer_tools.apis_guru.APIsGuru"]], "filterlists (class in nokey.developer_tools.filter_lists)": [[7, "nokey.developer_tools.filter_lists.FilterLists"]], "microlink (class in nokey.developer_tools.microlink)": [[7, "nokey.developer_tools.microlink.Microlink"]], "urlhaus (class in nokey.developer_tools.url_haus)": [[7, "nokey.developer_tools.url_haus.URLHaus"]], "urlshortener (class in nokey.developer_tools.url_shortener)": [[7, "nokey.developer_tools.url_shortener.UrlShortener"]], "download_malware_sample() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.download_malware_sample"]], "get_all_apis() (nokey.developer_tools.apis_guru.apisguru method)": [[7, "nokey.developer_tools.apis_guru.APIsGuru.get_all_apis"]], "get_all_providers() (nokey.developer_tools.apis_guru.apisguru method)": [[7, "nokey.developer_tools.apis_guru.APIsGuru.get_all_providers"]], "get_apis_by_provider() (nokey.developer_tools.apis_guru.apisguru method)": [[7, "nokey.developer_tools.apis_guru.APIsGuru.get_apis_by_provider"]], "get_basic_metrics() (nokey.developer_tools.apis_guru.apisguru method)": [[7, "nokey.developer_tools.apis_guru.APIsGuru.get_basic_metrics"]], "get_color_palette_for_target_url() (nokey.developer_tools.microlink.microlink method)": [[7, "nokey.developer_tools.microlink.Microlink.get_color_palette_for_target_url"]], "get_docs_url() (nokey.developer_tools.apis_guru.apisguru method)": [[7, "nokey.developer_tools.apis_guru.APIsGuru.get_docs_url"]], "get_docs_url() (nokey.developer_tools.filter_lists.filterlists method)": [[7, "nokey.developer_tools.filter_lists.FilterLists.get_docs_url"]], "get_docs_url() (nokey.developer_tools.microlink.microlink method)": [[7, "nokey.developer_tools.microlink.Microlink.get_docs_url"]], "get_docs_url() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.get_docs_url"]], "get_docs_url() (nokey.developer_tools.url_shortener.urlshortener method)": [[7, "nokey.developer_tools.url_shortener.UrlShortener.get_docs_url"]], "get_info_about_host() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.get_info_about_host"]], "get_info_about_payload() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.get_info_about_payload"]], "get_info_about_signature() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.get_info_about_signature"]], "get_info_about_tag() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.get_info_about_tag"]], "get_info_about_url() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.get_info_about_url"]], "get_info_about_url_by_id() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.get_info_about_url_by_id"]], "get_languages() (nokey.developer_tools.filter_lists.filterlists method)": [[7, "nokey.developer_tools.filter_lists.FilterLists.get_languages"]], "get_licenses() (nokey.developer_tools.filter_lists.filterlists method)": [[7, "nokey.developer_tools.filter_lists.FilterLists.get_licenses"]], "get_list_by_id() (nokey.developer_tools.filter_lists.filterlists method)": [[7, "nokey.developer_tools.filter_lists.FilterLists.get_list_by_id"]], "get_lists() (nokey.developer_tools.filter_lists.filterlists method)": [[7, "nokey.developer_tools.filter_lists.FilterLists.get_lists"]], "get_maintainers() (nokey.developer_tools.filter_lists.filterlists method)": [[7, "nokey.developer_tools.filter_lists.FilterLists.get_maintainers"]], "get_metadata_for_target_url() (nokey.developer_tools.microlink.microlink method)": [[7, "nokey.developer_tools.microlink.Microlink.get_metadata_for_target_url"]], "get_particular_api_version_no_service_name() (nokey.developer_tools.apis_guru.apisguru method)": [[7, "nokey.developer_tools.apis_guru.APIsGuru.get_particular_api_version_no_service_name"]], "get_particular_api_version_with_service_name() (nokey.developer_tools.apis_guru.apisguru method)": [[7, "nokey.developer_tools.apis_guru.APIsGuru.get_particular_api_version_with_service_name"]], "get_pdf_of_target_url() (nokey.developer_tools.microlink.microlink method)": [[7, "nokey.developer_tools.microlink.Microlink.get_pdf_of_target_url"]], "get_recent_payloads() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.get_recent_payloads"]], "get_recent_urls() (nokey.developer_tools.url_haus.urlhaus method)": [[7, "nokey.developer_tools.url_haus.URLHaus.get_recent_urls"]], "get_screenshot_of_target_url() (nokey.developer_tools.microlink.microlink method)": [[7, "nokey.developer_tools.microlink.Microlink.get_screenshot_of_target_url"]], "get_service_names_by_provider() (nokey.developer_tools.apis_guru.apisguru method)": [[7, "nokey.developer_tools.apis_guru.APIsGuru.get_service_names_by_provider"]], "get_software() (nokey.developer_tools.filter_lists.filterlists method)": [[7, "nokey.developer_tools.filter_lists.FilterLists.get_software"]], "get_syntaxes() (nokey.developer_tools.filter_lists.filterlists method)": [[7, "nokey.developer_tools.filter_lists.FilterLists.get_syntaxes"]], "get_tags() (nokey.developer_tools.filter_lists.filterlists method)": [[7, "nokey.developer_tools.filter_lists.FilterLists.get_tags"]], "nokey.developer_tools": [[7, "module-nokey.developer_tools"]], "nokey.developer_tools.apis_guru": [[7, "module-nokey.developer_tools.apis_guru"]], "nokey.developer_tools.filter_lists": [[7, "module-nokey.developer_tools.filter_lists"]], "nokey.developer_tools.microlink": [[7, "module-nokey.developer_tools.microlink"]], "nokey.developer_tools.url_haus": [[7, "module-nokey.developer_tools.url_haus"]], "nokey.developer_tools.url_shortener": [[7, "module-nokey.developer_tools.url_shortener"]], "shorten_url() (nokey.developer_tools.url_shortener.urlshortener method)": [[7, "nokey.developer_tools.url_shortener.UrlShortener.shorten_url"]], "universitydomainsandnames (class in nokey.education.university_domains_and_names)": [[8, "nokey.education.university_domains_and_names.UniversityDomainsAndNames"]], "get_docs_url() (nokey.education.university_domains_and_names.universitydomainsandnames method)": [[8, "nokey.education.university_domains_and_names.UniversityDomainsAndNames.get_docs_url"]], "get_university_name_and_domain() (nokey.education.university_domains_and_names.universitydomainsandnames method)": [[8, "nokey.education.university_domains_and_names.UniversityDomainsAndNames.get_university_name_and_domain"]], "nokey.education": [[8, "module-nokey.education"]], "nokey.education.university_domains_and_names": [[8, "module-nokey.education.university_domains_and_names"]], "update_list() (nokey.education.university_domains_and_names.universitydomainsandnames method)": [[8, "nokey.education.university_domains_and_names.UniversityDomainsAndNames.update_list"]], "coinmap (class in nokey.finance_and_crypto.coinmap)": [[9, "nokey.finance_and_crypto.coinmap.Coinmap"]], "exchangeapi (class in nokey.finance_and_crypto.exchange_api)": [[9, "nokey.finance_and_crypto.exchange_api.ExchangeAPI"]], "wallstreetbets (class in nokey.finance_and_crypto.wall_street_bets)": [[9, "nokey.finance_and_crypto.wall_street_bets.WallstreetBets"]], "get_atm_operators() (nokey.finance_and_crypto.coinmap.coinmap method)": [[9, "nokey.finance_and_crypto.coinmap.Coinmap.get_atm_operators"]], "get_available_currencies() (nokey.finance_and_crypto.exchange_api.exchangeapi method)": [[9, "nokey.finance_and_crypto.exchange_api.ExchangeAPI.get_available_currencies"]], "get_coins() (nokey.finance_and_crypto.coinmap.coinmap method)": [[9, "nokey.finance_and_crypto.coinmap.Coinmap.get_coins"]], "get_comments_by_venue_id() (nokey.finance_and_crypto.coinmap.coinmap method)": [[9, "nokey.finance_and_crypto.coinmap.Coinmap.get_comments_by_venue_id"]], "get_docs_url() (nokey.finance_and_crypto.coinmap.coinmap method)": [[9, "nokey.finance_and_crypto.coinmap.Coinmap.get_docs_url"]], "get_docs_url() (nokey.finance_and_crypto.exchange_api.exchangeapi method)": [[9, "nokey.finance_and_crypto.exchange_api.ExchangeAPI.get_docs_url"]], "get_docs_url() (nokey.finance_and_crypto.wall_street_bets.wallstreetbets method)": [[9, "nokey.finance_and_crypto.wall_street_bets.WallstreetBets.get_docs_url"]], "get_rates_from_base() (nokey.finance_and_crypto.exchange_api.exchangeapi method)": [[9, "nokey.finance_and_crypto.exchange_api.ExchangeAPI.get_rates_from_base"]], "get_ratings_by_venue_id() (nokey.finance_and_crypto.coinmap.coinmap method)": [[9, "nokey.finance_and_crypto.coinmap.Coinmap.get_ratings_by_venue_id"]], "get_stock_sentiment_from_reddit() (nokey.finance_and_crypto.wall_street_bets.wallstreetbets method)": [[9, "nokey.finance_and_crypto.wall_street_bets.WallstreetBets.get_stock_sentiment_from_reddit"]], "get_venue_by_id() (nokey.finance_and_crypto.coinmap.coinmap method)": [[9, "nokey.finance_and_crypto.coinmap.Coinmap.get_venue_by_id"]], "get_venues() (nokey.finance_and_crypto.coinmap.coinmap method)": [[9, "nokey.finance_and_crypto.coinmap.Coinmap.get_venues"]], "nokey.finance_and_crypto": [[9, "module-nokey.finance_and_crypto"]], "nokey.finance_and_crypto.coinmap": [[9, "module-nokey.finance_and_crypto.coinmap"]], "nokey.finance_and_crypto.exchange_api": [[9, "module-nokey.finance_and_crypto.exchange_api"]], "nokey.finance_and_crypto.wall_street_bets": [[9, "module-nokey.finance_and_crypto.wall_street_bets"]], "fruityvice (class in nokey.food.fruityvice)": [[10, "nokey.food.fruityvice.Fruityvice"]], "get_all_fruit() (nokey.food.fruityvice.fruityvice method)": [[10, "nokey.food.fruityvice.Fruityvice.get_all_fruit"]], "get_docs_url() (nokey.food.fruityvice.fruityvice method)": [[10, "nokey.food.fruityvice.Fruityvice.get_docs_url"]], "get_fruit_by_family() (nokey.food.fruityvice.fruityvice method)": [[10, "nokey.food.fruityvice.Fruityvice.get_fruit_by_family"]], "get_fruit_by_genus() (nokey.food.fruityvice.fruityvice method)": [[10, "nokey.food.fruityvice.Fruityvice.get_fruit_by_genus"]], "get_fruit_by_nutrition() (nokey.food.fruityvice.fruityvice method)": [[10, "nokey.food.fruityvice.Fruityvice.get_fruit_by_nutrition"]], "get_fruit_by_order() (nokey.food.fruityvice.fruityvice method)": [[10, "nokey.food.fruityvice.Fruityvice.get_fruit_by_order"]], "nokey.food": [[10, "module-nokey.food"]], "nokey.food.fruityvice": [[10, "module-nokey.food.fruityvice"]], "freetogame (class in nokey.games.free_to_game)": [[11, "nokey.games.free_to_game.FreeToGame"]], "opentriviadb (class in nokey.games.open_trivia_db)": [[11, "nokey.games.open_trivia_db.OpenTriviaDB"]], "filter_games() (nokey.games.free_to_game.freetogame method)": [[11, "nokey.games.free_to_game.FreeToGame.filter_games"]], "get_all_live_games() (nokey.games.free_to_game.freetogame method)": [[11, "nokey.games.free_to_game.FreeToGame.get_all_live_games"]], "get_docs_url() (nokey.games.free_to_game.freetogame method)": [[11, "nokey.games.free_to_game.FreeToGame.get_docs_url"]], "get_docs_url() (nokey.games.open_trivia_db.opentriviadb method)": [[11, "nokey.games.open_trivia_db.OpenTriviaDB.get_docs_url"]], "get_game_by_id() (nokey.games.free_to_game.freetogame method)": [[11, "nokey.games.free_to_game.FreeToGame.get_game_by_id"]], "get_games_by_category() (nokey.games.free_to_game.freetogame method)": [[11, "nokey.games.free_to_game.FreeToGame.get_games_by_category"]], "get_games_by_platform() (nokey.games.free_to_game.freetogame method)": [[11, "nokey.games.free_to_game.FreeToGame.get_games_by_platform"]], "get_games_by_platform_and_category() (nokey.games.free_to_game.freetogame method)": [[11, "nokey.games.free_to_game.FreeToGame.get_games_by_platform_and_category"]], "get_random_trivia_questions() (nokey.games.open_trivia_db.opentriviadb method)": [[11, "nokey.games.open_trivia_db.OpenTriviaDB.get_random_trivia_questions"]], "get_specified_trivia_questions() (nokey.games.open_trivia_db.opentriviadb method)": [[11, "nokey.games.open_trivia_db.OpenTriviaDB.get_specified_trivia_questions"]], "nokey.games": [[11, "module-nokey.games"]], "nokey.games.free_to_game": [[11, "module-nokey.games.free_to_game"]], "nokey.games.open_trivia_db": [[11, "module-nokey.games.open_trivia_db"]], "ip_api (class in nokey.geolocation.ip_api)": [[12, "nokey.geolocation.ip_api.IP_API"]], "zippopotomus (class in nokey.geolocation.zippopotamus)": [[12, "nokey.geolocation.zippopotamus.Zippopotomus"]], "get_docs_url() (nokey.geolocation.ip_api.ip_api method)": [[12, "nokey.geolocation.ip_api.IP_API.get_docs_url"]], "get_docs_url() (nokey.geolocation.zippopotamus.zippopotomus method)": [[12, "nokey.geolocation.zippopotamus.Zippopotomus.get_docs_url"]], "get_info_by_zipcode() (nokey.geolocation.zippopotamus.zippopotomus method)": [[12, "nokey.geolocation.zippopotamus.Zippopotomus.get_info_by_zipcode"]], "get_location_info_by_ip_address() (nokey.geolocation.ip_api.ip_api method)": [[12, "nokey.geolocation.ip_api.IP_API.get_location_info_by_ip_address"]], "get_zipcode_by_city() (nokey.geolocation.zippopotamus.zippopotomus method)": [[12, "nokey.geolocation.zippopotamus.Zippopotomus.get_zipcode_by_city"]], "nokey.geolocation": [[12, "module-nokey.geolocation"]], "nokey.geolocation.ip_api": [[12, "module-nokey.geolocation.ip_api"]], "nokey.geolocation.zippopotamus": [[12, "module-nokey.geolocation.zippopotamus"]], "federalregister (class in nokey.government.federal_register)": [[13, "nokey.government.federal_register.FederalRegister"]], "get_agencies_details() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_agencies_details"]], "get_agency_by_slug() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_agency_by_slug"]], "get_current_public_inspection_documents() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_current_public_inspection_documents"]], "get_docs_url() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_docs_url"]], "get_document_counts_by_facet() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_document_counts_by_facet"]], "get_document_toc_by_date() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_document_toc_by_date"]], "get_fed_reg_document() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_fed_reg_document"]], "get_image_variants_by_id() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_image_variants_by_id"]], "get_multiple_fed_reg_documents() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_multiple_fed_reg_documents"]], "get_multiple_public_inspection_documents() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_multiple_public_inspection_documents"]], "get_public_inspection_document() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_public_inspection_document"]], "get_suggested_search_by_slug() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_suggested_search_by_slug"]], "get_suggested_searches_by_section() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.get_suggested_searches_by_section"]], "nokey.government": [[13, "module-nokey.government"]], "nokey.government.federal_register": [[13, "module-nokey.government.federal_register"]], "search_all_documents() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.search_all_documents"]], "search_all_public_inspection_documents() (nokey.government.federal_register.federalregister method)": [[13, "nokey.government.federal_register.FederalRegister.search_all_public_inspection_documents"]], "get_api_list() (in module nokey.helperfuncs.get_api_list)": [[14, "nokey.helperFuncs.get_api_list.get_api_list"]], "make_request() (in module nokey.helperfuncs.make_request)": [[14, "nokey.helperFuncs.make_request.make_request"]], "make_request_for_content() (in module nokey.helperfuncs.make_request)": [[14, "nokey.helperFuncs.make_request.make_request_for_content"]], "make_request_with_params() (in module nokey.helperfuncs.make_request)": [[14, "nokey.helperFuncs.make_request.make_request_with_params"]], "nokey.helperfuncs": [[14, "module-nokey.helperFuncs"]], "nokey.helperfuncs.get_api_list": [[14, "module-nokey.helperFuncs.get_api_list"]], "nokey.helperfuncs.make_request": [[14, "module-nokey.helperFuncs.make_request"]], "nokey.helperfuncs.nokey_apis": [[14, "module-nokey.helperFuncs.nokey_apis"]], "dictum (class in nokey.inspiration.dictum)": [[15, "nokey.inspiration.dictum.Dictum"]], "get_docs_url() (nokey.inspiration.dictum.dictum method)": [[15, "nokey.inspiration.dictum.Dictum.get_docs_url"]], "get_inspiring_author_by_id() (nokey.inspiration.dictum.dictum method)": [[15, "nokey.inspiration.dictum.Dictum.get_inspiring_author_by_id"]], "get_inspiring_authors() (nokey.inspiration.dictum.dictum method)": [[15, "nokey.inspiration.dictum.Dictum.get_inspiring_authors"]], "get_inspiring_quote_by_quote_id() (nokey.inspiration.dictum.dictum method)": [[15, "nokey.inspiration.dictum.Dictum.get_inspiring_quote_by_quote_id"]], "get_inspiring_quotes() (nokey.inspiration.dictum.dictum method)": [[15, "nokey.inspiration.dictum.Dictum.get_inspiring_quotes"]], "get_inspiring_quotes_by_author_id() (nokey.inspiration.dictum.dictum method)": [[15, "nokey.inspiration.dictum.Dictum.get_inspiring_quotes_by_author_id"]], "get_languages() (nokey.inspiration.dictum.dictum method)": [[15, "nokey.inspiration.dictum.Dictum.get_languages"]], "get_number_of_quotes_and_authors() (nokey.inspiration.dictum.dictum method)": [[15, "nokey.inspiration.dictum.Dictum.get_number_of_quotes_and_authors"]], "get_random_quote() (nokey.inspiration.dictum.dictum method)": [[15, "nokey.inspiration.dictum.Dictum.get_random_quote"]], "nokey.inspiration": [[15, "module-nokey.inspiration"]], "nokey.inspiration.dictum": [[15, "module-nokey.inspiration.dictum"]], "jokeapi (class in nokey.jokes.joke_api)": [[16, "nokey.jokes.joke_api.JokeAPI"]], "get_docs_url() (nokey.jokes.joke_api.jokeapi method)": [[16, "nokey.jokes.joke_api.JokeAPI.get_docs_url"]], "get_joke() (nokey.jokes.joke_api.jokeapi method)": [[16, "nokey.jokes.joke_api.JokeAPI.get_joke"]], "nokey.jokes": [[16, "module-nokey.jokes"]], "nokey.jokes.joke_api": [[16, "module-nokey.jokes.joke_api"]], "freedictionary (class in nokey.language.free_dictionary)": [[17, "nokey.language.free_dictionary.FreeDictionary"]], "get_docs_url() (nokey.language.free_dictionary.freedictionary method)": [[17, "nokey.language.free_dictionary.FreeDictionary.get_docs_url"]], "look_up_word() (nokey.language.free_dictionary.freedictionary method)": [[17, "nokey.language.free_dictionary.FreeDictionary.look_up_word"]], "nokey.language": [[17, "module-nokey.language"]], "nokey.language.free_dictionary": [[17, "module-nokey.language.free_dictionary"]], "randomusergenerator (class in nokey.random.random_user)": [[18, "nokey.random.random_user.RandomUserGenerator"]], "generate_random_user() (nokey.random.random_user.randomusergenerator method)": [[18, "nokey.random.random_user.RandomUserGenerator.generate_random_user"]], "get_docs_url() (nokey.random.random_user.randomusergenerator method)": [[18, "nokey.random.random_user.RandomUserGenerator.get_docs_url"]], "nokey.random": [[18, "module-nokey.random"]], "nokey.random.random_user": [[18, "module-nokey.random.random_user"]], "itis (class in nokey.science_and_nature.integrated_taxonomic_information_system)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS"]], "nobelprizeapi (class in nokey.science_and_nature.nobel_prize)": [[19, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI"]], "get_itis_terms() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_ITIS_terms"]], "get_itis_terms_from_common_name() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_ITIS_terms_from_common_name"]], "get_itis_terms_from_scientific_name() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_ITIS_terms_from_scientific_name"]], "get_lsid_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_LSID_from_TSN"]], "get_tsn_from_lsid() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_TSN_from_LSID"]], "get_tsns_by_vernacular_language() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_TSNs_by_vernacular_language"]], "get_accepted_names_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_accepted_names_from_TSN"]], "get_all_nobel_prizes() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[19, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_all_nobel_prizes"]], "get_any_match_count() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_any_match_count"]], "get_comment_detail_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_comment_detail_from_TSN"]], "get_common_names_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_common_names_from_TSN"]], "get_core_metadata_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_core_metadata_from_TSN"]], "get_coverage_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_coverage_from_TSN"]], "get_credibility_rating_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_credibility_rating_from_TSN"]], "get_credibility_ratings() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_credibility_ratings"]], "get_currency_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_currency_from_TSN"]], "get_date_data_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_date_data_from_TSN"]], "get_description() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_description"]], "get_docs_url() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_docs_url"]], "get_docs_url() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[19, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_docs_url"]], "get_experts_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_experts_from_TSN"]], "get_full_hierarchy_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_full_hierarchy_from_TSN"]], "get_full_record_from_lsid() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_full_record_from_LSID"]], "get_full_record_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_full_record_from_TSN"]], "get_geographic_divisions_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_geographic_divisions_from_TSN"]], "get_geographic_values() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_geographic_values"]], "get_global_species_completeness_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_global_species_completeness_from_TSN"]], "get_hierarchy_down_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_hierarchy_down_from_TSN"]], "get_hierarchy_up_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_hierarchy_up_from_TSN"]], "get_jurisdiction_values() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_jurisdiction_values"]], "get_jurisdictional_origin_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_jurisdictional_origin_from_TSN"]], "get_jurisdictional_origin_values() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_jurisdictional_origin_values"]], "get_kingdom_name_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_kingdom_name_from_TSN"]], "get_kingdom_names() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_kingdom_names"]], "get_last_change_date() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_last_change_date"]], "get_nobel_laureate_by_id() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[19, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_nobel_laureate_by_id"]], "get_nobel_prize_laureates() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[19, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_nobel_prize_laureates"]], "get_one_nobel_prize() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[19, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_one_nobel_prize"]], "get_other_sources_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_other_sources_from_TSN"]], "get_parent_tsn_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_parent_TSN_from_TSN"]], "get_publications_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_publications_from_TSN"]], "get_rank_names() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_rank_names"]], "get_record_from_lsid() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_record_from_LSID"]], "get_review_year_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_review_year_from_TSN"]], "get_scientific_name_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_scientific_name_from_TSN"]], "get_synonym_names_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_synonym_names_from_TSN"]], "get_taxon_authorship_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_taxon_authorship_from_TSN"]], "get_taxonomic_rank_name_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_taxonomic_rank_name_from_TSN"]], "get_taxonomic_usage_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_taxonomic_usage_from_TSN"]], "get_unacceptability_reason_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_unacceptability_reason_from_TSN"]], "get_vernacular_languages() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_vernacular_languages"]], "nokey.science_and_nature": [[19, "module-nokey.science_and_nature"]], "nokey.science_and_nature.integrated_taxonomic_information_system": [[19, "module-nokey.science_and_nature.integrated_taxonomic_information_system"]], "nokey.science_and_nature.nobel_prize": [[19, "module-nokey.science_and_nature.nobel_prize"]], "search_by_common_name() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_by_common_name"]], "search_by_common_name_begins_with() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_by_common_name_begins_with"]], "search_by_common_name_ends_with() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_by_common_name_ends_with"]], "search_by_scientific_name() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_by_scientific_name"]], "search_for_any_match() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_for_any_match"]], "search_for_any_match_paged() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[19, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_for_any_match_paged"]], "spaceflightnews (class in nokey.spaceflight.spaceflight_news)": [[20, "nokey.spaceflight.spaceflight_news.SpaceflightNews"]], "get_article_by_id() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[20, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_article_by_id"]], "get_articles() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[20, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_articles"]], "get_blog_by_id() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[20, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_blog_by_id"]], "get_blogs() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[20, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_blogs"]], "get_docs_url() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[20, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_docs_url"]], "get_info() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[20, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_info"]], "get_report_by_id() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[20, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_report_by_id"]], "get_reports() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[20, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_reports"]], "nokey.spaceflight": [[20, "module-nokey.spaceflight"]], "nokey.spaceflight.spaceflight_news": [[20, "module-nokey.spaceflight.spaceflight_news"]], "stapi (class in nokey.tv_and_film.star_trek_api)": [[21, "nokey.tv_and_film.star_trek_api.STAPI"]], "get_animal_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_animal_by_id"]], "get_animals() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_animals"]], "get_astronomical_object_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_astronomical_object_by_id"]], "get_astronomical_objects() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_astronomical_objects"]], "get_book_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_book_by_id"]], "get_book_collection_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_book_collection_by_id"]], "get_book_collections() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_book_collections"]], "get_book_series() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_book_series"]], "get_book_series_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_book_series_by_id"]], "get_books() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_books"]], "get_character_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_character_by_id"]], "get_characters() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_characters"]], "get_comic_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_by_id"]], "get_comic_collection_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_collection_by_id"]], "get_comic_collections() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_collections"]], "get_comic_series() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_series"]], "get_comic_series_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_series_by_id"]], "get_comic_strip_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_strip_by_id"]], "get_comic_strips() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_strips"]], "get_comics() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_comics"]], "get_companies() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_companies"]], "get_company_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_company_by_id"]], "get_conflict_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_conflict_by_id"]], "get_conflicts() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_conflicts"]], "get_data_version() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_data_version"]], "get_docs_url() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_docs_url"]], "get_element_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_element_by_id"]], "get_elements() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_elements"]], "get_episode_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_episode_by_id"]], "get_episodes() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_episodes"]], "get_food_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_food_by_id"]], "get_foods() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_foods"]], "get_literature() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_literature"]], "get_literature_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_literature_by_id"]], "get_location_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_location_by_id"]], "get_locations() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_locations"]], "get_magazine_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_magazine_by_id"]], "get_magazine_series() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_magazine_series"]], "get_magazine_series_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_magazine_series_by_id"]], "get_magazines() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_magazines"]], "get_material_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_material_by_id"]], "get_materials() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_materials"]], "get_medical_condition_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_medical_condition_by_id"]], "get_medical_conditions() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_medical_conditions"]], "get_movie_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_movie_by_id"]], "get_movies() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_movies"]], "get_occupation_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_occupation_by_id"]], "get_occupations() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_occupations"]], "get_organization_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_organization_by_id"]], "get_organizations() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_organizations"]], "get_performer_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_performer_by_id"]], "get_performers() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_performers"]], "get_season_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_season_by_id"]], "get_seasons() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_seasons"]], "get_series() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_series"]], "get_series_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_series_by_id"]], "get_soundtrack_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_soundtrack_by_id"]], "get_soundtracks() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_soundtracks"]], "get_spacecraft_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_spacecraft_by_id"]], "get_spacecraft_class_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_spacecraft_class_by_id"]], "get_spacecraft_classes() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_spacecraft_classes"]], "get_spacecrafts() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_spacecrafts"]], "get_species() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_species"]], "get_species_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_species_by_id"]], "get_staff() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_staff"]], "get_staff_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_staff_by_id"]], "get_technologies() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_technologies"]], "get_technology_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_technology_by_id"]], "get_title_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_title_by_id"]], "get_titles() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_titles"]], "get_trading_card_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_by_id"]], "get_trading_card_deck_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_deck_by_id"]], "get_trading_card_decks() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_decks"]], "get_trading_card_set_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_set_by_id"]], "get_trading_card_sets() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_sets"]], "get_trading_cards() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_cards"]], "get_video_game_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_video_game_by_id"]], "get_video_games() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_video_games"]], "get_video_release_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_video_release_by_id"]], "get_video_releases() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_video_releases"]], "get_weapon_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_weapon_by_id"]], "get_weapons() (nokey.tv_and_film.star_trek_api.stapi method)": [[21, "nokey.tv_and_film.star_trek_api.STAPI.get_weapons"]], "nokey.tv_and_film": [[21, "module-nokey.tv_and_film"]], "nokey.tv_and_film.star_trek_api": [[21, "module-nokey.tv_and_film.star_trek_api"]], "nationalweatherservice (class in nokey.weather.national_weather_service)": [[22, "nokey.weather.national_weather_service.NationalWeatherService"]], "get_nws_office_headline_by_headline_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_NWS_office_headline_by_headline_id"]], "get_nws_office_headlines() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_NWS_office_headlines"]], "get_nws_office_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_NWS_office_metadata"]], "get_active_alerts() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts"]], "get_active_alerts_by_area() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts_by_area"]], "get_active_alerts_by_region() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts_by_region"]], "get_active_alerts_by_zone() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts_by_zone"]], "get_active_alerts_count() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts_count"]], "get_alert_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_alert_by_id"]], "get_alert_types() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_alert_types"]], "get_alerts() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_alerts"]], "get_cwsu_advisories() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_cwsu_advisories"]], "get_cwsu_advisories_by_date_and_seq() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_cwsu_advisories_by_date_and_seq"]], "get_cwsu_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_cwsu_metadata"]], "get_docs_url() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_docs_url"]], "get_glossary() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_glossary"]], "get_observation_stations_by_gridpoints() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_observation_stations_by_gridpoints"]], "get_observation_stations_by_zone() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_observation_stations_by_zone"]], "get_observations_by_station() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_observations_by_station"]], "get_radar_queue_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_queue_metadata"]], "get_radar_server_metadata_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_server_metadata_by_id"]], "get_radar_servers() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_servers"]], "get_radar_station_alarms_metadata_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_station_alarms_metadata_by_id"]], "get_radar_station_metadata_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_station_metadata_by_id"]], "get_radar_stations() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_stations"]], "get_radar_wind_profiler_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_wind_profiler_metadata"]], "get_raw_data_by_gridpoints() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_raw_data_by_gridpoints"]], "get_sigmets_by_atsu() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_sigmets_by_atsu"]], "get_sigmets_by_atsu_and_date() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_sigmets_by_atsu_and_date"]], "get_specific_sigmet() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_specific_sigmet"]], "get_station_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_station_metadata"]], "get_station_observation_by_time() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_station_observation_by_time"]], "get_stations() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_stations"]], "get_taf_by_date_time() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_taf_by_date_time"]], "get_tafs_by_station() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_tafs_by_station"]], "get_text_product_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_by_id"]], "get_text_product_locations() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_locations"]], "get_text_product_locations_by_type() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_locations_by_type"]], "get_text_product_types() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_types"]], "get_text_product_types_by_location() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_types_by_location"]], "get_text_products() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_text_products"]], "get_text_products_by_type() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_text_products_by_type"]], "get_text_products_by_type_and_location() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_text_products_by_type_and_location"]], "get_textual_forecast_by_gridpoints() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_textual_forecast_by_gridpoints"]], "get_textual_hourly_forecast_by_gridpoints() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_textual_hourly_forecast_by_gridpoints"]], "get_zone_forecast() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_zone_forecast"]], "get_zone_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_zone_metadata"]], "get_zone_observations() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_zone_observations"]], "get_zones() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_zones"]], "get_zones_by_type() (nokey.weather.national_weather_service.nationalweatherservice method)": [[22, "nokey.weather.national_weather_service.NationalWeatherService.get_zones_by_type"]], "nokey.weather": [[22, "module-nokey.weather"]], "nokey.weather.national_weather_service": [[22, "module-nokey.weather.national_weather_service"]]}})