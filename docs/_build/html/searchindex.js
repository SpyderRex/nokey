Search.setIndex({"docnames": ["index", "modules", "nokey", "nokey.activities", "nokey.animals", "nokey.art_and_images", "nokey.books_and_literature", "nokey.calendar", "nokey.country_info", "nokey.developer_tools", "nokey.education", "nokey.finance_and_crypto", "nokey.food", "nokey.games", "nokey.geolocation", "nokey.government", "nokey.health", "nokey.helperFuncs", "nokey.inspiration", "nokey.jokes", "nokey.language", "nokey.random", "nokey.science_and_nature", "nokey.spaceflight", "nokey.tv_and_film", "nokey.weather"], "filenames": ["index.rst", "modules.rst", "nokey.rst", "nokey.activities.rst", "nokey.animals.rst", "nokey.art_and_images.rst", "nokey.books_and_literature.rst", "nokey.calendar.rst", "nokey.country_info.rst", "nokey.developer_tools.rst", "nokey.education.rst", "nokey.finance_and_crypto.rst", "nokey.food.rst", "nokey.games.rst", "nokey.geolocation.rst", "nokey.government.rst", "nokey.health.rst", "nokey.helperFuncs.rst", "nokey.inspiration.rst", "nokey.jokes.rst", "nokey.language.rst", "nokey.random.rst", "nokey.science_and_nature.rst", "nokey.spaceflight.rst", "nokey.tv_and_film.rst", "nokey.weather.rst"], "titles": ["Welcome to nokey\u2019s documentation!", "nokey", "nokey package", "nokey.activities package", "nokey.animals package", "nokey.art_and_images package", "nokey.books_and_literature package", "nokey.calendar package", "nokey.country_info package", "nokey.developer_tools package", "nokey.education package", "nokey.finance_and_crypto package", "nokey.food package", "nokey.games package", "nokey.geolocation package", "nokey.government package", "nokey.health package", "nokey.helperFuncs package", "nokey.inspiration package", "nokey.jokes package", "nokey.language package", "nokey.random package", "nokey.science_and_nature package", "nokey.spaceflight package", "nokey.tv_and_film package", "nokey.weather package"], "terms": {"packag": [0, 1], "subpackag": [0, 1], "modul": [0, 1], "index": [0, 23], "search": [0, 5, 6, 10, 11, 13, 15, 16, 18, 19, 22, 23], "page": [0, 5, 6, 15, 18, 22, 23, 24], "activ": [1, 2, 15, 16, 25], "submodul": [1, 2], "bored_api": [1, 2], "content": 1, "anim": [1, 2, 13, 24], "dog_api": [1, 2], "art_and_imag": [1, 2], "artic": [1, 2], "lorem_picsum": [1, 2], "books_and_literatur": [1, 2], "gutendex": [1, 2], "stephen_k": [1, 2], "calendar": [1, 2], "nager_d": [1, 2], "country_info": [1, 2], "rest_countri": [1, 2], "developer_tool": [1, 2], "apis_guru": [1, 2], "filter_list": [1, 2], "microlink": [1, 2], "url_hau": [1, 2], "url_shorten": [1, 2], "educ": [1, 2, 3, 5], "university_domains_and_nam": [1, 2], "finance_and_crypto": [1, 2], "coinmap": [1, 2], "exchange_api": [1, 2], "wallstreet_bet": [1, 2], "food": [1, 2, 24], "fruityvic": [1, 2], "game": [1, 2, 24], "free_to_gam": [1, 2], "open_trivia_db": [1, 2], "shadifi": [1, 2], "geoloc": [1, 2], "ip_api": [1, 2], "zippopotamu": [1, 2], "govern": [1, 2, 16], "federal_regist": [1, 2], "usa_spend": [1, 2], "health": [1, 2, 15], "open_diseas": [1, 2], "helperfunc": [1, 2], "get_api_list": [1, 2], "make_request": [1, 2], "nokey_api": [1, 2], "throttler": [1, 2], "inspir": [1, 2], "dictum": [1, 2], "joke": [1, 2], "joke_api": [1, 2], "languag": [1, 2, 6, 8, 9, 18, 19, 22], "free_dictionari": [1, 2], "random": [1, 2, 3, 4, 5, 13, 18], "random_us": [1, 2], "science_and_natur": [1, 2], "integrated_taxonomic_information_system": [1, 2], "nobel_pr": [1, 2], "spaceflight": [1, 2], "spaceflight_new": [1, 2], "tv_and_film": [1, 2], "star_trek_api": [1, 2], "weather": [1, 2], "national_weather_servic": [1, 2], "boredapi": [2, 3], "get_activity_by_kei": [2, 3], "get_docs_url": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "get_random_act": [2, 3], "get_random_activity_by_access": [2, 3], "get_random_activity_by_particip": [2, 3], "get_random_activity_by_pric": [2, 3], "get_random_activity_by_typ": [2, 3], "get_random_activity_within_accessibility_rang": [2, 3], "get_random_activity_within_price_rang": [2, 3], "dogapi": [2, 4], "base_url": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "about": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "get_all_dog_bre": [2, 4], "get_all_subbre": [2, 4], "get_dog_images_by_bre": [2, 4], "get_random_dog_imag": [2, 4], "get_random_dog_image_by_bre": [2, 4], "download_imag": [2, 5], "get_agent_by_id": [2, 5], "get_agent_role_by_id": [2, 5], "get_agent_roles_by_field": [2, 5], "get_agent_roles_data_field": [2, 5], "get_agent_type_by_id": [2, 5], "get_agent_types_by_field": [2, 5], "get_agent_types_data_field": [2, 5], "get_agents_by_field": [2, 5], "get_agents_data_field": [2, 5], "get_all_agent_rol": [2, 5], "get_all_agent_typ": [2, 5], "get_all_ag": [2, 5], "get_all_articl": [2, 5], "get_all_artist": [2, 5], "get_all_artwork_date_qualifi": [2, 5], "get_all_artwork_place_qualifi": [2, 5], "get_all_artwork_typ": [2, 5], "get_all_artwork": [2, 5], "get_all_category_term": [2, 5], "get_all_digital_catalog": [2, 5], "get_all_digital_publication_sect": [2, 5], "get_all_educator_resourc": [2, 5], "get_all_event_occurr": [2, 5], "get_all_event_program": [2, 5], "get_all_ev": [2, 5], "get_all_exhibit": [2, 5], "get_all_galleri": [2, 5], "get_all_generic_pag": [2, 5], "get_all_highlight": [2, 5], "get_all_imag": [2, 5], "get_all_mobile_sound": [2, 5], "get_all_plac": [2, 5], "get_all_press_releas": [2, 5], "get_all_printed_catalog": [2, 5], "get_all_product": [2, 5], "get_all_publ": [2, 5], "get_all_sect": [2, 5], "get_all_sit": [2, 5], "get_all_sound": [2, 5], "get_all_static_pag": [2, 5], "get_all_text": [2, 5], "get_all_tour": [2, 5], "get_all_video": [2, 5], "get_article_by_id": [2, 5, 23], "get_articles_by_field": [2, 5], "get_articles_data_field": [2, 5], "get_artist_by_id": [2, 5], "get_artists_by_field": [2, 5], "get_artists_data_field": [2, 5], "get_artwork_by_id": [2, 5], "get_artwork_date_qualifier_by_id": [2, 5], "get_artwork_date_qualifiers_by_field": [2, 5], "get_artwork_date_qualifiers_data_field": [2, 5], "get_artwork_place_qualifier_by_id": [2, 5], "get_artwork_place_qualifiers_by_field": [2, 5], "get_artwork_place_qualifiers_data_field": [2, 5], "get_artwork_type_by_id": [2, 5], "get_artwork_types_by_field": [2, 5], "get_artwork_types_data_field": [2, 5], "get_artworks_by_field": [2, 5], "get_artworks_data_field": [2, 5], "get_category_term_by_id": [2, 5], "get_category_terms_by_field": [2, 5], "get_category_terms_data_field": [2, 5], "get_digital_catalog_by_id": [2, 5], "get_digital_catalogs_by_field": [2, 5], "get_digital_catalogs_data_field": [2, 5], "get_digital_publication_section_by_id": [2, 5], "get_digital_publication_sections_by_field": [2, 5], "get_digital_publication_sections_data_field": [2, 5], "get_educator_resource_by_id": [2, 5], "get_educator_resources_by_field": [2, 5], "get_educator_resources_data_field": [2, 5], "get_event_by_id": [2, 5], "get_event_occurrence_by_id": [2, 5], "get_event_occurrences_by_field": [2, 5], "get_event_occurrences_data_field": [2, 5], "get_event_program_by_id": [2, 5], "get_event_programs_by_field": [2, 5], "get_event_programs_data_field": [2, 5], "get_events_by_field": [2, 5], "get_events_data_field": [2, 5], "get_exhibition_by_id": [2, 5], "get_exhibitions_by_field": [2, 5], "get_exhibitions_data_field": [2, 5], "get_galleries_by_field": [2, 5], "get_galleries_data_field": [2, 5], "get_gallery_by_id": [2, 5], "get_generic_page_by_id": [2, 5], "get_generic_pages_by_field": [2, 5], "get_generic_pages_data_field": [2, 5], "get_highlight_by_id": [2, 5], "get_highlights_by_field": [2, 5], "get_highlights_data_field": [2, 5], "get_image_by_id": [2, 5], "get_images_by_field": [2, 5], "get_images_data_field": [2, 5], "get_mobile_sound_by_id": [2, 5], "get_mobile_sounds_by_field": [2, 5], "get_mobile_sounds_data_field": [2, 5], "get_place_by_id": [2, 5], "get_places_by_field": [2, 5], "get_places_data_field": [2, 5], "get_press_release_by_id": [2, 5], "get_press_releases_by_field": [2, 5], "get_press_releases_data_field": [2, 5], "get_printed_catalog_by_id": [2, 5], "get_printed_catalogs_by_field": [2, 5], "get_printed_catalogs_data_field": [2, 5], "get_product_by_id": [2, 5], "get_products_by_field": [2, 5], "get_products_data_field": [2, 5], "get_publication_by_id": [2, 5], "get_publications_by_field": [2, 5], "get_publications_data_field": [2, 5], "get_section_by_id": [2, 5], "get_sections_by_field": [2, 5], "get_sections_data_field": [2, 5], "get_site_by_id": [2, 5], "get_sites_by_field": [2, 5], "get_sites_data_field": [2, 5], "get_sound_by_id": [2, 5], "get_sounds_by_field": [2, 5], "get_sounds_data_field": [2, 5], "get_static_page_by_id": [2, 5], "get_static_pages_by_field": [2, 5], "get_static_pages_data_field": [2, 5], "get_text_by_id": [2, 5], "get_texts_by_field": [2, 5], "get_texts_data_field": [2, 5], "get_tour_by_id": [2, 5], "get_tours_by_field": [2, 5], "get_tours_data_field": [2, 5], "get_video_by_id": [2, 5], "get_videos_by_field": [2, 5], "get_videos_data_field": [2, 5], "search_agent_rol": [2, 5], "search_agent_typ": [2, 5], "search_ag": [2, 5], "search_articl": [2, 5], "search_artist": [2, 5], "search_artwork_date_qualifi": [2, 5], "search_artwork_place_qualifi": [2, 5], "search_artwork_typ": [2, 5], "search_artwork": [2, 5], "search_category_term": [2, 5], "search_digital_catalog": [2, 5], "search_digital_publication_sect": [2, 5], "search_educator_resourc": [2, 5], "search_event_occurr": [2, 5], "search_event_program": [2, 5], "search_ev": [2, 5], "search_exhibit": [2, 5], "search_galleri": [2, 5], "search_generic_pag": [2, 5], "search_highlight": [2, 5], "search_imag": [2, 5], "search_mobile_sound": [2, 5], "search_plac": [2, 5], "search_press_releas": [2, 5], "search_printed_catalog": [2, 5], "search_product": [2, 5], "search_publ": [2, 5], "search_sect": [2, 5], "search_sit": [2, 5], "search_sound": [2, 5], "search_static_pag": [2, 5], "search_text": [2, 5, 15], "search_tour": [2, 5], "search_video": [2, 5], "lorempicsum": [2, 5], "get_image_info_by_id": [2, 5], "get_image_info_by_se": [2, 5], "get_random_imag": [2, 5], "get_static_random_imag": [2, 5], "list_imag": [2, 5], "get_authors_before_specified_year": [2, 6], "get_authors_within_date_rang": [2, 6], "get_book_by_id": [2, 6, 24], "get_book": [2, 6, 24], "get_books_by_id": [2, 6], "search_books_by_author_and_titl": [2, 6], "search_books_by_top": [2, 6], "stephenkingapi": [2, 6], "get_stephen_king_book_by_id": [2, 6], "get_stephen_king_book": [2, 6], "get_stephen_king_short_stori": [2, 6], "get_stephen_king_short_story_by_id": [2, 6], "get_stephen_king_villain_by_id": [2, 6], "get_stephen_king_villain": [2, 6], "nagerd": [2, 7], "get_available_countri": [2, 7], "get_country_info": [2, 7], "get_long_weekends_by_countri": [2, 7], "get_public_holdiays_for_next_365": [2, 7], "get_public_holidai": [2, 7], "get_public_holidays_worldwide_for_next_7": [2, 7], "is_today_a_public_holidai": [2, 7], "restcountri": [2, 8], "get_all_countri": [2, 8], "get_country_by_capit": [2, 8], "get_country_by_cod": [2, 8], "get_country_by_curr": [2, 8], "get_country_by_languag": [2, 8], "get_country_by_nam": [2, 8], "get_country_by_region": [2, 8], "get_country_by_subregion": [2, 8], "get_country_by_transl": [2, 8], "apisguru": [2, 9], "get_all_api": [2, 9], "get_all_provid": [2, 9], "get_apis_by_provid": [2, 9], "get_basic_metr": [2, 9], "get_particular_api_version_no_service_nam": [2, 9], "get_particular_api_version_with_service_nam": [2, 9], "get_service_names_by_provid": [2, 9], "filterlist": [2, 9], "get_languag": [2, 9, 18], "get_licens": [2, 9], "get_list_by_id": [2, 9], "get_list": [2, 9], "get_maintain": [2, 9], "get_softwar": [2, 9], "get_syntax": [2, 9], "get_tag": [2, 9], "get_color_palette_for_target_url": [2, 9], "get_metadata_for_target_url": [2, 9], "get_pdf_of_target_url": [2, 9], "get_screenshot_of_target_url": [2, 9], "urlhau": [2, 9], "download_malware_sampl": [2, 9], "get_info_about_host": [2, 9], "get_info_about_payload": [2, 9], "get_info_about_signatur": [2, 9], "get_info_about_tag": [2, 9], "get_info_about_url": [2, 9], "get_info_about_url_by_id": [2, 9], "get_recent_payload": [2, 9], "get_recent_url": [2, 9], "urlshorten": [2, 9], "shorten_url": [2, 9], "universitydomainsandnam": [2, 10], "get_university_name_and_domain": [2, 10], "update_list": [2, 10], "get_atm_oper": [2, 11], "get_coin": [2, 11], "get_comments_by_venue_id": [2, 11], "get_ratings_by_venue_id": [2, 11], "get_venue_by_id": [2, 11], "get_venu": [2, 11], "exchangeapi": [2, 11], "get_available_curr": [2, 11], "get_rates_from_bas": [2, 11], "wallstreetbet": [2, 11], "get_stock_sentiment_from_reddit": [2, 11], "get_all_fruit": [2, 12], "get_fruit_by_famili": [2, 12], "get_fruit_by_genu": [2, 12], "get_fruit_by_nutrit": [2, 12], "get_fruit_by_ord": [2, 12], "freetogam": [2, 13], "filter_gam": [2, 13], "get_all_live_gam": [2, 13], "get_game_by_id": [2, 13], "get_games_by_categori": [2, 13], "get_games_by_platform": [2, 13], "get_games_by_platform_and_categori": [2, 13], "opentriviadb": [2, 13], "get_random_trivia_quest": [2, 13], "get_specified_trivia_quest": [2, 13], "about_anagram": [2, 13], "about_camp": [2, 13], "about_countri": [2, 13], "about_kuromasu": [2, 13], "about_math": [2, 13], "about_memori": [2, 13], "about_minesweep": [2, 13], "about_schult": [2, 13], "about_set": [2, 13], "about_sudoku": [2, 13], "about_takuzu": [2, 13], "about_wordsearch": [2, 13], "check_camp_task": [2, 13], "check_kuromasu_task": [2, 13], "check_sudoku": [2, 13], "check_takuzu": [2, 13], "generate_addit": [2, 13], "generate_capital_quiz": [2, 13], "generate_country_quiz": [2, 13], "generate_divis": [2, 13], "generate_multipl": [2, 13], "generate_quadratic_equ": [2, 13], "generate_random_anagram": [2, 13], "generate_random_camp_task": [2, 13], "generate_random_kuromasu_task": [2, 13], "generate_random_memory_grid": [2, 13], "generate_random_minesweeper_field": [2, 13], "generate_random_schulte_t": [2, 13], "generate_random_sudoku": [2, 13], "generate_random_takuzu": [2, 13], "generate_random_wordsearch_grid": [2, 13], "generate_subtract": [2, 13], "get_all_set_card": [2, 13], "load_set_st": [2, 13], "get_location_info_by_ip_address": [2, 14], "zippopotomu": [2, 14], "get_info_by_zipcod": [2, 14], "get_zipcode_by_c": [2, 14], "federalregist": [2, 15], "get_agencies_detail": [2, 15], "get_agency_by_slug": [2, 15], "get_current_public_inspection_docu": [2, 15], "get_document_counts_by_facet": [2, 15], "get_document_toc_by_d": [2, 15], "get_fed_reg_docu": [2, 15], "get_image_variants_by_id": [2, 15], "get_multiple_fed_reg_docu": [2, 15], "get_multiple_public_inspection_docu": [2, 15], "get_public_inspection_docu": [2, 15], "get_suggested_search_by_slug": [2, 15], "get_suggested_searches_by_sect": [2, 15], "search_all_docu": [2, 15], "search_all_public_inspection_docu": [2, 15], "usaspend": [2, 15], "awarding_agency_and_office_autocomplet": [2, 15], "bulk_award_download": [2, 15], "cfda_autocomplet": [2, 15], "city_autocomplet": [2, 15], "download_account": [2, 15], "download_assistance_data": [2, 15], "download_award_data_advanc": [2, 15], "download_contract_data": [2, 15], "download_def_data": [2, 15], "download_def_recipient_data": [2, 15], "download_idv_data": [2, 15], "download_transaction_count": [2, 15], "download_transactions_data_advanc": [2, 15], "explore_spend": [2, 15], "funding_agency_autocomplet": [2, 15], "get_agencies_awarding_def_loan": [2, 15], "get_agencies_receiving_def_fund": [2, 15], "get_agency_overview_by_agency_id": [2, 15], "get_agency_overview_by_toptier_cod": [2, 15], "get_agency_overview_by_year": [2, 15], "get_agency_overview_info": [2, 15], "get_agency_reporting_publish_d": [2, 15], "get_agency_summary_info": [2, 15], "get_aggregated_def_spend": [2, 15], "get_aggregated_def_spending_count": [2, 15], "get_award_account": [2, 15], "get_award_data": [2, 15], "get_award_funding_data": [2, 15], "get_award_funding_obligations_and_count": [2, 15], "get_award_last_upd": [2, 15], "get_award_transactions_count": [2, 15], "get_award_typ": [2, 15], "get_awards_type_count": [2, 15], "get_budget_function_count_for_ag": [2, 15], "get_budget_funct": [2, 15], "get_budget_functions_for_ag": [2, 15], "get_budget_subfunct": [2, 15], "get_budgetary_resources_for_ag": [2, 15], "get_cfda_programs_receiving_def_fund": [2, 15], "get_cfda_receiving_def_count": [2, 15], "get_child_recipients_by_duns_or_uei": [2, 15], "get_count_agencies_receiving_def": [2, 15], "get_data_dictionari": [2, 15], "get_def_cod": [2, 15], "get_def_loans_for_cfda": [2, 15], "get_def_loans_for_federal_account": [2, 15], "get_def_loans_for_object_class": [2, 15], "get_def_loans_for_recipi": [2, 15], "get_def_spending_by_geographi": [2, 15], "get_defc_receiving_def_count": [2, 15], "get_download_statu": [2, 15], "get_federal_account": [2, 15], "get_federal_account_by_oblig": [2, 15], "get_federal_accounts_by_bureau_for_ag": [2, 15], "get_federal_accounts_count_by_award": [2, 15], "get_federal_accounts_count_for_ag": [2, 15], "get_federal_accounts_for_ag": [2, 15], "get_federal_accounts_receiving_def_count": [2, 15], "get_federal_accounts_receiving_def_fund": [2, 15], "get_federal_accounts_under_idv": [2, 15], "get_filter_hash_for_url": [2, 15], "get_filter_object_from_hash": [2, 15], "get_financial_bal": [2, 15], "get_financial_spending_by_object_class": [2, 15], "get_financial_spending_for_minor_object_class": [2, 15], "get_fiscal_year_snapshot_for_federal_account": [2, 15], "get_glossari": [2, 15, 25], "get_idv_act": [2, 15], "get_idv_amount": [2, 15], "get_idv_award": [2, 15], "get_idv_federal_account_count": [2, 15], "get_idv_fund": [2, 15], "get_idv_funding_tot": [2, 15], "get_naics_cod": [2, 15], "get_new_awards_count_for_ag": [2, 15], "get_new_awards_over_tim": [2, 15], "get_object_classes_count_for_ag": [2, 15], "get_object_classes_for_ag": [2, 15], "get_object_classes_for_ta": [2, 15], "get_object_classes_receiving_def_count": [2, 15], "get_object_classes_receiving_def_fund": [2, 15], "get_obligation_difference_data": [2, 15], "get_obligations_by_award_category_for_ag": [2, 15], "get_program_activities_for_ta": [2, 15], "get_program_activity_count_for_ag": [2, 15], "get_program_activity_for_ag": [2, 15], "get_psc_search_tree_nod": [2, 15], "get_recipient_award_spend": [2, 15], "get_recipient_count": [2, 15], "get_recipient_overview": [2, 15], "get_recipients_receiving_def_count": [2, 15], "get_recipients_receiving_def_fund": [2, 15], "get_reporting_publishing_dates_for_single_ag": [2, 15], "get_spending_by_award": [2, 15], "get_spending_by_award_count": [2, 15], "get_spending_by_awarding_ag": [2, 15], "get_spending_by_awarding_subag": [2, 15], "get_spending_by_cfda": [2, 15], "get_spending_by_countri": [2, 15], "get_spending_by_counti": [2, 15], "get_spending_by_district": [2, 15], "get_spending_by_federal_account": [2, 15], "get_spending_by_funding_ag": [2, 15], "get_spending_by_funding_subag": [2, 15], "get_spending_by_geographi": [2, 15], "get_spending_by_na": [2, 15], "get_spending_by_psc": [2, 15], "get_spending_by_state_territori": [2, 15], "get_spending_by_transact": [2, 15], "get_spending_by_transaction_count": [2, 15], "get_spending_data_by_object_class": [2, 15], "get_spending_over_tim": [2, 15], "get_state_award_breakdown": [2, 15], "get_state_metadata": [2, 15], "get_stat": [2, 15, 25], "get_sub_agencies_for_ag": [2, 15], "get_sub_agency_count_for_ag": [2, 15], "get_subaward": [2, 15], "get_subawards_for_award": [2, 15], "get_subcomponents_for_ag": [2, 15], "get_submission_period": [2, 15], "get_tas_discrepancies_data": [2, 15], "get_tas_search_tree_nod": [2, 15], "get_toptier_ag": [2, 15], "get_total_budgetary_resourc": [2, 15], "get_transaction_spending_summari": [2, 15], "get_transact": [2, 15], "get_unlinked_awards_for_ag": [2, 15], "glossary_autocomplet": [2, 15], "list_ag": [2, 15], "list_monthly_fil": [2, 15], "location_autocomplet": [2, 15], "naics_autocomplet": [2, 15], "psc_autocomplet": [2, 15], "recipient_autocomplet": [2, 15], "search_federal_account": [2, 15], "search_recipi": [2, 15], "tas_autocomplete_a": [2, 15], "tas_autocomplete_aid": [2, 15], "tas_autocomplete_ata": [2, 15], "tas_autocomplete_bpoa": [2, 15], "tas_autocomplete_epoa": [2, 15], "tas_autocomplete_main": [2, 15], "tas_autocomplete_sub": [2, 15], "opendiseas": [2, 16], "get_all_countries_appl": [2, 16], "get_all_countries_ecdc": [2, 16], "get_all_countries_gov": [2, 16], "get_all_us_states_jhu": [2, 16], "get_apple_mobility_data_for_subregion": [2, 16], "get_apple_supported_subregions_for_countri": [2, 16], "get_ecdc_covid_variant_data_for_countri": [2, 16], "get_gov_covid_data_for_countri": [2, 16], "get_jhu_global_accumulated_covid_data": [2, 16], "get_jhu_global_time_series_covid_data": [2, 16], "get_jhu_time_series_covid_data_for_countri": [2, 16], "get_jhu_time_series_covid_data_for_provinc": [2, 16], "get_jhu_time_series_covid_data_for_st": [2, 16], "get_nyt_time_series_covid_data_for_all_st": [2, 16], "get_nyt_time_series_covid_data_for_all_us_counti": [2, 16], "get_nyt_time_series_covid_data_for_entire_usa": [2, 16], "get_nyt_time_series_covid_data_for_specific_st": [2, 16], "get_nyt_time_series_covid_data_for_specific_us_counti": [2, 16], "get_raps_covid_vaccines_administered_for_all_countri": [2, 16], "get_raps_covid_vaccines_administered_for_all_st": [2, 16], "get_raps_covid_vaccines_administered_for_countri": [2, 16], "get_raps_covid_vaccines_administered_for_st": [2, 16], "get_raps_total_covid_vaccines_administ": [2, 16], "get_worldometers_covid_data_for_all_contin": [2, 16], "get_worldometers_covid_data_for_all_countri": [2, 16], "get_worldometers_covid_data_for_all_st": [2, 16], "get_worldometers_covid_data_for_specific_contin": [2, 16], "get_worldometers_covid_data_for_specific_countri": [2, 16], "get_worldometers_covid_data_for_specific_st": [2, 16], "get_worldometers_global_covid_data": [2, 16], "add_param": [2, 17], "make_request_for_cont": [2, 17], "make_request_for_content_with_param": [2, 17], "make_request_with_param": [2, 17], "make_request_with_post_and_data": [2, 17], "make_request_with_post_and_json": [2, 17], "throttl": [2, 17], "throttle_class": [2, 17], "get_inspiring_author_by_id": [2, 18], "get_inspiring_author": [2, 18], "get_inspiring_quote_by_quote_id": [2, 18], "get_inspiring_quot": [2, 18], "get_inspiring_quotes_by_author_id": [2, 18], "get_number_of_quotes_and_author": [2, 18], "get_random_quot": [2, 18], "jokeapi": [2, 19], "get_jok": [2, 19], "freedictionari": [2, 20], "look_up_word": [2, 20], "randomusergener": [2, 21], "generate_random_us": [2, 21], "iti": [2, 22], "get_itis_term": [2, 22], "get_itis_terms_from_common_nam": [2, 22], "get_itis_terms_from_scientific_nam": [2, 22], "get_lsid_from_tsn": [2, 22], "get_tsn_from_lsid": [2, 22], "get_tsns_by_vernacular_languag": [2, 22], "get_accepted_names_from_tsn": [2, 22], "get_any_match_count": [2, 22], "get_comment_detail_from_tsn": [2, 22], "get_common_names_from_tsn": [2, 22], "get_core_metadata_from_tsn": [2, 22], "get_coverage_from_tsn": [2, 22], "get_credibility_rating_from_tsn": [2, 22], "get_credibility_r": [2, 22], "get_currency_from_tsn": [2, 22], "get_date_data_from_tsn": [2, 22], "get_descript": [2, 22], "get_experts_from_tsn": [2, 22], "get_full_hierarchy_from_tsn": [2, 22], "get_full_record_from_lsid": [2, 22], "get_full_record_from_tsn": [2, 22], "get_geographic_divisions_from_tsn": [2, 22], "get_geographic_valu": [2, 22], "get_global_species_completeness_from_tsn": [2, 22], "get_hierarchy_down_from_tsn": [2, 22], "get_hierarchy_up_from_tsn": [2, 22], "get_jurisdiction_valu": [2, 22], "get_jurisdictional_origin_from_tsn": [2, 22], "get_jurisdictional_origin_valu": [2, 22], "get_kingdom_name_from_tsn": [2, 22], "get_kingdom_nam": [2, 22], "get_last_change_d": [2, 22], "get_other_sources_from_tsn": [2, 22], "get_parent_tsn_from_tsn": [2, 22], "get_publications_from_tsn": [2, 22], "get_rank_nam": [2, 22], "get_record_from_lsid": [2, 22], "get_review_year_from_tsn": [2, 22], "get_scientific_name_from_tsn": [2, 22], "get_synonym_names_from_tsn": [2, 22], "get_taxon_authorship_from_tsn": [2, 22], "get_taxonomic_rank_name_from_tsn": [2, 22], "get_taxonomic_usage_from_tsn": [2, 22], "get_unacceptability_reason_from_tsn": [2, 22], "get_vernacular_languag": [2, 22], "search_by_common_nam": [2, 22], "search_by_common_name_begins_with": [2, 22], "search_by_common_name_ends_with": [2, 22], "search_by_scientific_nam": [2, 22], "search_for_any_match": [2, 22], "search_for_any_match_pag": [2, 22], "nobelprizeapi": [2, 22], "get_all_nobel_pr": [2, 22], "get_nobel_laureate_by_id": [2, 22], "get_nobel_prize_laur": [2, 22], "get_one_nobel_pr": [2, 22], "spaceflightnew": [2, 23], "get_articl": [2, 23], "get_blog_by_id": [2, 23], "get_blog": [2, 23], "get_info": [2, 23], "get_report_by_id": [2, 23], "get_report": [2, 23], "stapi": [2, 24], "get_animal_by_id": [2, 24], "get_anim": [2, 24], "get_astronomical_object_by_id": [2, 24], "get_astronomical_object": [2, 24], "get_book_collection_by_id": [2, 24], "get_book_collect": [2, 24], "get_book_seri": [2, 24], "get_book_series_by_id": [2, 24], "get_character_by_id": [2, 24], "get_charact": [2, 24], "get_comic_by_id": [2, 24], "get_comic_collection_by_id": [2, 24], "get_comic_collect": [2, 24], "get_comic_seri": [2, 24], "get_comic_series_by_id": [2, 24], "get_comic_strip_by_id": [2, 24], "get_comic_strip": [2, 24], "get_com": [2, 24], "get_compani": [2, 24], "get_company_by_id": [2, 24], "get_conflict_by_id": [2, 24], "get_conflict": [2, 24], "get_data_vers": [2, 24], "get_element_by_id": [2, 24], "get_el": [2, 24], "get_episode_by_id": [2, 24], "get_episod": [2, 24], "get_food_by_id": [2, 24], "get_food": [2, 24], "get_literatur": [2, 24], "get_literature_by_id": [2, 24], "get_location_by_id": [2, 24], "get_loc": [2, 24], "get_magazine_by_id": [2, 24], "get_magazine_seri": [2, 24], "get_magazine_series_by_id": [2, 24], "get_magazin": [2, 24], "get_material_by_id": [2, 24], "get_materi": [2, 24], "get_medical_condition_by_id": [2, 24], "get_medical_condit": [2, 24], "get_movie_by_id": [2, 24], "get_movi": [2, 24], "get_occupation_by_id": [2, 24], "get_occup": [2, 24], "get_organization_by_id": [2, 24], "get_organ": [2, 24], "get_performer_by_id": [2, 24], "get_perform": [2, 24], "get_season_by_id": [2, 24], "get_season": [2, 24], "get_seri": [2, 24], "get_series_by_id": [2, 24], "get_soundtrack_by_id": [2, 24], "get_soundtrack": [2, 24], "get_spacecraft_by_id": [2, 24], "get_spacecraft_class_by_id": [2, 24], "get_spacecraft_class": [2, 24], "get_spacecraft": [2, 24], "get_speci": [2, 24], "get_species_by_id": [2, 24], "get_staff": [2, 24], "get_staff_by_id": [2, 24], "get_technologi": [2, 24], "get_technology_by_id": [2, 24], "get_title_by_id": [2, 24], "get_titl": [2, 24], "get_trading_card_by_id": [2, 24], "get_trading_card_deck_by_id": [2, 24], "get_trading_card_deck": [2, 24], "get_trading_card_set_by_id": [2, 24], "get_trading_card_set": [2, 24], "get_trading_card": [2, 24], "get_video_game_by_id": [2, 24], "get_video_gam": [2, 24], "get_video_release_by_id": [2, 24], "get_video_releas": [2, 24], "get_weapon_by_id": [2, 24], "get_weapon": [2, 24], "nationalweatherservic": [2, 25], "get_nws_office_headline_by_headline_id": [2, 25], "get_nws_office_headlin": [2, 25], "get_nws_office_metadata": [2, 25], "get_active_alert": [2, 25], "get_active_alerts_by_area": [2, 25], "get_active_alerts_by_region": [2, 25], "get_active_alerts_by_zon": [2, 25], "get_active_alerts_count": [2, 25], "get_alert_by_id": [2, 25], "get_alert_typ": [2, 25], "get_alert": [2, 25], "get_cwsu_advisori": [2, 25], "get_cwsu_advisories_by_date_and_seq": [2, 25], "get_cwsu_metadata": [2, 25], "get_observation_stations_by_gridpoint": [2, 25], "get_observation_stations_by_zon": [2, 25], "get_observations_by_st": [2, 25], "get_radar_queue_metadata": [2, 25], "get_radar_server_metadata_by_id": [2, 25], "get_radar_serv": [2, 25], "get_radar_station_alarms_metadata_by_id": [2, 25], "get_radar_station_metadata_by_id": [2, 25], "get_radar_st": [2, 25], "get_radar_wind_profiler_metadata": [2, 25], "get_raw_data_by_gridpoint": [2, 25], "get_sigmets_by_atsu": [2, 25], "get_sigmets_by_atsu_and_d": [2, 25], "get_specific_sigmet": [2, 25], "get_station_metadata": [2, 25], "get_station_observation_by_tim": [2, 25], "get_taf_by_date_tim": [2, 25], "get_tafs_by_st": [2, 25], "get_text_product_by_id": [2, 25], "get_text_product_loc": [2, 25], "get_text_product_locations_by_typ": [2, 25], "get_text_product_typ": [2, 25], "get_text_product_types_by_loc": [2, 25], "get_text_product": [2, 25], "get_text_products_by_typ": [2, 25], "get_text_products_by_type_and_loc": [2, 25], "get_textual_forecast_by_gridpoint": [2, 25], "get_textual_hourly_forecast_by_gridpoint": [2, 25], "get_zone_forecast": [2, 25], "get_zone_metadata": [2, 25], "get_zone_observ": [2, 25], "get_zon": [2, 25], "get_zones_by_typ": [2, 25], "class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "use_cach": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "fals": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "cache_nam": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "bored_api_cach": 3, "backend": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "sqlite": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "expire_aft": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "3600": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "base": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "object": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "A": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "interact": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "bore": 3, "api": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "attribut": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "url": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "short": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "descript": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "kei": [3, 5, 13, 16, 22, 25], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "an": [3, 4, 5, 8, 9, 10, 11, 13, 15, 16, 17, 18, 22], "its": [3, 8, 12, 13, 15], "arg": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "int": [3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25], "uniqu": [3, 5, 6, 9, 11, 13, 15, 18, 22, 23, 24], "number": [3, 5, 6, 10, 11, 13, 15, 16, 18, 19, 22, 23, 24, 25], "identifi": [3, 5, 6, 9, 11, 13, 15, 18, 22, 23, 24, 25], "specif": [3, 5, 8, 9, 11, 15, 16, 18, 22, 23, 25], "list": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25], "from": [3, 5, 6, 7, 13, 15, 16, 18, 22, 23, 25], "1000001": 3, "9999998": 3, "dict": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "dictionari": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "contain": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "along": [3, 13, 18, 22], "relat": [3, 6, 15, 20], "inform": [3, 7, 8, 9, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25], "document": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25], "none": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "string": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "doc": [3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 22, 25], "access": [3, 5], "specifi": [3, 4, 5, 6, 12, 13, 15, 16, 17, 22, 24, 25], "float": [3, 11, 12], "imagin": 3, "within": [3, 6, 15, 22], "rang": [3, 5, 6, 12, 13, 14], "0": [3, 7, 12, 13, 15, 16, 18, 24], "1": [3, 5, 6, 13, 15, 16, 19, 22], "being": [3, 15], "most": [3, 15], "numparticip": 3, "particip": 3, "requir": [3, 13, 15, 17], "support": [3, 6, 7, 13, 14, 15, 16, 17, 18, 22], "valu": [3, 5, 6, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 25], "ar": [3, 6, 12, 13, 15, 16, 17, 19, 22, 24], "n": [3, 11, 15], "price": 3, "activitytyp": 3, "type": [3, 4, 5, 13, 15, 16, 17, 25], "str": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25], "recreat": 3, "social": [3, 13], "dii": 3, "chariti": 3, "cook": 3, "relax": 3, "music": 3, "busywork": 3, "minaccess": 3, "maxaccess": 3, "minimum": [3, 11, 12, 13], "maximum": [3, 11, 12, 13, 15], "greater": [3, 13, 15], "than": [3, 13, 15, 17, 22], "minpric": 3, "maxpric": 3, "start": [3, 13], "dog_api_cach": 4, "dog": 4, "all": [4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 22, 23], "breed": 4, "paramet": [4, 5, 6, 9, 10, 11, 13, 14, 15, 17, 18, 19, 23], "sub": [4, 15], "arrai": [4, 13, 15, 16], "imag": [4, 5, 9, 13, 15], "artic_cach": 5, "art": [5, 13], "institut": 5, "chicago": 5, "image_api_url": 5, "thi": [5, 13, 15, 16, 18, 22, 23, 24, 25], "image_id": [5, 15], "download": [5, 6, 9, 15], "jpg": 5, "match": [5, 6, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24], "id": [5, 6, 9, 11, 13, 15, 16, 18, 22, 23, 24, 25], "These": 5, "can": [5, 6, 13, 15, 16, 22], "obtain": 5, "both": [5, 11, 13, 15, 16], "exhibit": 5, "endpoint": [5, 15, 16, 17], "confirm": 5, "agent_id": 5, "data": [5, 6, 8, 13, 15, 16, 17, 21, 22, 24, 25], "agent": 5, "": [5, 6, 7, 9, 13, 14, 15, 16, 18, 19], "databas": [5, 6, 13, 15, 22], "agent_role_id": 5, "role": 5, "field": [5, 13, 15, 16, 22], "limit": [5, 9, 10, 11, 15, 18, 22, 23], "10": [5, 13, 15, 23], "onli": [5, 11, 13, 15, 18, 22, 24], "comma": [5, 6, 15, 16], "separ": [5, 6, 15, 16], "space": [5, 6, 13, 15, 16], "name": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22], "For": [5, 15], "retriev": [5, 15], "certain": 5, "call": [5, 17], "function": [5, 15], "get": [5, 11, 15, 16, 22], "avail": [5, 7, 9, 11, 13, 15, 16, 22, 25], "pagin": [5, 10, 15, 22], "default": [5, 6, 9, 10, 11, 12, 13, 15, 16, 18, 19, 22, 23, 24], "first": [5, 6, 11, 13, 15, 22, 24], "result": [5, 10, 11, 13, 15, 16, 22, 23], "per": [5, 12, 15, 22, 23, 24], "i": [5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 22, 25], "us": [5, 8, 11, 13, 15, 16, 17, 18, 22], "dict_kei": 5, "agent_type_id": 5, "articl": [5, 23], "artist": 5, "artwork": 5, "date": [5, 7, 11, 13, 15, 22, 25], "qualifi": 5, "place": [5, 15], "categori": [5, 11, 13, 15, 17, 19, 22, 25], "term": [5, 15, 22, 25], "digit": 5, "catalog": [5, 22], "public": [5, 7, 15, 25], "section": [5, 15], "resourc": [5, 15, 22], "event": 5, "occurr": 5, "program": [5, 15, 19], "galleri": 5, "gener": [5, 13, 15, 21], "highlight": 5, "mobil": [5, 16], "sound": 5, "press": 5, "releas": [5, 13, 24], "print": [5, 15, 17], "product": [5, 15, 25], "site": [5, 23], "static": 5, "text": [5, 15, 17, 25], "tour": 5, "video": [5, 24], "article_id": 5, "artist_id": 5, "artwork_id": 5, "artwork_date_qualifier_id": 5, "artwork_place_qualifier_id": 5, "artwork_type_id": 5, "category_term_id": 5, "digital_catalog_id": 5, "digital_publication_section_id": 5, "educator_resource_id": 5, "event_id": 5, "event_occurrence_id": 5, "get_events_occurrences_data_field": 5, "event_program_id": 5, "get_events_programs_data_field": 5, "exhibition_id": 5, "gallery_id": 5, "generic_page_id": 5, "highlight_id": 5, "mobile_sound_id": 5, "place_id": 5, "neg": [5, 6, 13, 15], "press_release_id": 5, "printed_catalog_id": 5, "product_id": 5, "publication_id": 5, "section_id": 5, "site_id": 5, "sound_id": 5, "static_page_id": 5, "text_id": 5, "tour_id": 5, "video_id": 5, "queri": [5, 9, 11, 15, 16, 18], "lorem_picsum_cach": 5, "lorem": 5, "picsum": 5, "width": [5, 13], "height": [5, 13], "grayscal": 5, "blur": 5, "given": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 23, 25], "numer": [5, 9, 15, 25], "which": [5, 6, 12, 13, 15, 16, 23], "case": [5, 9, 13, 15, 16], "squar": 5, "info": [5, 14], "seed": 5, "placehold": 5, "dimens": 5, "boolean": [5, 13, 22], "option": [5, 6, 9, 10, 11, 13, 15, 17, 19, 22], "argument": 5, "pictur": 5, "photo": 5, "ensur": [5, 13], "same": [5, 13, 16], "each": [5, 9, 13, 15, 16, 17], "time": [5, 7, 15, 16, 18, 22, 24, 25], "30": [5, 9, 13, 16], "item": [5, 15, 18], "gutendex_cach": 6, "author_year_end": 6, "sort": [6, 13, 15, 16, 22], "popular": [6, 13], "en": [6, 18, 19], "author": [6, 15, 18, 22], "metadata": [6, 9, 15, 22, 25], "book": [6, 24], "exist": [6, 13], "befor": [6, 11, 16], "year": [6, 7, 15, 22], "wa": [6, 22], "aliv": 6, "bc": 6, "era": 6, "posit": [6, 13], "other": [6, 11, 13, 15, 17, 18, 19, 20, 22], "ascend": [6, 15, 22], "descend": [6, 15, 22], "written": 6, "english": [6, 18, 19, 22], "take": 6, "multipl": [6, 13, 15, 16, 22], "non": [6, 16, 19], "who": [6, 11], "were": 6, "author_year_start": 6, "mark": 6, "begin": [6, 15, 22], "end": [6, 15, 22], "whose": 6, "live": [6, 13], "book_id": 6, "singl": [6, 13, 15, 19, 25], "integ": [6, 7, 23], "titl": [6, 15, 23, 24], "give": [6, 16], "ani": [6, 9, 13, 15, 16, 17, 19, 22], "part": [6, 15, 22], "topic": [6, 15], "stephen_king_cach": 6, "stephen": 6, "king": 6, "stori": 6, "story_id": 6, "villain_id": 6, "villain": 6, "nager_date_cach": 7, "nager": 7, "countri": [7, 8, 10, 13, 14, 15, 16], "countrycod": 7, "code": [7, 8, 11, 14, 15, 16, 25], "repres": [7, 13], "one": [7, 9, 13, 15, 22], "over": [7, 9], "hundr": 7, "long": 7, "weekend": 7, "question": [7, 9, 10, 13, 14], "upcom": 7, "holidai": 7, "next": 7, "365": 7, "dai": [7, 16], "worldwid": 7, "7": [7, 13, 15], "utc_offset": 7, "true": [7, 13, 15, 16, 22], "todai": [7, 16], "utc": [7, 25], "zone": [7, 25], "offset": [7, 10, 11, 18, 23], "adjust": 7, "own": 7, "bool": [7, 11, 13, 15, 16], "rest_country_cach": 8, "error": [8, 9, 13, 15, 17], "found": [8, 16, 22], "capit": [8, 13], "citi": [8, 14, 15], "cca2": 8, "ccn3": 8, "cca3": 8, "cioc": 8, "currenc": [8, 11, 22], "speak": 8, "spoken": 8, "region": [8, 25], "subregion": [8, 16], "translat": 8, "api_gurus_cach": 9, "guru": 9, "directori": 9, "provid": [9, 13, 15, 16, 22], "particular": [9, 15, 22], "basic": [9, 15], "metric": 9, "entir": [9, 15, 16], "entri": [9, 15, 16, 24], "version": [9, 11, 13, 15, 23, 24], "where": [9, 13, 15, 16], "servic": [9, 15, 22, 25], "ervic": 9, "filter_lists_cach": 9, "target": 9, "licens": 9, "appli": [9, 17], "list_id": 9, "detail": [9, 15], "maintain": 9, "softwar": 9, "subscrib": 9, "syntax": 9, "tag": [9, 13], "microlink_cach": 9, "predomin": 9, "color": 9, "pallett": 9, "detect": 9, "pdf": 9, "screenshot": 9, "urlhaus_cach": 9, "sha256": 9, "zip": [9, 15], "file": [9, 15], "malwar": 9, "sampl": 9, "payload": [9, 17], "hash": [9, 15], "path": 9, "success": 9, "messag": [9, 13, 17], "otherwis": [9, 15], "host": [9, 25], "mai": [9, 15], "have": [9, 13, 15, 16], "ipv4": [9, 14], "address": [9, 14, 21], "domain": [9, 10, 14], "hostnam": 9, "p_load": 9, "ha": [9, 15, 16], "md5": 9, "signatur": 9, "urlid": 9, "recent": [9, 15], "seen": 9, "ad": 9, "url_shortener_cach": 9, "shorten": 9, "shorturl": 9, "origin": [9, 22], "desir": [9, 13, 15, 19, 22], "sensit": 9, "must": [9, 11, 13, 15], "between": 9, "5": [9, 13, 15], "charact": [9, 15, 24], "university_cach": 10, "univers": 10, "whole": 10, "partial": [10, 15, 22], "respect": [10, 17], "forc": 10, "refresh": 10, "sinc": [10, 15, 16], "won": 10, "t": 10, "automat": 10, "updat": [10, 15, 22], "dataset": 10, "chang": [10, 13, 16], "coinmap_cach": 11, "atm": 11, "oper": 11, "coin": 11, "venue_id": 11, "comment": [11, 22], "venu": 11, "rate": [11, 22], "min_lat": 11, "max_lat": 11, "min_lon": 11, "max_lon": 11, "owner": 11, "upvot": 11, "after": 11, "promot": 11, "crypto": 11, "latitud": 11, "longitud": 11, "substr": 11, "filter": [11, 13, 15], "userhash": 11, "user": [11, 15, 21], "show": [11, 15], "creat": [11, 15], "yyyi": [11, 15, 25], "mm": [11, 15, 25], "dd": [11, 15, 25], "unset": 11, "skip": 11, "exchange_api_cach": 11, "exchang": 11, "minified_vers": 11, "minifi": 11, "currency_cod": 11, "latest": [11, 15], "format": [11, 14, 15, 17, 22, 25], "wallstree_bets_cach": 11, "wallstreet": 11, "bet": 11, "top": [11, 13, 15, 25], "50": [11, 13, 15, 22, 24], "stock": 11, "discuss": 11, "reddit": 11, "subeddit": 11, "subreddit": 11, "fruityvice_cach": 12, "fruit": 12, "famili": 12, "genu": [12, 22], "nutrit": 12, "minval": 12, "maxval": 12, "1000": [12, 13, 15], "compon": [12, 15, 22], "possibl": [12, 13, 15, 16, 19, 22], "carbohydr": 12, "protein": 12, "fat": 12, "calori": 12, "sugar": 12, "100g": 12, "order": [12, 15, 22], "freetogame_cach": 13, "free": [13, 20], "To": 13, "platform": 13, "sort_bi": 13, "period": [13, 15, 17], "delimit": [13, 16], "mmorpg": 13, "shooter": 13, "strategi": 13, "moba": 13, "race": 13, "sport": 13, "sandbox": 13, "open": [13, 16], "world": [13, 15], "surviv": 13, "pvp": 13, "pve": 13, "pixel": 13, "voxel": 13, "zombi": 13, "turn": 13, "person": 13, "third": 13, "down": [13, 25], "tank": 13, "sail": 13, "side": 13, "scroller": 13, "superhero": 13, "permadeath": 13, "card": [13, 24], "battl": 13, "royal": 13, "mmo": 13, "mmofp": 13, "mmotp": 13, "3d": 13, "2d": 13, "fantasi": 13, "sci": 13, "fi": 13, "fight": 13, "action": [13, 15], "rpg": 13, "militari": 13, "martial": 13, "flight": 13, "low": 13, "spec": 13, "tower": 13, "defens": 13, "horror": 13, "mmort": 13, "plai": 13, "browser": 13, "pc": 13, "alphabet": [13, 22], "relev": [13, 22], "gameid": 13, "open_trivia_cach": 13, "trivia": 13, "amount": [13, 15, 19], "variou": [13, 15, 25], "difficulti": 13, "subject": 13, "answer": 13, "those": [13, 15], "q_type": 13, "trivial": 13, "level": [13, 15], "easi": 13, "medium": 13, "hard": 13, "choic": 13, "shadify_cach": 13, "row_tent": 13, "column_t": 13, "solut": 13, "check": 13, "camp": 13, "task": 13, "grid": [13, 25], "whether": [13, 15, 16, 22], "correct": 13, "row": 13, "tent": 13, "column": [13, 15], "two": [13, 16], "dimension": 13, "valid": [13, 15, 16, 22, 25], "occur": 13, "kuromasu": 13, "puzzle_grid": 13, "sudoku": 13, "puzzl": 13, "correctli": [13, 16], "solv": 13, "well": 13, "incorrect": 13, "takuzu": 13, "min_first": 13, "max_first": 13, "99": 13, "min_second": 13, "max_second": 13, "addit": [13, 15], "express": 13, "second": 13, "variant": [13, 15, 16], "4": [13, 15], "quiz": 13, "2": [13, 15, 16, 25], "6": [13, 15], "correspond": [13, 15, 22], "differ": [13, 15], "you": [13, 15, 16], "choos": [13, 15], "20": [13, 15], "respons": [13, 15, 17], "quizz": 13, "among": 13, "receiv": [13, 15], "link": [13, 15], "flag": [13, 15, 16, 19], "divis": [13, 22], "min_a": 13, "max_a": 13, "min_b": 13, "max_b": 13, "40": 13, "min_c": 13, "max_c": 13, "quadrat": 13, "equat": 13, "coeffici": 13, "b": [13, 15], "c": [13, 15, 19], "word": [13, 20], "compos": 13, "15": [13, 16], "should": [13, 15], "sent": [13, 17], "fill": 13, "readi": 13, "cell": 13, "pair_siz": 13, "3": [13, 15], "show_posit": 13, "memori": 13, "pair": 13, "total": [13, 15, 16], "exce": 13, "52": 13, "multipli": 13, "size": [13, 15, 24], "ident": 13, "element": [13, 24], "determin": [13, 15], "send": 13, "9": [13, 15], "mine": 13, "12": [13, 15, 24], "randomli": [13, 21], "minesweep": 13, "form": [13, 15], "set": [13, 15, 16, 22, 24], "player": 13, "There": 13, "never": [13, 16], "around": 13, "x": [13, 15, 25], "coordin": [13, 14, 25], "widht": 13, "y": [13, 25], "25": 13, "board": 13, "mode": 13, "schult": 13, "tabl": [13, 15, 22], "defin": [13, 14, 15], "letter": 13, "If": [13, 15], "select": [13, 15], "alwai": [13, 25], "finish": 13, "unfinish": 13, "percentag": [13, 16], "8": [13, 15], "33": 13, "even": [13, 15], "100": 13, "wordsearch": 13, "256": 13, "subtract": 13, "enabl": 13, "disabl": 13, "initi": [13, 22, 23], "when": [13, 15], "behavior": 13, "possible_set": 13, "81": 13, "current": [13, 15, 22, 25], "layout": 13, "necessari": 13, "act": 13, "hint": 13, "evid": 13, "state": [13, 14, 15, 16, 25], "hyphen": 13, "add": [13, 17], "remov": 13, "allow": [13, 15, 16], "perform": [13, 15, 24], "appropri": [13, 15], "freecard": 13, "doe": 13, "combin": 13, "three": [13, 15], "do": [13, 15], "make": [13, 17], "up": [13, 20], "ip_api_cach": 14, "ip": 14, "etc": [14, 21], "ipv6": 14, "locat": [14, 15, 24, 25], "zippopotomus_cach": 14, "zipcod": 14, "see": [14, 15, 16], "federal_register_cach": 15, "feder": 15, "regist": 15, "agenc": 15, "slug": 15, "extens": 15, "inspect": 15, "facet": 15, "search_term": 15, "doc_typ": 15, "count": [15, 22, 25], "group": 15, "daili": 15, "weekli": 15, "monthli": 15, "quarterli": 15, "yearli": 15, "subtyp": 15, "rule": 15, "final": 15, "prorul": 15, "propos": 15, "notic": 15, "presdocu": 15, "presidenti": 15, "pub_dat": 15, "edit": 15, "exact": 15, "document_num": 15, "unspac": 15, "suggest": 15, "gov": [15, 16], "busi": 15, "industri": 15, "environ": 15, "welfar": 15, "monei": 15, "scienc": [15, 22], "technologi": [15, 24], "per_pag": 15, "publish": 15, "1994": 15, "onc": 15, "issu": 15, "usa_spending_cach": 15, "usa": [15, 16], "spend": 15, "reward": 15, "file_format": 15, "csv": 15, "award": [15, 22], "tsv": 15, "pstxt": 15, "regard": 15, "cfda": 15, "country_cod": 15, "scope": 15, "state_cod": 15, "primary_place_of_perform": 15, "recipient_loc": 15, "account_level": 15, "submission_typ": 15, "fiscal_year": 15, "federal_account": 15, "quarter": 15, "def_cod": 15, "custom": 15, "account": 15, "treasury_account": 15, "account_bal": 15, "object_class_program_act": 15, "award_financi": 15, "fiscal": 15, "expect": 15, "intern": 15, "toptier": 15, "also": [15, 22], "known": 15, "toptier_agency_id": 15, "either": [15, 17, 19], "suppli": 15, "note": 15, "submiss": 15, "includ": [15, 17], "cannot": 15, "submit": 15, "so": 15, "disallow": 15, "11": 15, "def": 15, "job": 15, "award_id": 15, "new": [15, 23, 25], "request": [15, 17, 22, 25], "contract": 15, "advanc": 15, "json": [15, 17, 22], "least": [15, 16], "covid": [15, 16], "19": [15, 16], "disast": 15, "emerg": 15, "fund": 15, "l": 15, "m": 15, "o": 15, "p": 15, "u": [15, 16], "v": [15, 16], "them": 15, "award_type_cod": 15, "recipi": 15, "moment": 15, "02": 15, "03": 15, "04": 15, "05": 15, "06": 15, "07": 15, "08": 15, "09": 15, "d": 15, "idv_a": 15, "idv_b_a": 15, "idv_b_b": 15, "idv_b_c": 15, "idv_b": 15, "idv_c": 15, "idv_d": 15, "idv_": 15, "idv": 15, "transact": 15, "would": 15, "through": 15, "object_class": 15, "budget_funct": 15, "budget_subfunct": 15, "program_act": 15, "desc": 15, "insight": 15, "loan": 15, "accept": [15, 22], "asc": 15, "indic": [15, 16, 22], "what": 15, "award_count": 15, "face_value_of_loan": 15, "oblig": 15, "outlai": 15, "spending_typ": 15, "agency_id": 15, "high": 15, "overview": 15, "v2": 15, "refer": 15, "toptier_ag": 15, "toptier_cod": 15, "current_total_budget_authority_amount": 15, "direct": 15, "fiscal_period": 15, "missing_tas_accounts_count": 15, "tas_accounts_tot": 15, "obligation_differ": 15, "percent_of_total_budgetary_resourc": 15, "recent_publication_d": 15, "recent_publication_date_certifi": 15, "tas_obligation_not_in_gtas_tot": 15, "unlinked_contract_award_count": 15, "unlinked_assistance_award_count": 15, "novemb": 15, "septemb": 15, "retriv": 15, "equal": 15, "e": [15, 16, 19, 22], "g": [15, 16], "q2": 15, "p6": 15, "abbrevi": 15, "insesit": 15, "toptier_agency_cod": 15, "2024": 15, "ever": 15, "due": 15, "lead": 15, "zero": 15, "certifi": 15, "agency_nam": 15, "publication_d": 15, "agency_typ": 15, "summari": [15, 23], "deriv": 15, "award_typ": 15, "aggreg": 15, "assist": 15, "procur": 15, "financi": 15, "mutual": 15, "exclus": 15, "under": [15, 17], "account_titl": 15, "total_transaction_obligated_amount": 15, "associ": [15, 16], "profil": [15, 25], "reporting_fiscal_d": 15, "awarding_agency_nam": 15, "disaster_emergency_fund_cod": 15, "funding_agency_nam": 15, "gross_outlay_amount": 15, "transaction_obligated_amount": 15, "last": [15, 22], "cfo": 15, "design": 15, "budget": 15, "subfunct": 15, "budgetari": 15, "here": 15, "duns_or_uei": 15, "child": 15, "belong": 15, "parent": [15, 22], "dun": 15, "uei": 15, "like": 15, "view": 15, "month": 15, "describ": 15, "geo_lay": 15, "spendng_typ": 15, "geo_layer_filt": 15, "geograph": [15, 22], "shape": 15, "counti": [15, 16, 25], "district": 15, "map": 15, "fetch": 15, "primari": 15, "place_of_perform": 15, "defc": 15, "file_nam": 15, "statu": 15, "full": [15, 16, 22], "taken": 15, "account_numb": 15, "symbol": 15, "compris": 15, "main": 15, "funding_agency_id": 15, "bureau_slug": 15, "bureau": 15, "treasuri": 15, "ta": 15, "indefinit": 15, "deliveri": 15, "vehicl": 15, "criteria": 15, "balanc": 15, "major": 15, "major_object_class_cod": 15, "minor": 15, "financial_spend": 15, "major_object_class": 15, "federal_account_id": 15, "glossari": [15, 25], "hide_edge_cas": 15, "grandchild": 15, "hide": 15, "natur": 15, "surrog": 15, "prefer": 15, "thei": 15, "effect": 15, "perman": 15, "retain": 15, "backward": 15, "compat": 15, "deprec": 15, "coint": 15, "child_idv": 15, "period_of_performance_start_d": 15, "child_award": 15, "grandchild_award": 15, "piid": 15, "period_of_performance_current_end_d": 15, "last_date_to_ord": 15, "funding_ag": 15, "awarding_ag": 15, "obligated_amount": 15, "children": [15, 22], "grandchildren": 15, "further": 15, "refin": 15, "omit": 15, "reporting_agency_nam": 15, "sum": 15, "tier": 15, "naic": 15, "grandpar": 15, "start_dat": 15, "end_dat": 15, "recipient_id": 15, "earliest": 15, "2007": 15, "01": 15, "fy2008": 15, "go": 15, "back": 15, "2000": 15, "fy2001": 15, "featur": [15, 18, 23], "websit": 15, "our": 15, "bulk_download": 15, "how": 15, "slash": 15, "file_a_oblig": 15, "file_b_oblig": 15, "breakdown": 15, "depth": 15, "mani": 15, "node": 15, "exampl": 15, "flat": 15, "while": 15, "popul": 15, "actual": 15, "tree": 15, "less": 15, "treat": 15, "infinit": 15, "restrict": 15, "appear": 15, "psc": 15, "awarding_agency_id": 15, "keyword": 15, "grant": 15, "direct_pay": 15, "other_financial_assist": 15, "neither": 15, "histori": 15, "certif": 15, "subaward": 15, "last_record_unique_id": 15, "last_record_sort_valu": 15, "want": 15, "instead": [15, 16], "record": [15, 22, 25], "experiment": 15, "elasticsearch": 15, "payment": 15, "subag": 15, "congression": 15, "area": [15, 25], "iso": 15, "3166": 15, "alpha": 15, "territori": 15, "allot": 15, "toward": 15, "fip": 15, "offic": [15, 25], "subaward_numb": 15, "action_d": 15, "recipient_nam": 15, "dabs_submission_window_schedul": 15, "except": 15, "cach": 15, "discrep": 15, "affili": 15, "percentage_of_total_budget_author": 15, "percent": 15, "2017": 15, "later": 15, "without": 15, "400": 15, "paramat": 15, "dollar": 15, "modif": 15, "modification_numb": 15, "federal_action_oblig": 15, "face_value_loan_guarante": 15, "original_loan_subsidy_cost": 15, "action_type_descript": 15, "max": 15, "5000": 15, "unlink": 15, "vale": 15, "autocomplet": 15, "snippet": 15, "agencies_typ": 15, "flavor": 15, "account_ag": 15, "dab": 15, "award_ag": 15, "subtier": 15, "file_typ": 15, "archiv": 15, "recipient_level": 15, "500": 15, "agency_identifi": 15, "sort_direct": 15, "sort_field": 15, "budgetary_resourc": 15, "manag": 15, "enter": [15, 22], "previou": 15, "account_nam": 15, "managing_ag": 15, "potenti": 15, "narrow": 15, "null": [15, 16], "miss": [15, 16], "ata": 15, "nullabl": 15, "alloc": 15, "transfer": 15, "aid": 15, "bpoa": 15, "epoa": 15, "Will": 15, "open_disease_cach": 16, "diseas": 16, "provinc": 16, "histor": 16, "usacounti": 16, "everi": 16, "januari": 16, "13th": 16, "drive": 16, "transit": 16, "walk": 16, "v3": 16, "appl": 16, "ecdc": 16, "report": [16, 23], "allow_nul": 16, "By": 16, "last_dai": 16, "global": 16, "accumul": 16, "seri": [16, 24], "provenc": 16, "iso2": 16, "iso3": 16, "spell": 16, "pandem": 16, "began": 16, "illinoi": 16, "california": 16, "alameda": 16, "humboldt": 16, "full_data": 16, "vaccin": 16, "dose": 16, "administ": 16, "roll": 16, "out": [16, 17], "http": [16, 17], "ourworldindata": 16, "org": 16, "last_data": 16, "24": 16, "simplevaccinetimelin": 16, "fullvaccinetimelin": 16, "administr": 16, "contin": 16, "todaycas": 16, "death": 16, "greatest": 16, "yesterdai": 16, "retir": 16, "strict": 16, "abil": 16, "fuzzi": 16, "oman": 16, "romania": 16, "ago": 16, "visual": 17, "pleas": 17, "head": 17, "individu": 17, "param": 17, "params_list": 17, "tupl": 17, "original_param_nam": 17, "new_param_nam": 17, "header": 17, "bodi": 17, "post": 17, "method": 17, "rate_limit": 17, "decor": 17, "dictum_cach": 18, "authorid": 18, "ru": 18, "russian": 18, "hexadecim": 18, "search_queri": 18, "quoteid": 18, "quot": 18, "joke_api_cach": 19, "lang": 19, "joke_typ": 19, "search_str": 19, "misc": 19, "dark": 19, "pin": 19, "spooki": 19, "christma": 19, "czech": 19, "de": 19, "german": [19, 22], "spanish": [19, 22], "fr": 19, "french": [19, 22], "pt": 19, "portugues": [19, 22], "blacklist": 19, "nsfw": 19, "religi": 19, "polit": 19, "racist": 19, "sexist": 19, "explicit": 19, "twopart": 19, "free_dictionary_cach": 20, "thre": 20, "definit": [20, 25], "look": 20, "random_user_cach": 21, "dob": 21, "ssn": 21, "itis_cach": 22, "integr": 22, "taxonom": 22, "system": 22, "search_kei": 22, "data_format": 22, "input": 22, "tool": 22, "common": 22, "scientif": 22, "empti": 22, "xml": 22, "tsn": 22, "lsid": 22, "serial": 22, "vernacular": 22, "afrikaan": 22, "arab": 22, "australian": 22, "bengali": 22, "chines": 22, "djuka": 22, "dutch": 22, "eng": 22, "fijan": 22, "galibi": 22, "greek": 22, "hausa": 22, "hawaiian": 22, "hindi": 22, "iceland": 22, "iglulik": 22, "inuit": 22, "italian": 22, "japanes": 22, "javanes": 22, "khmer": 22, "korean": 22, "lao": 22, "malagasi": 22, "manyika": 22, "nativ": 22, "american": 22, "ndau": 22, "northern": 22, "sotho": 22, "romanian": 22, "shona": 22, "swati": 22, "unspecifi": 22, "xhosa": 22, "zulu": [22, 25], "more": 22, "synonym": 22, "compar": 22, "core": 22, "credibl": 22, "usag": 22, "unaccept": 22, "reason": 22, "coverag": 22, "taxon": 22, "abov": 22, "rank_id": 22, "190": 22, "stamp": 22, "web": 22, "expert": 22, "hierarchi": 22, "kingdom": 22, "immedi": 22, "invalid": 22, "completen": 22, "jurisdict": 22, "pulic": 22, "rank": 22, "review": 22, "page_s": 22, "page_num": 22, "nobel_prize_cach": 22, "nobel": 22, "prize": 22, "winner": 22, "laureateid": 22, "laureat": 22, "che": 22, "chemistri": 22, "eco": 22, "econom": 22, "lit": 22, "literatur": [22, 24], "pea": 22, "peac": 22, "phy": 22, "physic": 22, "med": 22, "medicin": 22, "pass": 22, "piec": 22, "spaceflight_news_cach": 23, "summary_contain": 23, "title_contain": 23, "fit": 23, "phrase": 23, "blog": 23, "stapi_cach": 24, "star": 24, "trek": 24, "uid": 24, "pagenumb": 24, "pages": 24, "astronom": 24, "collect": [24, 25], "comic": 24, "strip": 24, "compani": 24, "conflict": 24, "episod": 24, "eposod": 24, "magazin": 24, "materi": 24, "medic": 24, "condit": 24, "movi": 24, "although": 24, "14": 24, "occup": 24, "organ": 24, "season": 24, "soundtrack": 24, "spacecraft": 24, "speci": 24, "staff": 24, "trade": 24, "deck": 24, "weapon": 24, "nws_cach": 25, "nation": 25, "officeid": 25, "headlineid": 25, "headlin": 25, "nw": 25, "forecast": 25, "alert": 25, "infor": 25, "marin": 25, "al": 25, "AT": 25, "gl": 25, "gm": 25, "pa": 25, "pi": 25, "zoneid": 25, "broken": 25, "broke": 25, "cwsuid": 25, "center": 25, "advisori": 25, "cwsu": 25, "zab": 25, "zan": 25, "zau": 25, "zbw": 25, "zdc": 25, "zdv": 25, "zfa": 25, "zfw": 25, "zhu": 25, "zid": 25, "zjx": 25, "zkc": 25, "zla": 25, "zlc": 25, "zma": 25, "zme": 25, "zmp": 25, "zny": 25, "zoa": 25, "zob": 25, "zse": 25, "ztl": 25, "sequenc": 25, "unit": 25, "wfo": 25, "observ": 25, "station": 25, "usabl": 25, "5km": 25, "akq": 25, "ali": 25, "bgm": 25, "box": 25, "btv": 25, "buf": 25, "cae": 25, "car": 25, "ch": 25, "cle": 25, "ctp": 25, "gsp": 25, "gyx": 25, "ilm": 25, "iln": 25, "lwx": 25, "mhx": 25, "okx": 25, "pbz": 25, "phi": 25, "rah": 25, "rlx": 25, "rnk": 25, "abq": 25, "ama": 25, "bmx": 25, "bro": 25, "crp": 25, "epz": 25, "ewx": 25, "ffc": 25, "fwd": 25, "hgx": 25, "hun": 25, "jan": 25, "jax": 25, "lch": 25, "lix": 25, "lub": 25, "lzk": 25, "maf": 25, "meg": 25, "mfl": 25, "mlb": 25, "mob": 25, "mrx": 25, "ohx": 25, "oun": 25, "shv": 25, "sjt": 25, "sju": 25, "tae": 25, "tbw": 25, "tsa": 25, "abr": 25, "apx": 25, "arx": 25, "bi": 25, "bou": 25, "cy": 25, "ddc": 25, "dlh": 25, "dmx": 25, "dtx": 25, "dvn": 25, "eax": 25, "fgf": 25, "fsd": 25, "gid": 25, "gjt": 25, "gld": 25, "grb": 25, "grr": 25, "ict": 25, "ilx": 25, "ind": 25, "iwx": 25, "jkl": 25, "lbf": 25, "lmk": 25, "lot": 25, "lsx": 25, "mkx": 25, "mpx": 25, "mqt": 25, "oax": 25, "pah": 25, "pub": 25, "riw": 25, "sgf": 25, "unr": 25, "boi": 25, "byz": 25, "eka": 25, "fgz": 25, "ggw": 25, "hnx": 25, "lkn": 25, "lox": 25, "mfr": 25, "mso": 25, "mtr": 25, "otx": 25, "pdt": 25, "pih": 25, "pqr": 25, "psr": 25, "rev": 25, "sew": 25, "sgx": 25, "slc": 25, "sto": 25, "tfx": 25, "twc": 25, "vef": 25, "aer": 25, "afc": 25, "afg": 25, "ajk": 25, "alu": 25, "gum": 25, "hpa": 25, "hfo": 25, "ppg": 25, "stu": 25, "nh1": 25, "nh2": 25, "ona": 25, "onp": 25, "zkne": 25, "stationid": 25, "radar": 25, "queue": 25, "ldm": 25, "serverid": 25, "server": 25, "alarm": 25, "wind": 25, "raw": 25, "forcast": 25, "atsu": 25, "sigmet": 25, "airmet": 25, "hhmm": 25, "timestamp": 25, "termin": 25, "aerodrom": 25, "taf": 25, "airport": 25, "productid": 25, "issuanc": 25, "typeid": 25, "locationid": 25, "textual": 25, "hourli": 25, "land": 25, "coastal": 25, "offshor": 25, "fire": 25}, "objects": {"": [[2, 0, 0, "-", "nokey"]], "nokey": [[3, 0, 0, "-", "activities"], [4, 0, 0, "-", "animals"], [5, 0, 0, "-", "art_and_images"], [6, 0, 0, "-", "books_and_literature"], [7, 0, 0, "-", "calendar"], [8, 0, 0, "-", "country_info"], [9, 0, 0, "-", "developer_tools"], [10, 0, 0, "-", "education"], [11, 0, 0, "-", "finance_and_crypto"], [12, 0, 0, "-", "food"], [13, 0, 0, "-", "games"], [14, 0, 0, "-", "geolocation"], [15, 0, 0, "-", "government"], [16, 0, 0, "-", "health"], [17, 0, 0, "-", "helperFuncs"], [18, 0, 0, "-", "inspiration"], [19, 0, 0, "-", "jokes"], [20, 0, 0, "-", "language"], [21, 0, 0, "-", "random"], [22, 0, 0, "-", "science_and_nature"], [23, 0, 0, "-", "spaceflight"], [24, 0, 0, "-", "tv_and_film"], [25, 0, 0, "-", "weather"]], "nokey.activities": [[3, 0, 0, "-", "bored_api"]], "nokey.activities.bored_api": [[3, 1, 1, "", "BoredAPI"]], "nokey.activities.bored_api.BoredAPI": [[3, 2, 1, "", "get_activity_by_key"], [3, 2, 1, "", "get_docs_url"], [3, 2, 1, "", "get_random_activity"], [3, 2, 1, "", "get_random_activity_by_accessibility"], [3, 2, 1, "", "get_random_activity_by_participants"], [3, 2, 1, "", "get_random_activity_by_price"], [3, 2, 1, "", "get_random_activity_by_type"], [3, 2, 1, "", "get_random_activity_within_accessibility_range"], [3, 2, 1, "", "get_random_activity_within_price_range"]], "nokey.animals": [[4, 0, 0, "-", "dog_api"]], "nokey.animals.dog_api": [[4, 1, 1, "", "DogAPI"]], "nokey.animals.dog_api.DogAPI": [[4, 3, 1, "", "about"], [4, 3, 1, "", "base_url"], [4, 2, 1, "", "get_all_dog_breeds"], [4, 2, 1, "", "get_all_subBreeds"], [4, 2, 1, "", "get_docs_url"], [4, 2, 1, "", "get_dog_images_by_breed"], [4, 2, 1, "", "get_random_dog_image"], [4, 2, 1, "", "get_random_dog_image_by_breed"]], "nokey.art_and_images": [[5, 0, 0, "-", "artic"], [5, 0, 0, "-", "lorem_picsum"]], "nokey.art_and_images.artic": [[5, 1, 1, "", "Artic"]], "nokey.art_and_images.artic.Artic": [[5, 2, 1, "", "download_image"], [5, 2, 1, "", "get_agent_by_id"], [5, 2, 1, "", "get_agent_role_by_id"], [5, 2, 1, "", "get_agent_roles_by_fields"], [5, 2, 1, "", "get_agent_roles_data_fields"], [5, 2, 1, "", "get_agent_type_by_id"], [5, 2, 1, "", "get_agent_types_by_fields"], [5, 2, 1, "", "get_agent_types_data_fields"], [5, 2, 1, "", "get_agents_by_fields"], [5, 2, 1, "", "get_agents_data_fields"], [5, 2, 1, "", "get_all_agent_roles"], [5, 2, 1, "", "get_all_agent_types"], [5, 2, 1, "", "get_all_agents"], [5, 2, 1, "", "get_all_articles"], [5, 2, 1, "", "get_all_artists"], [5, 2, 1, "", "get_all_artwork_date_qualifiers"], [5, 2, 1, "", "get_all_artwork_place_qualifiers"], [5, 2, 1, "", "get_all_artwork_types"], [5, 2, 1, "", "get_all_artworks"], [5, 2, 1, "", "get_all_category_terms"], [5, 2, 1, "", "get_all_digital_catalogs"], [5, 2, 1, "", "get_all_digital_publication_sections"], [5, 2, 1, "", "get_all_educator_resources"], [5, 2, 1, "", "get_all_event_occurrences"], [5, 2, 1, "", "get_all_event_programs"], [5, 2, 1, "", "get_all_events"], [5, 2, 1, "", "get_all_exhibitions"], [5, 2, 1, "", "get_all_galleries"], [5, 2, 1, "", "get_all_generic_pages"], [5, 2, 1, "", "get_all_highlights"], [5, 2, 1, "", "get_all_images"], [5, 2, 1, "", "get_all_mobile_sounds"], [5, 2, 1, "", "get_all_places"], [5, 2, 1, "", "get_all_press_releases"], [5, 2, 1, "", "get_all_printed_catalogs"], [5, 2, 1, "", "get_all_products"], [5, 2, 1, "", "get_all_publications"], [5, 2, 1, "", "get_all_sections"], [5, 2, 1, "", "get_all_sites"], [5, 2, 1, "", "get_all_sounds"], [5, 2, 1, "", "get_all_static_pages"], [5, 2, 1, "", "get_all_texts"], [5, 2, 1, "", "get_all_tours"], [5, 2, 1, "", "get_all_videos"], [5, 2, 1, "", "get_article_by_id"], [5, 2, 1, "", "get_articles_by_fields"], [5, 2, 1, "", "get_articles_data_fields"], [5, 2, 1, "", "get_artist_by_id"], [5, 2, 1, "", "get_artists_by_fields"], [5, 2, 1, "", "get_artists_data_fields"], [5, 2, 1, "", "get_artwork_by_id"], [5, 2, 1, "", "get_artwork_date_qualifier_by_id"], [5, 2, 1, "", "get_artwork_date_qualifiers_by_fields"], [5, 2, 1, "", "get_artwork_date_qualifiers_data_fields"], [5, 2, 1, "", "get_artwork_place_qualifier_by_id"], [5, 2, 1, "", "get_artwork_place_qualifiers_by_fields"], [5, 2, 1, "", "get_artwork_place_qualifiers_data_fields"], [5, 2, 1, "", "get_artwork_type_by_id"], [5, 2, 1, "", "get_artwork_types_by_fields"], [5, 2, 1, "", "get_artwork_types_data_fields"], [5, 2, 1, "", "get_artworks_by_fields"], [5, 2, 1, "", "get_artworks_data_fields"], [5, 2, 1, "", "get_category_term_by_id"], [5, 2, 1, "", "get_category_terms_by_fields"], [5, 2, 1, "", "get_category_terms_data_fields"], [5, 2, 1, "", "get_digital_catalog_by_id"], [5, 2, 1, "", "get_digital_catalogs_by_fields"], [5, 2, 1, "", "get_digital_catalogs_data_fields"], [5, 2, 1, "", "get_digital_publication_section_by_id"], [5, 2, 1, "", "get_digital_publication_sections_by_fields"], [5, 2, 1, "", "get_digital_publication_sections_data_fields"], [5, 2, 1, "", "get_docs_url"], [5, 2, 1, "", "get_educator_resource_by_id"], [5, 2, 1, "", "get_educator_resources_by_fields"], [5, 2, 1, "", "get_educator_resources_data_fields"], [5, 2, 1, "", "get_event_by_id"], [5, 2, 1, "", "get_event_occurrence_by_id"], [5, 2, 1, "", "get_event_occurrences_by_fields"], [5, 2, 1, "", "get_event_occurrences_data_fields"], [5, 2, 1, "", "get_event_program_by_id"], [5, 2, 1, "", "get_event_programs_by_fields"], [5, 2, 1, "", "get_event_programs_data_fields"], [5, 2, 1, "", "get_events_by_fields"], [5, 2, 1, "", "get_events_data_fields"], [5, 2, 1, "", "get_exhibition_by_id"], [5, 2, 1, "", "get_exhibitions_by_fields"], [5, 2, 1, "", "get_exhibitions_data_fields"], [5, 2, 1, "", "get_galleries_by_fields"], [5, 2, 1, "", "get_galleries_data_fields"], [5, 2, 1, "", "get_gallery_by_id"], [5, 2, 1, "", "get_generic_page_by_id"], [5, 2, 1, "", "get_generic_pages_by_fields"], [5, 2, 1, "", "get_generic_pages_data_fields"], [5, 2, 1, "", "get_highlight_by_id"], [5, 2, 1, "", "get_highlights_by_fields"], [5, 2, 1, "", "get_highlights_data_fields"], [5, 2, 1, "", "get_image_by_id"], [5, 2, 1, "", "get_images_by_fields"], [5, 2, 1, "", "get_images_data_fields"], [5, 2, 1, "", "get_mobile_sound_by_id"], [5, 2, 1, "", "get_mobile_sounds_by_fields"], [5, 2, 1, "", "get_mobile_sounds_data_fields"], [5, 2, 1, "", "get_place_by_id"], [5, 2, 1, "", "get_places_by_fields"], [5, 2, 1, "", "get_places_data_fields"], [5, 2, 1, "", "get_press_release_by_id"], [5, 2, 1, "", "get_press_releases_by_fields"], [5, 2, 1, "", "get_press_releases_data_fields"], [5, 2, 1, "", "get_printed_catalog_by_id"], [5, 2, 1, "", "get_printed_catalogs_by_fields"], [5, 2, 1, "", "get_printed_catalogs_data_fields"], [5, 2, 1, "", "get_product_by_id"], [5, 2, 1, "", "get_products_by_fields"], [5, 2, 1, "", "get_products_data_fields"], [5, 2, 1, "", "get_publication_by_id"], [5, 2, 1, "", "get_publications_by_fields"], [5, 2, 1, "", "get_publications_data_fields"], [5, 2, 1, "", "get_section_by_id"], [5, 2, 1, "", "get_sections_by_fields"], [5, 2, 1, "", "get_sections_data_fields"], [5, 2, 1, "", "get_site_by_id"], [5, 2, 1, "", "get_sites_by_fields"], [5, 2, 1, "", "get_sites_data_fields"], [5, 2, 1, "", "get_sound_by_id"], [5, 2, 1, "", "get_sounds_by_fields"], [5, 2, 1, "", "get_sounds_data_fields"], [5, 2, 1, "", "get_static_page_by_id"], [5, 2, 1, "", "get_static_pages_by_fields"], [5, 2, 1, "", "get_static_pages_data_fields"], [5, 2, 1, "", "get_text_by_id"], [5, 2, 1, "", "get_texts_by_fields"], [5, 2, 1, "", "get_texts_data_fields"], [5, 2, 1, "", "get_tour_by_id"], [5, 2, 1, "", "get_tours_by_fields"], [5, 2, 1, "", "get_tours_data_fields"], [5, 2, 1, "", "get_video_by_id"], [5, 2, 1, "", "get_videos_by_fields"], [5, 2, 1, "", "get_videos_data_fields"], [5, 2, 1, "", "search_agent_roles"], [5, 2, 1, "", "search_agent_types"], [5, 2, 1, "", "search_agents"], [5, 2, 1, "", "search_articles"], [5, 2, 1, "", "search_artists"], [5, 2, 1, "", "search_artwork_date_qualifiers"], [5, 2, 1, "", "search_artwork_place_qualifiers"], [5, 2, 1, "", "search_artwork_types"], [5, 2, 1, "", "search_artworks"], [5, 2, 1, "", "search_category_terms"], [5, 2, 1, "", "search_digital_catalogs"], [5, 2, 1, "", "search_digital_publication_sections"], [5, 2, 1, "", "search_educator_resources"], [5, 2, 1, "", "search_event_occurrences"], [5, 2, 1, "", "search_event_programs"], [5, 2, 1, "", "search_events"], [5, 2, 1, "", "search_exhibitions"], [5, 2, 1, "", "search_galleries"], [5, 2, 1, "", "search_generic_pages"], [5, 2, 1, "", "search_highlights"], [5, 2, 1, "", "search_images"], [5, 2, 1, "", "search_mobile_sounds"], [5, 2, 1, "", "search_places"], [5, 2, 1, "", "search_press_releases"], [5, 2, 1, "", "search_printed_catalogs"], [5, 2, 1, "", "search_products"], [5, 2, 1, "", "search_publications"], [5, 2, 1, "", "search_sections"], [5, 2, 1, "", "search_sites"], [5, 2, 1, "", "search_sounds"], [5, 2, 1, "", "search_static_pages"], [5, 2, 1, "", "search_texts"], [5, 2, 1, "", "search_tours"], [5, 2, 1, "", "search_videos"]], "nokey.art_and_images.lorem_picsum": [[5, 1, 1, "", "LoremPicsum"]], "nokey.art_and_images.lorem_picsum.LoremPicsum": [[5, 2, 1, "", "get_docs_url"], [5, 2, 1, "", "get_image_by_id"], [5, 2, 1, "", "get_image_info_by_id"], [5, 2, 1, "", "get_image_info_by_seed"], [5, 2, 1, "", "get_random_image"], [5, 2, 1, "", "get_static_random_image"], [5, 2, 1, "", "list_images"]], "nokey.books_and_literature": [[6, 0, 0, "-", "gutendex"], [6, 0, 0, "-", "stephen_king"]], "nokey.books_and_literature.gutendex": [[6, 1, 1, "", "Gutendex"]], "nokey.books_and_literature.gutendex.Gutendex": [[6, 2, 1, "", "get_authors_before_specified_year"], [6, 2, 1, "", "get_authors_within_date_range"], [6, 2, 1, "", "get_book_by_id"], [6, 2, 1, "", "get_books"], [6, 2, 1, "", "get_books_by_ids"], [6, 2, 1, "", "get_docs_url"], [6, 2, 1, "", "search_books_by_author_and_title"], [6, 2, 1, "", "search_books_by_topic"]], "nokey.books_and_literature.stephen_king": [[6, 1, 1, "", "StephenKingAPI"]], "nokey.books_and_literature.stephen_king.StephenKingAPI": [[6, 2, 1, "", "get_docs_url"], [6, 2, 1, "", "get_stephen_king_book_by_id"], [6, 2, 1, "", "get_stephen_king_books"], [6, 2, 1, "", "get_stephen_king_short_stories"], [6, 2, 1, "", "get_stephen_king_short_story_by_id"], [6, 2, 1, "", "get_stephen_king_villain_by_id"], [6, 2, 1, "", "get_stephen_king_villains"]], "nokey.calendar": [[7, 0, 0, "-", "nager_date"]], "nokey.calendar.nager_date": [[7, 1, 1, "", "NagerDate"]], "nokey.calendar.nager_date.NagerDate": [[7, 2, 1, "", "get_available_countries"], [7, 2, 1, "", "get_country_info"], [7, 2, 1, "", "get_docs_url"], [7, 2, 1, "", "get_long_weekends_by_country"], [7, 2, 1, "", "get_public_holdiays_for_next_365"], [7, 2, 1, "", "get_public_holidays"], [7, 2, 1, "", "get_public_holidays_worldwide_for_next_7"], [7, 2, 1, "", "is_today_a_public_holiday"]], "nokey.country_info": [[8, 0, 0, "-", "rest_country"]], "nokey.country_info.rest_country": [[8, 1, 1, "", "RestCountries"]], "nokey.country_info.rest_country.RestCountries": [[8, 2, 1, "", "get_all_countries"], [8, 2, 1, "", "get_country_by_capital"], [8, 2, 1, "", "get_country_by_code"], [8, 2, 1, "", "get_country_by_currency"], [8, 2, 1, "", "get_country_by_language"], [8, 2, 1, "", "get_country_by_name"], [8, 2, 1, "", "get_country_by_region"], [8, 2, 1, "", "get_country_by_subregion"], [8, 2, 1, "", "get_country_by_translation"], [8, 2, 1, "", "get_docs_url"]], "nokey.developer_tools": [[9, 0, 0, "-", "apis_guru"], [9, 0, 0, "-", "filter_lists"], [9, 0, 0, "-", "microlink"], [9, 0, 0, "-", "url_haus"], [9, 0, 0, "-", "url_shortener"]], "nokey.developer_tools.apis_guru": [[9, 1, 1, "", "APIsGuru"]], "nokey.developer_tools.apis_guru.APIsGuru": [[9, 2, 1, "", "get_all_apis"], [9, 2, 1, "", "get_all_providers"], [9, 2, 1, "", "get_apis_by_provider"], [9, 2, 1, "", "get_basic_metrics"], [9, 2, 1, "", "get_docs_url"], [9, 2, 1, "", "get_particular_api_version_no_service_name"], [9, 2, 1, "", "get_particular_api_version_with_service_name"], [9, 2, 1, "", "get_service_names_by_provider"]], "nokey.developer_tools.filter_lists": [[9, 1, 1, "", "FilterLists"]], "nokey.developer_tools.filter_lists.FilterLists": [[9, 2, 1, "", "get_docs_url"], [9, 2, 1, "", "get_languages"], [9, 2, 1, "", "get_licenses"], [9, 2, 1, "", "get_list_by_id"], [9, 2, 1, "", "get_lists"], [9, 2, 1, "", "get_maintainers"], [9, 2, 1, "", "get_software"], [9, 2, 1, "", "get_syntaxes"], [9, 2, 1, "", "get_tags"]], "nokey.developer_tools.microlink": [[9, 1, 1, "", "Microlink"]], "nokey.developer_tools.microlink.Microlink": [[9, 2, 1, "", "get_color_palette_for_target_url"], [9, 2, 1, "", "get_docs_url"], [9, 2, 1, "", "get_metadata_for_target_url"], [9, 2, 1, "", "get_pdf_of_target_url"], [9, 2, 1, "", "get_screenshot_of_target_url"]], "nokey.developer_tools.url_haus": [[9, 1, 1, "", "URLHaus"]], "nokey.developer_tools.url_haus.URLHaus": [[9, 2, 1, "", "download_malware_sample"], [9, 2, 1, "", "get_docs_url"], [9, 2, 1, "", "get_info_about_host"], [9, 2, 1, "", "get_info_about_payload"], [9, 2, 1, "", "get_info_about_signature"], [9, 2, 1, "", "get_info_about_tag"], [9, 2, 1, "", "get_info_about_url"], [9, 2, 1, "", "get_info_about_url_by_id"], [9, 2, 1, "", "get_recent_payloads"], [9, 2, 1, "", "get_recent_urls"]], "nokey.developer_tools.url_shortener": [[9, 1, 1, "", "UrlShortener"]], "nokey.developer_tools.url_shortener.UrlShortener": [[9, 2, 1, "", "get_docs_url"], [9, 2, 1, "", "shorten_url"]], "nokey.education": [[10, 0, 0, "-", "university_domains_and_names"]], "nokey.education.university_domains_and_names": [[10, 1, 1, "", "UniversityDomainsAndNames"]], "nokey.education.university_domains_and_names.UniversityDomainsAndNames": [[10, 2, 1, "", "get_docs_url"], [10, 2, 1, "", "get_university_name_and_domain"], [10, 2, 1, "", "update_list"]], "nokey.finance_and_crypto": [[11, 0, 0, "-", "coinmap"], [11, 0, 0, "-", "exchange_api"], [11, 0, 0, "-", "wallstreet_bets"]], "nokey.finance_and_crypto.coinmap": [[11, 1, 1, "", "Coinmap"]], "nokey.finance_and_crypto.coinmap.Coinmap": [[11, 2, 1, "", "get_atm_operators"], [11, 2, 1, "", "get_coins"], [11, 2, 1, "", "get_comments_by_venue_id"], [11, 2, 1, "", "get_docs_url"], [11, 2, 1, "", "get_ratings_by_venue_id"], [11, 2, 1, "", "get_venue_by_id"], [11, 2, 1, "", "get_venues"]], "nokey.finance_and_crypto.exchange_api": [[11, 1, 1, "", "ExchangeAPI"]], "nokey.finance_and_crypto.exchange_api.ExchangeAPI": [[11, 2, 1, "", "get_available_currencies"], [11, 2, 1, "", "get_docs_url"], [11, 2, 1, "", "get_rates_from_base"]], "nokey.finance_and_crypto.wallstreet_bets": [[11, 1, 1, "", "WallstreetBets"]], "nokey.finance_and_crypto.wallstreet_bets.WallstreetBets": [[11, 2, 1, "", "get_docs_url"], [11, 2, 1, "", "get_stock_sentiment_from_reddit"]], "nokey.food": [[12, 0, 0, "-", "fruityvice"]], "nokey.food.fruityvice": [[12, 1, 1, "", "Fruityvice"]], "nokey.food.fruityvice.Fruityvice": [[12, 2, 1, "", "get_all_fruit"], [12, 2, 1, "", "get_docs_url"], [12, 2, 1, "", "get_fruit_by_family"], [12, 2, 1, "", "get_fruit_by_genus"], [12, 2, 1, "", "get_fruit_by_nutrition"], [12, 2, 1, "", "get_fruit_by_order"]], "nokey.games": [[13, 0, 0, "-", "free_to_game"], [13, 0, 0, "-", "open_trivia_db"], [13, 0, 0, "-", "shadify"]], "nokey.games.free_to_game": [[13, 1, 1, "", "FreeToGame"]], "nokey.games.free_to_game.FreeToGame": [[13, 2, 1, "", "filter_games"], [13, 2, 1, "", "get_all_live_games"], [13, 2, 1, "", "get_docs_url"], [13, 2, 1, "", "get_game_by_id"], [13, 2, 1, "", "get_games_by_category"], [13, 2, 1, "", "get_games_by_platform"], [13, 2, 1, "", "get_games_by_platform_and_category"]], "nokey.games.open_trivia_db": [[13, 1, 1, "", "OpenTriviaDB"]], "nokey.games.open_trivia_db.OpenTriviaDB": [[13, 2, 1, "", "get_docs_url"], [13, 2, 1, "", "get_random_trivia_questions"], [13, 2, 1, "", "get_specified_trivia_questions"]], "nokey.games.shadify": [[13, 1, 1, "", "Shadify"]], "nokey.games.shadify.Shadify": [[13, 2, 1, "", "about_anagram"], [13, 2, 1, "", "about_camp"], [13, 2, 1, "", "about_countries"], [13, 2, 1, "", "about_kuromasu"], [13, 2, 1, "", "about_math"], [13, 2, 1, "", "about_memory"], [13, 2, 1, "", "about_minesweeper"], [13, 2, 1, "", "about_schulte"], [13, 2, 1, "", "about_set"], [13, 2, 1, "", "about_sudoku"], [13, 2, 1, "", "about_takuzu"], [13, 2, 1, "", "about_wordsearch"], [13, 2, 1, "", "check_camp_task"], [13, 2, 1, "", "check_kuromasu_task"], [13, 2, 1, "", "check_sudoku"], [13, 2, 1, "", "check_takuzu"], [13, 2, 1, "", "generate_addition"], [13, 2, 1, "", "generate_capital_quiz"], [13, 2, 1, "", "generate_country_quiz"], [13, 2, 1, "", "generate_division"], [13, 2, 1, "", "generate_multiplication"], [13, 2, 1, "", "generate_quadratic_equation"], [13, 2, 1, "", "generate_random_anagram"], [13, 2, 1, "", "generate_random_camp_task"], [13, 2, 1, "", "generate_random_kuromasu_task"], [13, 2, 1, "", "generate_random_memory_grid"], [13, 2, 1, "", "generate_random_minesweeper_field"], [13, 2, 1, "", "generate_random_schulte_table"], [13, 2, 1, "", "generate_random_sudoku"], [13, 2, 1, "", "generate_random_takuzu"], [13, 2, 1, "", "generate_random_wordsearch_grid"], [13, 2, 1, "", "generate_subtraction"], [13, 2, 1, "", "get_all_set_cards"], [13, 2, 1, "", "get_docs_url"], [13, 2, 1, "", "load_set_state"]], "nokey.geolocation": [[14, 0, 0, "-", "ip_api"], [14, 0, 0, "-", "zippopotamus"]], "nokey.geolocation.ip_api": [[14, 1, 1, "", "IP_API"]], "nokey.geolocation.ip_api.IP_API": [[14, 2, 1, "", "get_docs_url"], [14, 2, 1, "", "get_location_info_by_ip_address"]], "nokey.geolocation.zippopotamus": [[14, 1, 1, "", "Zippopotomus"]], "nokey.geolocation.zippopotamus.Zippopotomus": [[14, 2, 1, "", "get_docs_url"], [14, 2, 1, "", "get_info_by_zipcode"], [14, 2, 1, "", "get_zipcode_by_city"]], "nokey.government": [[15, 0, 0, "-", "federal_register"], [15, 0, 0, "-", "usa_spending"]], "nokey.government.federal_register": [[15, 1, 1, "", "FederalRegister"]], "nokey.government.federal_register.FederalRegister": [[15, 2, 1, "", "get_agencies_details"], [15, 2, 1, "", "get_agency_by_slug"], [15, 2, 1, "", "get_current_public_inspection_documents"], [15, 2, 1, "", "get_docs_url"], [15, 2, 1, "", "get_document_counts_by_facet"], [15, 2, 1, "", "get_document_toc_by_date"], [15, 2, 1, "", "get_fed_reg_document"], [15, 2, 1, "", "get_image_variants_by_id"], [15, 2, 1, "", "get_multiple_fed_reg_documents"], [15, 2, 1, "", "get_multiple_public_inspection_documents"], [15, 2, 1, "", "get_public_inspection_document"], [15, 2, 1, "", "get_suggested_search_by_slug"], [15, 2, 1, "", "get_suggested_searches_by_section"], [15, 2, 1, "", "search_all_documents"], [15, 2, 1, "", "search_all_public_inspection_documents"]], "nokey.government.usa_spending": [[15, 1, 1, "", "USAspending"]], "nokey.government.usa_spending.USAspending": [[15, 2, 1, "", "awarding_agency_and_office_autocomplete"], [15, 2, 1, "", "bulk_award_download"], [15, 2, 1, "", "cfda_autocomplete"], [15, 2, 1, "", "city_autocomplete"], [15, 2, 1, "", "download_account"], [15, 2, 1, "", "download_assistance_data"], [15, 2, 1, "", "download_award_data_advanced"], [15, 2, 1, "", "download_contract_data"], [15, 2, 1, "", "download_def_data"], [15, 2, 1, "", "download_def_recipient_data"], [15, 2, 1, "", "download_idv_data"], [15, 2, 1, "", "download_transaction_count"], [15, 2, 1, "", "download_transactions_data_advanced"], [15, 2, 1, "", "explore_spending"], [15, 2, 1, "", "funding_agency_autocomplete"], [15, 2, 1, "", "get_agencies_awarding_def_loans"], [15, 2, 1, "", "get_agencies_receiving_def_funding"], [15, 2, 1, "", "get_agency_overview_by_agency_id"], [15, 2, 1, "", "get_agency_overview_by_toptier_code"], [15, 2, 1, "", "get_agency_overview_by_year"], [15, 2, 1, "", "get_agency_overview_info"], [15, 2, 1, "", "get_agency_reporting_publish_dates"], [15, 2, 1, "", "get_agency_summary_info"], [15, 2, 1, "", "get_aggregated_def_spending"], [15, 2, 1, "", "get_aggregated_def_spending_count"], [15, 2, 1, "", "get_award_accounts"], [15, 2, 1, "", "get_award_data"], [15, 2, 1, "", "get_award_funding_data"], [15, 2, 1, "", "get_award_funding_obligations_and_count"], [15, 2, 1, "", "get_award_last_updated"], [15, 2, 1, "", "get_award_transactions_count"], [15, 2, 1, "", "get_award_types"], [15, 2, 1, "", "get_awards_type_count"], [15, 2, 1, "", "get_budget_function_count_for_agency"], [15, 2, 1, "", "get_budget_functions"], [15, 2, 1, "", "get_budget_functions_for_agency"], [15, 2, 1, "", "get_budget_subfunctions"], [15, 2, 1, "", "get_budgetary_resources_for_agency"], [15, 2, 1, "", "get_cfda_programs_receiving_def_funding"], [15, 2, 1, "", "get_cfda_receiving_def_count"], [15, 2, 1, "", "get_child_recipients_by_duns_or_uei"], [15, 2, 1, "", "get_count_agencies_receiving_def"], [15, 2, 1, "", "get_data_dictionary"], [15, 2, 1, "", "get_def_codes"], [15, 2, 1, "", "get_def_loans_for_cfda"], [15, 2, 1, "", "get_def_loans_for_federal_accounts"], [15, 2, 1, "", "get_def_loans_for_object_classes"], [15, 2, 1, "", "get_def_loans_for_recipients"], [15, 2, 1, "", "get_def_spending_by_geography"], [15, 2, 1, "", "get_defc_receiving_def_count"], [15, 2, 1, "", "get_docs_url"], [15, 2, 1, "", "get_download_status"], [15, 2, 1, "", "get_federal_account"], [15, 2, 1, "", "get_federal_account_by_obligation"], [15, 2, 1, "", "get_federal_accounts_by_bureau_for_agency"], [15, 2, 1, "", "get_federal_accounts_count_by_award"], [15, 2, 1, "", "get_federal_accounts_count_for_agency"], [15, 2, 1, "", "get_federal_accounts_for_agency"], [15, 2, 1, "", "get_federal_accounts_receiving_def_count"], [15, 2, 1, "", "get_federal_accounts_receiving_def_funding"], [15, 2, 1, "", "get_federal_accounts_under_idv"], [15, 2, 1, "", "get_filter_hash_for_url"], [15, 2, 1, "", "get_filter_object_from_hash"], [15, 2, 1, "", "get_financial_balances"], [15, 2, 1, "", "get_financial_spending_by_object_class"], [15, 2, 1, "", "get_financial_spending_for_minor_object_class"], [15, 2, 1, "", "get_fiscal_year_snapshot_for_federal_account"], [15, 2, 1, "", "get_glossary"], [15, 2, 1, "", "get_idv_activity"], [15, 2, 1, "", "get_idv_amounts"], [15, 2, 1, "", "get_idv_awards"], [15, 2, 1, "", "get_idv_federal_account_count"], [15, 2, 1, "", "get_idv_funding"], [15, 2, 1, "", "get_idv_funding_totals"], [15, 2, 1, "", "get_naics_codes"], [15, 2, 1, "", "get_new_awards_count_for_agency"], [15, 2, 1, "", "get_new_awards_over_time"], [15, 2, 1, "", "get_object_classes_count_for_agency"], [15, 2, 1, "", "get_object_classes_for_agency"], [15, 2, 1, "", "get_object_classes_for_tas"], [15, 2, 1, "", "get_object_classes_receiving_def_count"], [15, 2, 1, "", "get_object_classes_receiving_def_funding"], [15, 2, 1, "", "get_obligation_difference_data"], [15, 2, 1, "", "get_obligations_by_award_category_for_agency"], [15, 2, 1, "", "get_program_activities_for_tas"], [15, 2, 1, "", "get_program_activity_count_for_agency"], [15, 2, 1, "", "get_program_activity_for_agency"], [15, 2, 1, "", "get_psc_search_tree_nodes"], [15, 2, 1, "", "get_recipient_award_spending"], [15, 2, 1, "", "get_recipient_count"], [15, 2, 1, "", "get_recipient_overview"], [15, 2, 1, "", "get_recipients_receiving_def_count"], [15, 2, 1, "", "get_recipients_receiving_def_funding"], [15, 2, 1, "", "get_reporting_publishing_dates_for_single_agency"], [15, 2, 1, "", "get_spending_by_award"], [15, 2, 1, "", "get_spending_by_award_count"], [15, 2, 1, "", "get_spending_by_awarding_agency"], [15, 2, 1, "", "get_spending_by_awarding_subagency"], [15, 2, 1, "", "get_spending_by_cfda"], [15, 2, 1, "", "get_spending_by_country"], [15, 2, 1, "", "get_spending_by_county"], [15, 2, 1, "", "get_spending_by_district"], [15, 2, 1, "", "get_spending_by_federal_account"], [15, 2, 1, "", "get_spending_by_funding_agency"], [15, 2, 1, "", "get_spending_by_funding_subagency"], [15, 2, 1, "", "get_spending_by_geography"], [15, 2, 1, "", "get_spending_by_naics"], [15, 2, 1, "", "get_spending_by_psc"], [15, 2, 1, "", "get_spending_by_state_territory"], [15, 2, 1, "", "get_spending_by_transaction"], [15, 2, 1, "", "get_spending_by_transaction_count"], [15, 2, 1, "", "get_spending_data_by_object_class"], [15, 2, 1, "", "get_spending_over_time"], [15, 2, 1, "", "get_state_award_breakdown"], [15, 2, 1, "", "get_state_metadata"], [15, 2, 1, "", "get_states"], [15, 2, 1, "", "get_sub_agencies_for_agency"], [15, 2, 1, "", "get_sub_agency_count_for_agency"], [15, 2, 1, "", "get_subawards"], [15, 2, 1, "", "get_subawards_for_award"], [15, 2, 1, "", "get_subcomponents_for_agency"], [15, 2, 1, "", "get_submission_periods"], [15, 2, 1, "", "get_tas_discrepancies_data"], [15, 2, 1, "", "get_tas_search_tree_nodes"], [15, 2, 1, "", "get_toptier_agencies"], [15, 2, 1, "", "get_total_budgetary_resources"], [15, 2, 1, "", "get_transaction_spending_summary"], [15, 2, 1, "", "get_transactions"], [15, 2, 1, "", "get_unlinked_awards_for_agency"], [15, 2, 1, "", "glossary_autocomplete"], [15, 2, 1, "", "list_agencies"], [15, 2, 1, "", "list_monthly_files"], [15, 2, 1, "", "location_autocomplete"], [15, 2, 1, "", "naics_autocomplete"], [15, 2, 1, "", "psc_autocomplete"], [15, 2, 1, "", "recipient_autocomplete"], [15, 2, 1, "", "search_federal_accounts"], [15, 2, 1, "", "search_recipients"], [15, 2, 1, "", "tas_autocomplete_a"], [15, 2, 1, "", "tas_autocomplete_aid"], [15, 2, 1, "", "tas_autocomplete_ata"], [15, 2, 1, "", "tas_autocomplete_bpoa"], [15, 2, 1, "", "tas_autocomplete_epoa"], [15, 2, 1, "", "tas_autocomplete_main"], [15, 2, 1, "", "tas_autocomplete_sub"]], "nokey.health": [[16, 0, 0, "-", "open_disease"]], "nokey.health.open_disease": [[16, 1, 1, "", "OpenDisease"]], "nokey.health.open_disease.OpenDisease": [[16, 2, 1, "", "get_all_countries_apple"], [16, 2, 1, "", "get_all_countries_ecdc"], [16, 2, 1, "", "get_all_countries_gov"], [16, 2, 1, "", "get_all_us_states_jhu"], [16, 2, 1, "", "get_apple_mobility_data_for_subregions"], [16, 2, 1, "", "get_apple_supported_subregions_for_country"], [16, 2, 1, "", "get_docs_url"], [16, 2, 1, "", "get_ecdc_covid_variant_data_for_country"], [16, 2, 1, "", "get_gov_covid_data_for_country"], [16, 2, 1, "", "get_jhu_global_accumulated_covid_data"], [16, 2, 1, "", "get_jhu_global_time_series_covid_data"], [16, 2, 1, "", "get_jhu_time_series_covid_data_for_countries"], [16, 2, 1, "", "get_jhu_time_series_covid_data_for_country"], [16, 2, 1, "", "get_jhu_time_series_covid_data_for_province"], [16, 2, 1, "", "get_jhu_time_series_covid_data_for_provinces"], [16, 2, 1, "", "get_jhu_time_series_covid_data_for_state"], [16, 2, 1, "", "get_nyt_time_series_covid_data_for_all_states"], [16, 2, 1, "", "get_nyt_time_series_covid_data_for_all_us_counties"], [16, 2, 1, "", "get_nyt_time_series_covid_data_for_entire_usa"], [16, 2, 1, "", "get_nyt_time_series_covid_data_for_specific_states"], [16, 2, 1, "", "get_nyt_time_series_covid_data_for_specific_us_counties"], [16, 2, 1, "", "get_raps_covid_vaccines_administered_for_all_countries"], [16, 2, 1, "", "get_raps_covid_vaccines_administered_for_all_states"], [16, 2, 1, "", "get_raps_covid_vaccines_administered_for_country"], [16, 2, 1, "", "get_raps_covid_vaccines_administered_for_state"], [16, 2, 1, "", "get_raps_total_covid_vaccines_administered"], [16, 2, 1, "", "get_worldometers_covid_data_for_all_continents"], [16, 2, 1, "", "get_worldometers_covid_data_for_all_countries"], [16, 2, 1, "", "get_worldometers_covid_data_for_all_states"], [16, 2, 1, "", "get_worldometers_covid_data_for_specific_continent"], [16, 2, 1, "", "get_worldometers_covid_data_for_specific_countries"], [16, 2, 1, "", "get_worldometers_covid_data_for_specific_country"], [16, 2, 1, "", "get_worldometers_covid_data_for_specific_states"], [16, 2, 1, "", "get_worldometers_global_covid_data"]], "nokey.helperFuncs": [[17, 0, 0, "-", "get_api_list"], [17, 0, 0, "-", "make_request"], [17, 0, 0, "-", "nokey_apis"], [17, 0, 0, "-", "throttler"]], "nokey.helperFuncs.get_api_list": [[17, 4, 1, "", "get_api_list"]], "nokey.helperFuncs.make_request": [[17, 4, 1, "", "add_params"], [17, 4, 1, "", "make_request"], [17, 4, 1, "", "make_request_for_content"], [17, 4, 1, "", "make_request_for_content_with_params"], [17, 4, 1, "", "make_request_with_params"], [17, 4, 1, "", "make_request_with_post_and_data"], [17, 4, 1, "", "make_request_with_post_and_json"]], "nokey.helperFuncs.throttler": [[17, 1, 1, "", "Throttler"], [17, 4, 1, "", "throttle_class"]], "nokey.helperFuncs.throttler.Throttler": [[17, 2, 1, "", "throttle"]], "nokey.inspiration": [[18, 0, 0, "-", "dictum"]], "nokey.inspiration.dictum": [[18, 1, 1, "", "Dictum"]], "nokey.inspiration.dictum.Dictum": [[18, 2, 1, "", "get_docs_url"], [18, 2, 1, "", "get_inspiring_author_by_id"], [18, 2, 1, "", "get_inspiring_authors"], [18, 2, 1, "", "get_inspiring_quote_by_quote_id"], [18, 2, 1, "", "get_inspiring_quotes"], [18, 2, 1, "", "get_inspiring_quotes_by_author_id"], [18, 2, 1, "", "get_languages"], [18, 2, 1, "", "get_number_of_quotes_and_authors"], [18, 2, 1, "", "get_random_quote"]], "nokey.jokes": [[19, 0, 0, "-", "joke_api"]], "nokey.jokes.joke_api": [[19, 1, 1, "", "JokeAPI"]], "nokey.jokes.joke_api.JokeAPI": [[19, 2, 1, "", "get_docs_url"], [19, 2, 1, "", "get_joke"]], "nokey.language": [[20, 0, 0, "-", "free_dictionary"]], "nokey.language.free_dictionary": [[20, 1, 1, "", "FreeDictionary"]], "nokey.language.free_dictionary.FreeDictionary": [[20, 2, 1, "", "get_docs_url"], [20, 2, 1, "", "look_up_word"]], "nokey.random": [[21, 0, 0, "-", "random_user"]], "nokey.random.random_user": [[21, 1, 1, "", "RandomUserGenerator"]], "nokey.random.random_user.RandomUserGenerator": [[21, 2, 1, "", "generate_random_user"], [21, 2, 1, "", "get_docs_url"]], "nokey.science_and_nature": [[22, 0, 0, "-", "integrated_taxonomic_information_system"], [22, 0, 0, "-", "nobel_prize"]], "nokey.science_and_nature.integrated_taxonomic_information_system": [[22, 1, 1, "", "ITIS"]], "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS": [[22, 2, 1, "", "get_ITIS_terms"], [22, 2, 1, "", "get_ITIS_terms_from_common_name"], [22, 2, 1, "", "get_ITIS_terms_from_scientific_name"], [22, 2, 1, "", "get_LSID_from_TSN"], [22, 2, 1, "", "get_TSN_from_LSID"], [22, 2, 1, "", "get_TSNs_by_vernacular_language"], [22, 2, 1, "", "get_accepted_names_from_TSN"], [22, 2, 1, "", "get_any_match_count"], [22, 2, 1, "", "get_comment_detail_from_TSN"], [22, 2, 1, "", "get_common_names_from_TSN"], [22, 2, 1, "", "get_core_metadata_from_TSN"], [22, 2, 1, "", "get_coverage_from_TSN"], [22, 2, 1, "", "get_credibility_rating_from_TSN"], [22, 2, 1, "", "get_credibility_ratings"], [22, 2, 1, "", "get_currency_from_TSN"], [22, 2, 1, "", "get_date_data_from_TSN"], [22, 2, 1, "", "get_description"], [22, 2, 1, "", "get_docs_url"], [22, 2, 1, "", "get_experts_from_TSN"], [22, 2, 1, "", "get_full_hierarchy_from_TSN"], [22, 2, 1, "", "get_full_record_from_LSID"], [22, 2, 1, "", "get_full_record_from_TSN"], [22, 2, 1, "", "get_geographic_divisions_from_TSN"], [22, 2, 1, "", "get_geographic_values"], [22, 2, 1, "", "get_global_species_completeness_from_TSN"], [22, 2, 1, "", "get_hierarchy_down_from_TSN"], [22, 2, 1, "", "get_hierarchy_up_from_TSN"], [22, 2, 1, "", "get_jurisdiction_values"], [22, 2, 1, "", "get_jurisdictional_origin_from_TSN"], [22, 2, 1, "", "get_jurisdictional_origin_values"], [22, 2, 1, "", "get_kingdom_name_from_TSN"], [22, 2, 1, "", "get_kingdom_names"], [22, 2, 1, "", "get_last_change_date"], [22, 2, 1, "", "get_other_sources_from_TSN"], [22, 2, 1, "", "get_parent_TSN_from_TSN"], [22, 2, 1, "", "get_publications_from_TSN"], [22, 2, 1, "", "get_rank_names"], [22, 2, 1, "", "get_record_from_LSID"], [22, 2, 1, "", "get_review_year_from_TSN"], [22, 2, 1, "", "get_scientific_name_from_TSN"], [22, 2, 1, "", "get_synonym_names_from_TSN"], [22, 2, 1, "", "get_taxon_authorship_from_TSN"], [22, 2, 1, "", "get_taxonomic_rank_name_from_TSN"], [22, 2, 1, "", "get_taxonomic_usage_from_TSN"], [22, 2, 1, "", "get_unacceptability_reason_from_TSN"], [22, 2, 1, "", "get_vernacular_languages"], [22, 2, 1, "", "search_by_common_name"], [22, 2, 1, "", "search_by_common_name_begins_with"], [22, 2, 1, "", "search_by_common_name_ends_with"], [22, 2, 1, "", "search_by_scientific_name"], [22, 2, 1, "", "search_for_any_match"], [22, 2, 1, "", "search_for_any_match_paged"]], "nokey.science_and_nature.nobel_prize": [[22, 1, 1, "", "NobelPrizeAPI"]], "nokey.science_and_nature.nobel_prize.NobelPrizeAPI": [[22, 2, 1, "", "get_all_nobel_prizes"], [22, 2, 1, "", "get_docs_url"], [22, 2, 1, "", "get_nobel_laureate_by_id"], [22, 2, 1, "", "get_nobel_prize_laureates"], [22, 2, 1, "", "get_one_nobel_prize"]], "nokey.spaceflight": [[23, 0, 0, "-", "spaceflight_news"]], "nokey.spaceflight.spaceflight_news": [[23, 1, 1, "", "SpaceflightNews"]], "nokey.spaceflight.spaceflight_news.SpaceflightNews": [[23, 2, 1, "", "get_article_by_id"], [23, 2, 1, "", "get_articles"], [23, 2, 1, "", "get_blog_by_id"], [23, 2, 1, "", "get_blogs"], [23, 2, 1, "", "get_docs_url"], [23, 2, 1, "", "get_info"], [23, 2, 1, "", "get_report_by_id"], [23, 2, 1, "", "get_reports"]], "nokey.tv_and_film": [[24, 0, 0, "-", "star_trek_api"]], "nokey.tv_and_film.star_trek_api": [[24, 1, 1, "", "STAPI"]], "nokey.tv_and_film.star_trek_api.STAPI": [[24, 2, 1, "", "get_animal_by_id"], [24, 2, 1, "", "get_animals"], [24, 2, 1, "", "get_astronomical_object_by_id"], [24, 2, 1, "", "get_astronomical_objects"], [24, 2, 1, "", "get_book_by_id"], [24, 2, 1, "", "get_book_collection_by_id"], [24, 2, 1, "", "get_book_collections"], [24, 2, 1, "", "get_book_series"], [24, 2, 1, "", "get_book_series_by_id"], [24, 2, 1, "", "get_books"], [24, 2, 1, "", "get_character_by_id"], [24, 2, 1, "", "get_characters"], [24, 2, 1, "", "get_comic_by_id"], [24, 2, 1, "", "get_comic_collection_by_id"], [24, 2, 1, "", "get_comic_collections"], [24, 2, 1, "", "get_comic_series"], [24, 2, 1, "", "get_comic_series_by_id"], [24, 2, 1, "", "get_comic_strip_by_id"], [24, 2, 1, "", "get_comic_strips"], [24, 2, 1, "", "get_comics"], [24, 2, 1, "", "get_companies"], [24, 2, 1, "", "get_company_by_id"], [24, 2, 1, "", "get_conflict_by_id"], [24, 2, 1, "", "get_conflicts"], [24, 2, 1, "", "get_data_version"], [24, 2, 1, "", "get_docs_url"], [24, 2, 1, "", "get_element_by_id"], [24, 2, 1, "", "get_elements"], [24, 2, 1, "", "get_episode_by_id"], [24, 2, 1, "", "get_episodes"], [24, 2, 1, "", "get_food_by_id"], [24, 2, 1, "", "get_foods"], [24, 2, 1, "", "get_literature"], [24, 2, 1, "", "get_literature_by_id"], [24, 2, 1, "", "get_location_by_id"], [24, 2, 1, "", "get_locations"], [24, 2, 1, "", "get_magazine_by_id"], [24, 2, 1, "", "get_magazine_series"], [24, 2, 1, "", "get_magazine_series_by_id"], [24, 2, 1, "", "get_magazines"], [24, 2, 1, "", "get_material_by_id"], [24, 2, 1, "", "get_materials"], [24, 2, 1, "", "get_medical_condition_by_id"], [24, 2, 1, "", "get_medical_conditions"], [24, 2, 1, "", "get_movie_by_id"], [24, 2, 1, "", "get_movies"], [24, 2, 1, "", "get_occupation_by_id"], [24, 2, 1, "", "get_occupations"], [24, 2, 1, "", "get_organization_by_id"], [24, 2, 1, "", "get_organizations"], [24, 2, 1, "", "get_performer_by_id"], [24, 2, 1, "", "get_performers"], [24, 2, 1, "", "get_season_by_id"], [24, 2, 1, "", "get_seasons"], [24, 2, 1, "", "get_series"], [24, 2, 1, "", "get_series_by_id"], [24, 2, 1, "", "get_soundtrack_by_id"], [24, 2, 1, "", "get_soundtracks"], [24, 2, 1, "", "get_spacecraft_by_id"], [24, 2, 1, "", "get_spacecraft_class_by_id"], [24, 2, 1, "", "get_spacecraft_classes"], [24, 2, 1, "", "get_spacecrafts"], [24, 2, 1, "", "get_species"], [24, 2, 1, "", "get_species_by_id"], [24, 2, 1, "", "get_staff"], [24, 2, 1, "", "get_staff_by_id"], [24, 2, 1, "", "get_technologies"], [24, 2, 1, "", "get_technology_by_id"], [24, 2, 1, "", "get_title_by_id"], [24, 2, 1, "", "get_titles"], [24, 2, 1, "", "get_trading_card_by_id"], [24, 2, 1, "", "get_trading_card_deck_by_id"], [24, 2, 1, "", "get_trading_card_decks"], [24, 2, 1, "", "get_trading_card_set_by_id"], [24, 2, 1, "", "get_trading_card_sets"], [24, 2, 1, "", "get_trading_cards"], [24, 2, 1, "", "get_video_game_by_id"], [24, 2, 1, "", "get_video_games"], [24, 2, 1, "", "get_video_release_by_id"], [24, 2, 1, "", "get_video_releases"], [24, 2, 1, "", "get_weapon_by_id"], [24, 2, 1, "", "get_weapons"]], "nokey.weather": [[25, 0, 0, "-", "national_weather_service"]], "nokey.weather.national_weather_service": [[25, 1, 1, "", "NationalWeatherService"]], "nokey.weather.national_weather_service.NationalWeatherService": [[25, 2, 1, "", "get_NWS_office_headline_by_headline_id"], [25, 2, 1, "", "get_NWS_office_headlines"], [25, 2, 1, "", "get_NWS_office_metadata"], [25, 2, 1, "", "get_active_alerts"], [25, 2, 1, "", "get_active_alerts_by_area"], [25, 2, 1, "", "get_active_alerts_by_region"], [25, 2, 1, "", "get_active_alerts_by_zone"], [25, 2, 1, "", "get_active_alerts_count"], [25, 2, 1, "", "get_alert_by_id"], [25, 2, 1, "", "get_alert_types"], [25, 2, 1, "", "get_alerts"], [25, 2, 1, "", "get_cwsu_advisories"], [25, 2, 1, "", "get_cwsu_advisories_by_date_and_seq"], [25, 2, 1, "", "get_cwsu_metadata"], [25, 2, 1, "", "get_docs_url"], [25, 2, 1, "", "get_glossary"], [25, 2, 1, "", "get_observation_stations_by_gridpoints"], [25, 2, 1, "", "get_observation_stations_by_zone"], [25, 2, 1, "", "get_observations_by_station"], [25, 2, 1, "", "get_radar_queue_metadata"], [25, 2, 1, "", "get_radar_server_metadata_by_id"], [25, 2, 1, "", "get_radar_servers"], [25, 2, 1, "", "get_radar_station_alarms_metadata_by_id"], [25, 2, 1, "", "get_radar_station_metadata_by_id"], [25, 2, 1, "", "get_radar_stations"], [25, 2, 1, "", "get_radar_wind_profiler_metadata"], [25, 2, 1, "", "get_raw_data_by_gridpoints"], [25, 2, 1, "", "get_sigmets_by_atsu"], [25, 2, 1, "", "get_sigmets_by_atsu_and_date"], [25, 2, 1, "", "get_specific_sigmet"], [25, 2, 1, "", "get_station_metadata"], [25, 2, 1, "", "get_station_observation_by_time"], [25, 2, 1, "", "get_stations"], [25, 2, 1, "", "get_taf_by_date_time"], [25, 2, 1, "", "get_tafs_by_station"], [25, 2, 1, "", "get_text_product_by_id"], [25, 2, 1, "", "get_text_product_locations"], [25, 2, 1, "", "get_text_product_locations_by_type"], [25, 2, 1, "", "get_text_product_types"], [25, 2, 1, "", "get_text_product_types_by_location"], [25, 2, 1, "", "get_text_products"], [25, 2, 1, "", "get_text_products_by_type"], [25, 2, 1, "", "get_text_products_by_type_and_location"], [25, 2, 1, "", "get_textual_forecast_by_gridpoints"], [25, 2, 1, "", "get_textual_hourly_forecast_by_gridpoints"], [25, 2, 1, "", "get_zone_forecast"], [25, 2, 1, "", "get_zone_metadata"], [25, 2, 1, "", "get_zone_observations"], [25, 2, 1, "", "get_zones"], [25, 2, 1, "", "get_zones_by_type"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "nokei": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "": 0, "document": 0, "content": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "indic": 0, "tabl": 0, "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "subpackag": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "activ": 3, "submodul": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "bored_api": 3, "anim": 4, "dog_api": 4, "art_and_imag": 5, "artic": 5, "lorem_picsum": 5, "books_and_literatur": 6, "gutendex": 6, "stephen_k": 6, "calendar": 7, "nager_d": 7, "country_info": 8, "rest_countri": 8, "developer_tool": 9, "apis_guru": 9, "filter_list": 9, "microlink": 9, "url_hau": 9, "url_shorten": 9, "educ": 10, "university_domains_and_nam": 10, "finance_and_crypto": 11, "coinmap": 11, "exchange_api": 11, "wallstreet_bet": 11, "food": 12, "fruityvic": 12, "game": 13, "free_to_gam": 13, "open_trivia_db": 13, "shadifi": 13, "geoloc": 14, "ip_api": 14, "zippopotamu": 14, "govern": 15, "federal_regist": 15, "usa_spend": 15, "health": 16, "open_diseas": 16, "helperfunc": 17, "get_api_list": 17, "make_request": 17, "nokey_api": 17, "throttler": 17, "inspir": 18, "dictum": 18, "joke": 19, "joke_api": 19, "languag": 20, "free_dictionari": 20, "random": 21, "random_us": 21, "science_and_natur": 22, "integrated_taxonomic_information_system": 22, "nobel_pr": 22, "spaceflight": 23, "spaceflight_new": 23, "tv_and_film": 24, "star_trek_api": 24, "weather": 25, "national_weather_servic": 25}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Welcome to nokey\u2019s documentation!": [[0, "welcome-to-nokey-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "nokey": [[1, "nokey"]], "nokey package": [[2, "nokey-package"]], "Subpackages": [[2, "subpackages"]], "Module contents": [[2, "module-nokey"], [3, "module-nokey.activities"], [4, "module-nokey.animals"], [5, "module-nokey.art_and_images"], [6, "module-nokey.books_and_literature"], [7, "module-nokey.calendar"], [8, "module-nokey.country_info"], [9, "module-nokey.developer_tools"], [10, "module-nokey.education"], [11, "module-nokey.finance_and_crypto"], [12, "module-nokey.food"], [13, "module-nokey.games"], [14, "module-nokey.geolocation"], [15, "module-nokey.government"], [16, "module-nokey.health"], [17, "module-nokey.helperFuncs"], [18, "module-nokey.inspiration"], [19, "module-nokey.jokes"], [20, "module-nokey.language"], [21, "module-nokey.random"], [22, "module-nokey.science_and_nature"], [23, "module-nokey.spaceflight"], [24, "module-nokey.tv_and_film"], [25, "module-nokey.weather"]], "nokey.activities package": [[3, "nokey-activities-package"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"]], "nokey.activities.bored_api module": [[3, "module-nokey.activities.bored_api"]], "nokey.animals package": [[4, "nokey-animals-package"]], "nokey.animals.dog_api module": [[4, "module-nokey.animals.dog_api"]], "nokey.art_and_images package": [[5, "nokey-art-and-images-package"]], "nokey.art_and_images.artic module": [[5, "module-nokey.art_and_images.artic"]], "nokey.art_and_images.lorem_picsum module": [[5, "module-nokey.art_and_images.lorem_picsum"]], "nokey.books_and_literature package": [[6, "nokey-books-and-literature-package"]], "nokey.books_and_literature.gutendex module": [[6, "module-nokey.books_and_literature.gutendex"]], "nokey.books_and_literature.stephen_king module": [[6, "module-nokey.books_and_literature.stephen_king"]], "nokey.calendar package": [[7, "nokey-calendar-package"]], "nokey.calendar.nager_date module": [[7, "module-nokey.calendar.nager_date"]], "nokey.country_info package": [[8, "nokey-country-info-package"]], "nokey.country_info.rest_country module": [[8, "module-nokey.country_info.rest_country"]], "nokey.developer_tools package": [[9, "nokey-developer-tools-package"]], "nokey.developer_tools.apis_guru module": [[9, "module-nokey.developer_tools.apis_guru"]], "nokey.developer_tools.filter_lists module": [[9, "module-nokey.developer_tools.filter_lists"]], "nokey.developer_tools.microlink module": [[9, "module-nokey.developer_tools.microlink"]], "nokey.developer_tools.url_haus module": [[9, "module-nokey.developer_tools.url_haus"]], "nokey.developer_tools.url_shortener module": [[9, "module-nokey.developer_tools.url_shortener"]], "nokey.education package": [[10, "nokey-education-package"]], "nokey.education.university_domains_and_names module": [[10, "module-nokey.education.university_domains_and_names"]], "nokey.finance_and_crypto package": [[11, "nokey-finance-and-crypto-package"]], "nokey.finance_and_crypto.coinmap module": [[11, "module-nokey.finance_and_crypto.coinmap"]], "nokey.finance_and_crypto.exchange_api module": [[11, "module-nokey.finance_and_crypto.exchange_api"]], "nokey.finance_and_crypto.wallstreet_bets module": [[11, "module-nokey.finance_and_crypto.wallstreet_bets"]], "nokey.food package": [[12, "nokey-food-package"]], "nokey.food.fruityvice module": [[12, "module-nokey.food.fruityvice"]], "nokey.games package": [[13, "nokey-games-package"]], "nokey.games.free_to_game module": [[13, "module-nokey.games.free_to_game"]], "nokey.games.open_trivia_db module": [[13, "module-nokey.games.open_trivia_db"]], "nokey.games.shadify module": [[13, "module-nokey.games.shadify"]], "nokey.geolocation package": [[14, "nokey-geolocation-package"]], "nokey.geolocation.ip_api module": [[14, "module-nokey.geolocation.ip_api"]], "nokey.geolocation.zippopotamus module": [[14, "module-nokey.geolocation.zippopotamus"]], "nokey.government package": [[15, "nokey-government-package"]], "nokey.government.federal_register module": [[15, "module-nokey.government.federal_register"]], "nokey.government.usa_spending module": [[15, "module-nokey.government.usa_spending"]], "nokey.health package": [[16, "nokey-health-package"]], "nokey.health.open_disease module": [[16, "module-nokey.health.open_disease"]], "nokey.helperFuncs package": [[17, "nokey-helperfuncs-package"]], "nokey.helperFuncs.get_api_list module": [[17, "module-nokey.helperFuncs.get_api_list"]], "nokey.helperFuncs.make_request module": [[17, "module-nokey.helperFuncs.make_request"]], "nokey.helperFuncs.nokey_apis module": [[17, "module-nokey.helperFuncs.nokey_apis"]], "nokey.helperFuncs.throttler module": [[17, "module-nokey.helperFuncs.throttler"]], "nokey.inspiration package": [[18, "nokey-inspiration-package"]], "nokey.inspiration.dictum module": [[18, "module-nokey.inspiration.dictum"]], "nokey.jokes package": [[19, "nokey-jokes-package"]], "nokey.jokes.joke_api module": [[19, "module-nokey.jokes.joke_api"]], "nokey.language package": [[20, "nokey-language-package"]], "nokey.language.free_dictionary module": [[20, "module-nokey.language.free_dictionary"]], "nokey.random package": [[21, "nokey-random-package"]], "nokey.random.random_user module": [[21, "module-nokey.random.random_user"]], "nokey.science_and_nature package": [[22, "nokey-science-and-nature-package"]], "nokey.science_and_nature.integrated_taxonomic_information_system module": [[22, "module-nokey.science_and_nature.integrated_taxonomic_information_system"]], "nokey.science_and_nature.nobel_prize module": [[22, "module-nokey.science_and_nature.nobel_prize"]], "nokey.spaceflight package": [[23, "nokey-spaceflight-package"]], "nokey.spaceflight.spaceflight_news module": [[23, "module-nokey.spaceflight.spaceflight_news"]], "nokey.tv_and_film package": [[24, "nokey-tv-and-film-package"]], "nokey.tv_and_film.star_trek_api module": [[24, "module-nokey.tv_and_film.star_trek_api"]], "nokey.weather package": [[25, "nokey-weather-package"]], "nokey.weather.national_weather_service module": [[25, "module-nokey.weather.national_weather_service"]]}, "indexentries": {"module": [[2, "module-nokey"], [3, "module-nokey.activities"], [3, "module-nokey.activities.bored_api"], [4, "module-nokey.animals"], [4, "module-nokey.animals.dog_api"], [5, "module-nokey.art_and_images"], [5, "module-nokey.art_and_images.artic"], [5, "module-nokey.art_and_images.lorem_picsum"], [6, "module-nokey.books_and_literature"], [6, "module-nokey.books_and_literature.gutendex"], [6, "module-nokey.books_and_literature.stephen_king"], [7, "module-nokey.calendar"], [7, "module-nokey.calendar.nager_date"], [8, "module-nokey.country_info"], [8, "module-nokey.country_info.rest_country"], [9, "module-nokey.developer_tools"], [9, "module-nokey.developer_tools.apis_guru"], [9, "module-nokey.developer_tools.filter_lists"], [9, "module-nokey.developer_tools.microlink"], [9, "module-nokey.developer_tools.url_haus"], [9, "module-nokey.developer_tools.url_shortener"], [10, "module-nokey.education"], [10, "module-nokey.education.university_domains_and_names"], [11, "module-nokey.finance_and_crypto"], [11, "module-nokey.finance_and_crypto.coinmap"], [11, "module-nokey.finance_and_crypto.exchange_api"], [11, "module-nokey.finance_and_crypto.wallstreet_bets"], [12, "module-nokey.food"], [12, "module-nokey.food.fruityvice"], [13, "module-nokey.games"], [13, "module-nokey.games.free_to_game"], [13, "module-nokey.games.open_trivia_db"], [13, "module-nokey.games.shadify"], [14, "module-nokey.geolocation"], [14, "module-nokey.geolocation.ip_api"], [14, "module-nokey.geolocation.zippopotamus"], [15, "module-nokey.government"], [15, "module-nokey.government.federal_register"], [15, "module-nokey.government.usa_spending"], [16, "module-nokey.health"], [16, "module-nokey.health.open_disease"], [17, "module-nokey.helperFuncs"], [17, "module-nokey.helperFuncs.get_api_list"], [17, "module-nokey.helperFuncs.make_request"], [17, "module-nokey.helperFuncs.nokey_apis"], [17, "module-nokey.helperFuncs.throttler"], [18, "module-nokey.inspiration"], [18, "module-nokey.inspiration.dictum"], [19, "module-nokey.jokes"], [19, "module-nokey.jokes.joke_api"], [20, "module-nokey.language"], [20, "module-nokey.language.free_dictionary"], [21, "module-nokey.random"], [21, "module-nokey.random.random_user"], [22, "module-nokey.science_and_nature"], [22, "module-nokey.science_and_nature.integrated_taxonomic_information_system"], [22, "module-nokey.science_and_nature.nobel_prize"], [23, "module-nokey.spaceflight"], [23, "module-nokey.spaceflight.spaceflight_news"], [24, "module-nokey.tv_and_film"], [24, "module-nokey.tv_and_film.star_trek_api"], [25, "module-nokey.weather"], [25, "module-nokey.weather.national_weather_service"]], "nokey": [[2, "module-nokey"]], "boredapi (class in nokey.activities.bored_api)": [[3, "nokey.activities.bored_api.BoredAPI"]], "get_activity_by_key() (nokey.activities.bored_api.boredapi method)": [[3, "nokey.activities.bored_api.BoredAPI.get_activity_by_key"]], "get_docs_url() (nokey.activities.bored_api.boredapi method)": [[3, "nokey.activities.bored_api.BoredAPI.get_docs_url"]], "get_random_activity() (nokey.activities.bored_api.boredapi method)": [[3, "nokey.activities.bored_api.BoredAPI.get_random_activity"]], "get_random_activity_by_accessibility() (nokey.activities.bored_api.boredapi method)": [[3, "nokey.activities.bored_api.BoredAPI.get_random_activity_by_accessibility"]], "get_random_activity_by_participants() (nokey.activities.bored_api.boredapi method)": [[3, "nokey.activities.bored_api.BoredAPI.get_random_activity_by_participants"]], "get_random_activity_by_price() (nokey.activities.bored_api.boredapi method)": [[3, "nokey.activities.bored_api.BoredAPI.get_random_activity_by_price"]], "get_random_activity_by_type() (nokey.activities.bored_api.boredapi method)": [[3, "nokey.activities.bored_api.BoredAPI.get_random_activity_by_type"]], "get_random_activity_within_accessibility_range() (nokey.activities.bored_api.boredapi method)": [[3, "nokey.activities.bored_api.BoredAPI.get_random_activity_within_accessibility_range"]], "get_random_activity_within_price_range() (nokey.activities.bored_api.boredapi method)": [[3, "nokey.activities.bored_api.BoredAPI.get_random_activity_within_price_range"]], "nokey.activities": [[3, "module-nokey.activities"]], "nokey.activities.bored_api": [[3, "module-nokey.activities.bored_api"]], "dogapi (class in nokey.animals.dog_api)": [[4, "nokey.animals.dog_api.DogAPI"]], "about (nokey.animals.dog_api.dogapi attribute)": [[4, "nokey.animals.dog_api.DogAPI.about"]], "base_url (nokey.animals.dog_api.dogapi attribute)": [[4, "nokey.animals.dog_api.DogAPI.base_url"]], "get_all_dog_breeds() (nokey.animals.dog_api.dogapi method)": [[4, "nokey.animals.dog_api.DogAPI.get_all_dog_breeds"]], "get_all_subbreeds() (nokey.animals.dog_api.dogapi method)": [[4, "nokey.animals.dog_api.DogAPI.get_all_subBreeds"]], "get_docs_url() (nokey.animals.dog_api.dogapi method)": [[4, "nokey.animals.dog_api.DogAPI.get_docs_url"]], "get_dog_images_by_breed() (nokey.animals.dog_api.dogapi method)": [[4, "nokey.animals.dog_api.DogAPI.get_dog_images_by_breed"]], "get_random_dog_image() (nokey.animals.dog_api.dogapi method)": [[4, "nokey.animals.dog_api.DogAPI.get_random_dog_image"]], "get_random_dog_image_by_breed() (nokey.animals.dog_api.dogapi method)": [[4, "nokey.animals.dog_api.DogAPI.get_random_dog_image_by_breed"]], "nokey.animals": [[4, "module-nokey.animals"]], "nokey.animals.dog_api": [[4, "module-nokey.animals.dog_api"]], "artic (class in nokey.art_and_images.artic)": [[5, "nokey.art_and_images.artic.Artic"]], "lorempicsum (class in nokey.art_and_images.lorem_picsum)": [[5, "nokey.art_and_images.lorem_picsum.LoremPicsum"]], "download_image() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.download_image"]], "get_agent_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_agent_by_id"]], "get_agent_role_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_agent_role_by_id"]], "get_agent_roles_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_agent_roles_by_fields"]], "get_agent_roles_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_agent_roles_data_fields"]], "get_agent_type_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_agent_type_by_id"]], "get_agent_types_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_agent_types_by_fields"]], "get_agent_types_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_agent_types_data_fields"]], "get_agents_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_agents_by_fields"]], "get_agents_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_agents_data_fields"]], "get_all_agent_roles() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_agent_roles"]], "get_all_agent_types() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_agent_types"]], "get_all_agents() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_agents"]], "get_all_articles() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_articles"]], "get_all_artists() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_artists"]], "get_all_artwork_date_qualifiers() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_artwork_date_qualifiers"]], "get_all_artwork_place_qualifiers() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_artwork_place_qualifiers"]], "get_all_artwork_types() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_artwork_types"]], "get_all_artworks() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_artworks"]], "get_all_category_terms() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_category_terms"]], "get_all_digital_catalogs() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_digital_catalogs"]], "get_all_digital_publication_sections() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_digital_publication_sections"]], "get_all_educator_resources() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_educator_resources"]], "get_all_event_occurrences() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_event_occurrences"]], "get_all_event_programs() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_event_programs"]], "get_all_events() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_events"]], "get_all_exhibitions() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_exhibitions"]], "get_all_galleries() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_galleries"]], "get_all_generic_pages() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_generic_pages"]], "get_all_highlights() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_highlights"]], "get_all_images() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_images"]], "get_all_mobile_sounds() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_mobile_sounds"]], "get_all_places() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_places"]], "get_all_press_releases() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_press_releases"]], "get_all_printed_catalogs() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_printed_catalogs"]], "get_all_products() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_products"]], "get_all_publications() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_publications"]], "get_all_sections() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_sections"]], "get_all_sites() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_sites"]], "get_all_sounds() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_sounds"]], "get_all_static_pages() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_static_pages"]], "get_all_texts() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_texts"]], "get_all_tours() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_tours"]], "get_all_videos() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_all_videos"]], "get_article_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_article_by_id"]], "get_articles_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_articles_by_fields"]], "get_articles_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_articles_data_fields"]], "get_artist_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artist_by_id"]], "get_artists_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artists_by_fields"]], "get_artists_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artists_data_fields"]], "get_artwork_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_by_id"]], "get_artwork_date_qualifier_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_date_qualifier_by_id"]], "get_artwork_date_qualifiers_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_date_qualifiers_by_fields"]], "get_artwork_date_qualifiers_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_date_qualifiers_data_fields"]], "get_artwork_place_qualifier_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_place_qualifier_by_id"]], "get_artwork_place_qualifiers_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_place_qualifiers_by_fields"]], "get_artwork_place_qualifiers_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_place_qualifiers_data_fields"]], "get_artwork_type_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_type_by_id"]], "get_artwork_types_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_types_by_fields"]], "get_artwork_types_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artwork_types_data_fields"]], "get_artworks_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artworks_by_fields"]], "get_artworks_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_artworks_data_fields"]], "get_category_term_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_category_term_by_id"]], "get_category_terms_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_category_terms_by_fields"]], "get_category_terms_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_category_terms_data_fields"]], "get_digital_catalog_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_digital_catalog_by_id"]], "get_digital_catalogs_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_digital_catalogs_by_fields"]], "get_digital_catalogs_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_digital_catalogs_data_fields"]], "get_digital_publication_section_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_digital_publication_section_by_id"]], "get_digital_publication_sections_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_digital_publication_sections_by_fields"]], "get_digital_publication_sections_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_digital_publication_sections_data_fields"]], "get_docs_url() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_docs_url"]], "get_docs_url() (nokey.art_and_images.lorem_picsum.lorempicsum method)": [[5, "nokey.art_and_images.lorem_picsum.LoremPicsum.get_docs_url"]], "get_educator_resource_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_educator_resource_by_id"]], "get_educator_resources_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_educator_resources_by_fields"]], "get_educator_resources_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_educator_resources_data_fields"]], "get_event_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_event_by_id"]], "get_event_occurrence_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_event_occurrence_by_id"]], "get_event_occurrences_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_event_occurrences_by_fields"]], "get_event_occurrences_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_event_occurrences_data_fields"]], "get_event_program_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_event_program_by_id"]], "get_event_programs_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_event_programs_by_fields"]], "get_event_programs_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_event_programs_data_fields"]], "get_events_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_events_by_fields"]], "get_events_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_events_data_fields"]], "get_exhibition_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_exhibition_by_id"]], "get_exhibitions_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_exhibitions_by_fields"]], "get_exhibitions_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_exhibitions_data_fields"]], "get_galleries_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_galleries_by_fields"]], "get_galleries_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_galleries_data_fields"]], "get_gallery_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_gallery_by_id"]], "get_generic_page_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_generic_page_by_id"]], "get_generic_pages_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_generic_pages_by_fields"]], "get_generic_pages_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_generic_pages_data_fields"]], "get_highlight_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_highlight_by_id"]], "get_highlights_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_highlights_by_fields"]], "get_highlights_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_highlights_data_fields"]], "get_image_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_image_by_id"]], "get_image_by_id() (nokey.art_and_images.lorem_picsum.lorempicsum method)": [[5, "nokey.art_and_images.lorem_picsum.LoremPicsum.get_image_by_id"]], "get_image_info_by_id() (nokey.art_and_images.lorem_picsum.lorempicsum method)": [[5, "nokey.art_and_images.lorem_picsum.LoremPicsum.get_image_info_by_id"]], "get_image_info_by_seed() (nokey.art_and_images.lorem_picsum.lorempicsum method)": [[5, "nokey.art_and_images.lorem_picsum.LoremPicsum.get_image_info_by_seed"]], "get_images_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_images_by_fields"]], "get_images_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_images_data_fields"]], "get_mobile_sound_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_mobile_sound_by_id"]], "get_mobile_sounds_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_mobile_sounds_by_fields"]], "get_mobile_sounds_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_mobile_sounds_data_fields"]], "get_place_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_place_by_id"]], "get_places_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_places_by_fields"]], "get_places_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_places_data_fields"]], "get_press_release_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_press_release_by_id"]], "get_press_releases_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_press_releases_by_fields"]], "get_press_releases_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_press_releases_data_fields"]], "get_printed_catalog_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_printed_catalog_by_id"]], "get_printed_catalogs_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_printed_catalogs_by_fields"]], "get_printed_catalogs_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_printed_catalogs_data_fields"]], "get_product_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_product_by_id"]], "get_products_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_products_by_fields"]], "get_products_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_products_data_fields"]], "get_publication_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_publication_by_id"]], "get_publications_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_publications_by_fields"]], "get_publications_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_publications_data_fields"]], "get_random_image() (nokey.art_and_images.lorem_picsum.lorempicsum method)": [[5, "nokey.art_and_images.lorem_picsum.LoremPicsum.get_random_image"]], "get_section_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_section_by_id"]], "get_sections_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_sections_by_fields"]], "get_sections_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_sections_data_fields"]], "get_site_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_site_by_id"]], "get_sites_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_sites_by_fields"]], "get_sites_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_sites_data_fields"]], "get_sound_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_sound_by_id"]], "get_sounds_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_sounds_by_fields"]], "get_sounds_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_sounds_data_fields"]], "get_static_page_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_static_page_by_id"]], "get_static_pages_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_static_pages_by_fields"]], "get_static_pages_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_static_pages_data_fields"]], "get_static_random_image() (nokey.art_and_images.lorem_picsum.lorempicsum method)": [[5, "nokey.art_and_images.lorem_picsum.LoremPicsum.get_static_random_image"]], "get_text_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_text_by_id"]], "get_texts_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_texts_by_fields"]], "get_texts_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_texts_data_fields"]], "get_tour_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_tour_by_id"]], "get_tours_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_tours_by_fields"]], "get_tours_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_tours_data_fields"]], "get_video_by_id() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_video_by_id"]], "get_videos_by_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_videos_by_fields"]], "get_videos_data_fields() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.get_videos_data_fields"]], "list_images() (nokey.art_and_images.lorem_picsum.lorempicsum method)": [[5, "nokey.art_and_images.lorem_picsum.LoremPicsum.list_images"]], "nokey.art_and_images": [[5, "module-nokey.art_and_images"]], "nokey.art_and_images.artic": [[5, "module-nokey.art_and_images.artic"]], "nokey.art_and_images.lorem_picsum": [[5, "module-nokey.art_and_images.lorem_picsum"]], "search_agent_roles() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_agent_roles"]], "search_agent_types() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_agent_types"]], "search_agents() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_agents"]], "search_articles() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_articles"]], "search_artists() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_artists"]], "search_artwork_date_qualifiers() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_artwork_date_qualifiers"]], "search_artwork_place_qualifiers() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_artwork_place_qualifiers"]], "search_artwork_types() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_artwork_types"]], "search_artworks() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_artworks"]], "search_category_terms() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_category_terms"]], "search_digital_catalogs() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_digital_catalogs"]], "search_digital_publication_sections() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_digital_publication_sections"]], "search_educator_resources() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_educator_resources"]], "search_event_occurrences() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_event_occurrences"]], "search_event_programs() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_event_programs"]], "search_events() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_events"]], "search_exhibitions() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_exhibitions"]], "search_galleries() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_galleries"]], "search_generic_pages() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_generic_pages"]], "search_highlights() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_highlights"]], "search_images() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_images"]], "search_mobile_sounds() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_mobile_sounds"]], "search_places() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_places"]], "search_press_releases() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_press_releases"]], "search_printed_catalogs() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_printed_catalogs"]], "search_products() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_products"]], "search_publications() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_publications"]], "search_sections() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_sections"]], "search_sites() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_sites"]], "search_sounds() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_sounds"]], "search_static_pages() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_static_pages"]], "search_texts() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_texts"]], "search_tours() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_tours"]], "search_videos() (nokey.art_and_images.artic.artic method)": [[5, "nokey.art_and_images.artic.Artic.search_videos"]], "gutendex (class in nokey.books_and_literature.gutendex)": [[6, "nokey.books_and_literature.gutendex.Gutendex"]], "stephenkingapi (class in nokey.books_and_literature.stephen_king)": [[6, "nokey.books_and_literature.stephen_king.StephenKingAPI"]], "get_authors_before_specified_year() (nokey.books_and_literature.gutendex.gutendex method)": [[6, "nokey.books_and_literature.gutendex.Gutendex.get_authors_before_specified_year"]], "get_authors_within_date_range() (nokey.books_and_literature.gutendex.gutendex method)": [[6, "nokey.books_and_literature.gutendex.Gutendex.get_authors_within_date_range"]], "get_book_by_id() (nokey.books_and_literature.gutendex.gutendex method)": [[6, "nokey.books_and_literature.gutendex.Gutendex.get_book_by_id"]], "get_books() (nokey.books_and_literature.gutendex.gutendex method)": [[6, "nokey.books_and_literature.gutendex.Gutendex.get_books"]], "get_books_by_ids() (nokey.books_and_literature.gutendex.gutendex method)": [[6, "nokey.books_and_literature.gutendex.Gutendex.get_books_by_ids"]], "get_docs_url() (nokey.books_and_literature.gutendex.gutendex method)": [[6, "nokey.books_and_literature.gutendex.Gutendex.get_docs_url"]], "get_docs_url() (nokey.books_and_literature.stephen_king.stephenkingapi method)": [[6, "nokey.books_and_literature.stephen_king.StephenKingAPI.get_docs_url"]], "get_stephen_king_book_by_id() (nokey.books_and_literature.stephen_king.stephenkingapi method)": [[6, "nokey.books_and_literature.stephen_king.StephenKingAPI.get_stephen_king_book_by_id"]], "get_stephen_king_books() (nokey.books_and_literature.stephen_king.stephenkingapi method)": [[6, "nokey.books_and_literature.stephen_king.StephenKingAPI.get_stephen_king_books"]], "get_stephen_king_short_stories() (nokey.books_and_literature.stephen_king.stephenkingapi method)": [[6, "nokey.books_and_literature.stephen_king.StephenKingAPI.get_stephen_king_short_stories"]], "get_stephen_king_short_story_by_id() (nokey.books_and_literature.stephen_king.stephenkingapi method)": [[6, "nokey.books_and_literature.stephen_king.StephenKingAPI.get_stephen_king_short_story_by_id"]], "get_stephen_king_villain_by_id() (nokey.books_and_literature.stephen_king.stephenkingapi method)": [[6, "nokey.books_and_literature.stephen_king.StephenKingAPI.get_stephen_king_villain_by_id"]], "get_stephen_king_villains() (nokey.books_and_literature.stephen_king.stephenkingapi method)": [[6, "nokey.books_and_literature.stephen_king.StephenKingAPI.get_stephen_king_villains"]], "nokey.books_and_literature": [[6, "module-nokey.books_and_literature"]], "nokey.books_and_literature.gutendex": [[6, "module-nokey.books_and_literature.gutendex"]], "nokey.books_and_literature.stephen_king": [[6, "module-nokey.books_and_literature.stephen_king"]], "search_books_by_author_and_title() (nokey.books_and_literature.gutendex.gutendex method)": [[6, "nokey.books_and_literature.gutendex.Gutendex.search_books_by_author_and_title"]], "search_books_by_topic() (nokey.books_and_literature.gutendex.gutendex method)": [[6, "nokey.books_and_literature.gutendex.Gutendex.search_books_by_topic"]], "nagerdate (class in nokey.calendar.nager_date)": [[7, "nokey.calendar.nager_date.NagerDate"]], "get_available_countries() (nokey.calendar.nager_date.nagerdate method)": [[7, "nokey.calendar.nager_date.NagerDate.get_available_countries"]], "get_country_info() (nokey.calendar.nager_date.nagerdate method)": [[7, "nokey.calendar.nager_date.NagerDate.get_country_info"]], "get_docs_url() (nokey.calendar.nager_date.nagerdate method)": [[7, "nokey.calendar.nager_date.NagerDate.get_docs_url"]], "get_long_weekends_by_country() (nokey.calendar.nager_date.nagerdate method)": [[7, "nokey.calendar.nager_date.NagerDate.get_long_weekends_by_country"]], "get_public_holdiays_for_next_365() (nokey.calendar.nager_date.nagerdate method)": [[7, "nokey.calendar.nager_date.NagerDate.get_public_holdiays_for_next_365"]], "get_public_holidays() (nokey.calendar.nager_date.nagerdate method)": [[7, "nokey.calendar.nager_date.NagerDate.get_public_holidays"]], "get_public_holidays_worldwide_for_next_7() (nokey.calendar.nager_date.nagerdate method)": [[7, "nokey.calendar.nager_date.NagerDate.get_public_holidays_worldwide_for_next_7"]], "is_today_a_public_holiday() (nokey.calendar.nager_date.nagerdate method)": [[7, "nokey.calendar.nager_date.NagerDate.is_today_a_public_holiday"]], "nokey.calendar": [[7, "module-nokey.calendar"]], "nokey.calendar.nager_date": [[7, "module-nokey.calendar.nager_date"]], "restcountries (class in nokey.country_info.rest_country)": [[8, "nokey.country_info.rest_country.RestCountries"]], "get_all_countries() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_all_countries"]], "get_country_by_capital() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_country_by_capital"]], "get_country_by_code() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_country_by_code"]], "get_country_by_currency() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_country_by_currency"]], "get_country_by_language() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_country_by_language"]], "get_country_by_name() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_country_by_name"]], "get_country_by_region() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_country_by_region"]], "get_country_by_subregion() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_country_by_subregion"]], "get_country_by_translation() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_country_by_translation"]], "get_docs_url() (nokey.country_info.rest_country.restcountries method)": [[8, "nokey.country_info.rest_country.RestCountries.get_docs_url"]], "nokey.country_info": [[8, "module-nokey.country_info"]], "nokey.country_info.rest_country": [[8, "module-nokey.country_info.rest_country"]], "apisguru (class in nokey.developer_tools.apis_guru)": [[9, "nokey.developer_tools.apis_guru.APIsGuru"]], "filterlists (class in nokey.developer_tools.filter_lists)": [[9, "nokey.developer_tools.filter_lists.FilterLists"]], "microlink (class in nokey.developer_tools.microlink)": [[9, "nokey.developer_tools.microlink.Microlink"]], "urlhaus (class in nokey.developer_tools.url_haus)": [[9, "nokey.developer_tools.url_haus.URLHaus"]], "urlshortener (class in nokey.developer_tools.url_shortener)": [[9, "nokey.developer_tools.url_shortener.UrlShortener"]], "download_malware_sample() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.download_malware_sample"]], "get_all_apis() (nokey.developer_tools.apis_guru.apisguru method)": [[9, "nokey.developer_tools.apis_guru.APIsGuru.get_all_apis"]], "get_all_providers() (nokey.developer_tools.apis_guru.apisguru method)": [[9, "nokey.developer_tools.apis_guru.APIsGuru.get_all_providers"]], "get_apis_by_provider() (nokey.developer_tools.apis_guru.apisguru method)": [[9, "nokey.developer_tools.apis_guru.APIsGuru.get_apis_by_provider"]], "get_basic_metrics() (nokey.developer_tools.apis_guru.apisguru method)": [[9, "nokey.developer_tools.apis_guru.APIsGuru.get_basic_metrics"]], "get_color_palette_for_target_url() (nokey.developer_tools.microlink.microlink method)": [[9, "nokey.developer_tools.microlink.Microlink.get_color_palette_for_target_url"]], "get_docs_url() (nokey.developer_tools.apis_guru.apisguru method)": [[9, "nokey.developer_tools.apis_guru.APIsGuru.get_docs_url"]], "get_docs_url() (nokey.developer_tools.filter_lists.filterlists method)": [[9, "nokey.developer_tools.filter_lists.FilterLists.get_docs_url"]], "get_docs_url() (nokey.developer_tools.microlink.microlink method)": [[9, "nokey.developer_tools.microlink.Microlink.get_docs_url"]], "get_docs_url() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.get_docs_url"]], "get_docs_url() (nokey.developer_tools.url_shortener.urlshortener method)": [[9, "nokey.developer_tools.url_shortener.UrlShortener.get_docs_url"]], "get_info_about_host() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.get_info_about_host"]], "get_info_about_payload() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.get_info_about_payload"]], "get_info_about_signature() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.get_info_about_signature"]], "get_info_about_tag() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.get_info_about_tag"]], "get_info_about_url() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.get_info_about_url"]], "get_info_about_url_by_id() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.get_info_about_url_by_id"]], "get_languages() (nokey.developer_tools.filter_lists.filterlists method)": [[9, "nokey.developer_tools.filter_lists.FilterLists.get_languages"]], "get_licenses() (nokey.developer_tools.filter_lists.filterlists method)": [[9, "nokey.developer_tools.filter_lists.FilterLists.get_licenses"]], "get_list_by_id() (nokey.developer_tools.filter_lists.filterlists method)": [[9, "nokey.developer_tools.filter_lists.FilterLists.get_list_by_id"]], "get_lists() (nokey.developer_tools.filter_lists.filterlists method)": [[9, "nokey.developer_tools.filter_lists.FilterLists.get_lists"]], "get_maintainers() (nokey.developer_tools.filter_lists.filterlists method)": [[9, "nokey.developer_tools.filter_lists.FilterLists.get_maintainers"]], "get_metadata_for_target_url() (nokey.developer_tools.microlink.microlink method)": [[9, "nokey.developer_tools.microlink.Microlink.get_metadata_for_target_url"]], "get_particular_api_version_no_service_name() (nokey.developer_tools.apis_guru.apisguru method)": [[9, "nokey.developer_tools.apis_guru.APIsGuru.get_particular_api_version_no_service_name"]], "get_particular_api_version_with_service_name() (nokey.developer_tools.apis_guru.apisguru method)": [[9, "nokey.developer_tools.apis_guru.APIsGuru.get_particular_api_version_with_service_name"]], "get_pdf_of_target_url() (nokey.developer_tools.microlink.microlink method)": [[9, "nokey.developer_tools.microlink.Microlink.get_pdf_of_target_url"]], "get_recent_payloads() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.get_recent_payloads"]], "get_recent_urls() (nokey.developer_tools.url_haus.urlhaus method)": [[9, "nokey.developer_tools.url_haus.URLHaus.get_recent_urls"]], "get_screenshot_of_target_url() (nokey.developer_tools.microlink.microlink method)": [[9, "nokey.developer_tools.microlink.Microlink.get_screenshot_of_target_url"]], "get_service_names_by_provider() (nokey.developer_tools.apis_guru.apisguru method)": [[9, "nokey.developer_tools.apis_guru.APIsGuru.get_service_names_by_provider"]], "get_software() (nokey.developer_tools.filter_lists.filterlists method)": [[9, "nokey.developer_tools.filter_lists.FilterLists.get_software"]], "get_syntaxes() (nokey.developer_tools.filter_lists.filterlists method)": [[9, "nokey.developer_tools.filter_lists.FilterLists.get_syntaxes"]], "get_tags() (nokey.developer_tools.filter_lists.filterlists method)": [[9, "nokey.developer_tools.filter_lists.FilterLists.get_tags"]], "nokey.developer_tools": [[9, "module-nokey.developer_tools"]], "nokey.developer_tools.apis_guru": [[9, "module-nokey.developer_tools.apis_guru"]], "nokey.developer_tools.filter_lists": [[9, "module-nokey.developer_tools.filter_lists"]], "nokey.developer_tools.microlink": [[9, "module-nokey.developer_tools.microlink"]], "nokey.developer_tools.url_haus": [[9, "module-nokey.developer_tools.url_haus"]], "nokey.developer_tools.url_shortener": [[9, "module-nokey.developer_tools.url_shortener"]], "shorten_url() (nokey.developer_tools.url_shortener.urlshortener method)": [[9, "nokey.developer_tools.url_shortener.UrlShortener.shorten_url"]], "universitydomainsandnames (class in nokey.education.university_domains_and_names)": [[10, "nokey.education.university_domains_and_names.UniversityDomainsAndNames"]], "get_docs_url() (nokey.education.university_domains_and_names.universitydomainsandnames method)": [[10, "nokey.education.university_domains_and_names.UniversityDomainsAndNames.get_docs_url"]], "get_university_name_and_domain() (nokey.education.university_domains_and_names.universitydomainsandnames method)": [[10, "nokey.education.university_domains_and_names.UniversityDomainsAndNames.get_university_name_and_domain"]], "nokey.education": [[10, "module-nokey.education"]], "nokey.education.university_domains_and_names": [[10, "module-nokey.education.university_domains_and_names"]], "update_list() (nokey.education.university_domains_and_names.universitydomainsandnames method)": [[10, "nokey.education.university_domains_and_names.UniversityDomainsAndNames.update_list"]], "coinmap (class in nokey.finance_and_crypto.coinmap)": [[11, "nokey.finance_and_crypto.coinmap.Coinmap"]], "exchangeapi (class in nokey.finance_and_crypto.exchange_api)": [[11, "nokey.finance_and_crypto.exchange_api.ExchangeAPI"]], "wallstreetbets (class in nokey.finance_and_crypto.wallstreet_bets)": [[11, "nokey.finance_and_crypto.wallstreet_bets.WallstreetBets"]], "get_atm_operators() (nokey.finance_and_crypto.coinmap.coinmap method)": [[11, "nokey.finance_and_crypto.coinmap.Coinmap.get_atm_operators"]], "get_available_currencies() (nokey.finance_and_crypto.exchange_api.exchangeapi method)": [[11, "nokey.finance_and_crypto.exchange_api.ExchangeAPI.get_available_currencies"]], "get_coins() (nokey.finance_and_crypto.coinmap.coinmap method)": [[11, "nokey.finance_and_crypto.coinmap.Coinmap.get_coins"]], "get_comments_by_venue_id() (nokey.finance_and_crypto.coinmap.coinmap method)": [[11, "nokey.finance_and_crypto.coinmap.Coinmap.get_comments_by_venue_id"]], "get_docs_url() (nokey.finance_and_crypto.coinmap.coinmap method)": [[11, "nokey.finance_and_crypto.coinmap.Coinmap.get_docs_url"]], "get_docs_url() (nokey.finance_and_crypto.exchange_api.exchangeapi method)": [[11, "nokey.finance_and_crypto.exchange_api.ExchangeAPI.get_docs_url"]], "get_docs_url() (nokey.finance_and_crypto.wallstreet_bets.wallstreetbets method)": [[11, "nokey.finance_and_crypto.wallstreet_bets.WallstreetBets.get_docs_url"]], "get_rates_from_base() (nokey.finance_and_crypto.exchange_api.exchangeapi method)": [[11, "nokey.finance_and_crypto.exchange_api.ExchangeAPI.get_rates_from_base"]], "get_ratings_by_venue_id() (nokey.finance_and_crypto.coinmap.coinmap method)": [[11, "nokey.finance_and_crypto.coinmap.Coinmap.get_ratings_by_venue_id"]], "get_stock_sentiment_from_reddit() (nokey.finance_and_crypto.wallstreet_bets.wallstreetbets method)": [[11, "nokey.finance_and_crypto.wallstreet_bets.WallstreetBets.get_stock_sentiment_from_reddit"]], "get_venue_by_id() (nokey.finance_and_crypto.coinmap.coinmap method)": [[11, "nokey.finance_and_crypto.coinmap.Coinmap.get_venue_by_id"]], "get_venues() (nokey.finance_and_crypto.coinmap.coinmap method)": [[11, "nokey.finance_and_crypto.coinmap.Coinmap.get_venues"]], "nokey.finance_and_crypto": [[11, "module-nokey.finance_and_crypto"]], "nokey.finance_and_crypto.coinmap": [[11, "module-nokey.finance_and_crypto.coinmap"]], "nokey.finance_and_crypto.exchange_api": [[11, "module-nokey.finance_and_crypto.exchange_api"]], "nokey.finance_and_crypto.wallstreet_bets": [[11, "module-nokey.finance_and_crypto.wallstreet_bets"]], "fruityvice (class in nokey.food.fruityvice)": [[12, "nokey.food.fruityvice.Fruityvice"]], "get_all_fruit() (nokey.food.fruityvice.fruityvice method)": [[12, "nokey.food.fruityvice.Fruityvice.get_all_fruit"]], "get_docs_url() (nokey.food.fruityvice.fruityvice method)": [[12, "nokey.food.fruityvice.Fruityvice.get_docs_url"]], "get_fruit_by_family() (nokey.food.fruityvice.fruityvice method)": [[12, "nokey.food.fruityvice.Fruityvice.get_fruit_by_family"]], "get_fruit_by_genus() (nokey.food.fruityvice.fruityvice method)": [[12, "nokey.food.fruityvice.Fruityvice.get_fruit_by_genus"]], "get_fruit_by_nutrition() (nokey.food.fruityvice.fruityvice method)": [[12, "nokey.food.fruityvice.Fruityvice.get_fruit_by_nutrition"]], "get_fruit_by_order() (nokey.food.fruityvice.fruityvice method)": [[12, "nokey.food.fruityvice.Fruityvice.get_fruit_by_order"]], "nokey.food": [[12, "module-nokey.food"]], "nokey.food.fruityvice": [[12, "module-nokey.food.fruityvice"]], "freetogame (class in nokey.games.free_to_game)": [[13, "nokey.games.free_to_game.FreeToGame"]], "opentriviadb (class in nokey.games.open_trivia_db)": [[13, "nokey.games.open_trivia_db.OpenTriviaDB"]], "shadify (class in nokey.games.shadify)": [[13, "nokey.games.shadify.Shadify"]], "about_anagram() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_anagram"]], "about_camp() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_camp"]], "about_countries() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_countries"]], "about_kuromasu() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_kuromasu"]], "about_math() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_math"]], "about_memory() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_memory"]], "about_minesweeper() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_minesweeper"]], "about_schulte() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_schulte"]], "about_set() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_set"]], "about_sudoku() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_sudoku"]], "about_takuzu() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_takuzu"]], "about_wordsearch() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.about_wordsearch"]], "check_camp_task() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.check_camp_task"]], "check_kuromasu_task() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.check_kuromasu_task"]], "check_sudoku() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.check_sudoku"]], "check_takuzu() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.check_takuzu"]], "filter_games() (nokey.games.free_to_game.freetogame method)": [[13, "nokey.games.free_to_game.FreeToGame.filter_games"]], "generate_addition() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_addition"]], "generate_capital_quiz() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_capital_quiz"]], "generate_country_quiz() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_country_quiz"]], "generate_division() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_division"]], "generate_multiplication() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_multiplication"]], "generate_quadratic_equation() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_quadratic_equation"]], "generate_random_anagram() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_random_anagram"]], "generate_random_camp_task() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_random_camp_task"]], "generate_random_kuromasu_task() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_random_kuromasu_task"]], "generate_random_memory_grid() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_random_memory_grid"]], "generate_random_minesweeper_field() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_random_minesweeper_field"]], "generate_random_schulte_table() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_random_schulte_table"]], "generate_random_sudoku() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_random_sudoku"]], "generate_random_takuzu() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_random_takuzu"]], "generate_random_wordsearch_grid() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_random_wordsearch_grid"]], "generate_subtraction() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.generate_subtraction"]], "get_all_live_games() (nokey.games.free_to_game.freetogame method)": [[13, "nokey.games.free_to_game.FreeToGame.get_all_live_games"]], "get_all_set_cards() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.get_all_set_cards"]], "get_docs_url() (nokey.games.free_to_game.freetogame method)": [[13, "nokey.games.free_to_game.FreeToGame.get_docs_url"]], "get_docs_url() (nokey.games.open_trivia_db.opentriviadb method)": [[13, "nokey.games.open_trivia_db.OpenTriviaDB.get_docs_url"]], "get_docs_url() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.get_docs_url"]], "get_game_by_id() (nokey.games.free_to_game.freetogame method)": [[13, "nokey.games.free_to_game.FreeToGame.get_game_by_id"]], "get_games_by_category() (nokey.games.free_to_game.freetogame method)": [[13, "nokey.games.free_to_game.FreeToGame.get_games_by_category"]], "get_games_by_platform() (nokey.games.free_to_game.freetogame method)": [[13, "nokey.games.free_to_game.FreeToGame.get_games_by_platform"]], "get_games_by_platform_and_category() (nokey.games.free_to_game.freetogame method)": [[13, "nokey.games.free_to_game.FreeToGame.get_games_by_platform_and_category"]], "get_random_trivia_questions() (nokey.games.open_trivia_db.opentriviadb method)": [[13, "nokey.games.open_trivia_db.OpenTriviaDB.get_random_trivia_questions"]], "get_specified_trivia_questions() (nokey.games.open_trivia_db.opentriviadb method)": [[13, "nokey.games.open_trivia_db.OpenTriviaDB.get_specified_trivia_questions"]], "load_set_state() (nokey.games.shadify.shadify method)": [[13, "nokey.games.shadify.Shadify.load_set_state"]], "nokey.games": [[13, "module-nokey.games"]], "nokey.games.free_to_game": [[13, "module-nokey.games.free_to_game"]], "nokey.games.open_trivia_db": [[13, "module-nokey.games.open_trivia_db"]], "nokey.games.shadify": [[13, "module-nokey.games.shadify"]], "ip_api (class in nokey.geolocation.ip_api)": [[14, "nokey.geolocation.ip_api.IP_API"]], "zippopotomus (class in nokey.geolocation.zippopotamus)": [[14, "nokey.geolocation.zippopotamus.Zippopotomus"]], "get_docs_url() (nokey.geolocation.ip_api.ip_api method)": [[14, "nokey.geolocation.ip_api.IP_API.get_docs_url"]], "get_docs_url() (nokey.geolocation.zippopotamus.zippopotomus method)": [[14, "nokey.geolocation.zippopotamus.Zippopotomus.get_docs_url"]], "get_info_by_zipcode() (nokey.geolocation.zippopotamus.zippopotomus method)": [[14, "nokey.geolocation.zippopotamus.Zippopotomus.get_info_by_zipcode"]], "get_location_info_by_ip_address() (nokey.geolocation.ip_api.ip_api method)": [[14, "nokey.geolocation.ip_api.IP_API.get_location_info_by_ip_address"]], "get_zipcode_by_city() (nokey.geolocation.zippopotamus.zippopotomus method)": [[14, "nokey.geolocation.zippopotamus.Zippopotomus.get_zipcode_by_city"]], "nokey.geolocation": [[14, "module-nokey.geolocation"]], "nokey.geolocation.ip_api": [[14, "module-nokey.geolocation.ip_api"]], "nokey.geolocation.zippopotamus": [[14, "module-nokey.geolocation.zippopotamus"]], "federalregister (class in nokey.government.federal_register)": [[15, "nokey.government.federal_register.FederalRegister"]], "usaspending (class in nokey.government.usa_spending)": [[15, "nokey.government.usa_spending.USAspending"]], "awarding_agency_and_office_autocomplete() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.awarding_agency_and_office_autocomplete"]], "bulk_award_download() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.bulk_award_download"]], "cfda_autocomplete() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.cfda_autocomplete"]], "city_autocomplete() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.city_autocomplete"]], "download_account() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.download_account"]], "download_assistance_data() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.download_assistance_data"]], "download_award_data_advanced() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.download_award_data_advanced"]], "download_contract_data() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.download_contract_data"]], "download_def_data() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.download_def_data"]], "download_def_recipient_data() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.download_def_recipient_data"]], "download_idv_data() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.download_idv_data"]], "download_transaction_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.download_transaction_count"]], "download_transactions_data_advanced() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.download_transactions_data_advanced"]], "explore_spending() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.explore_spending"]], "funding_agency_autocomplete() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.funding_agency_autocomplete"]], "get_agencies_awarding_def_loans() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_agencies_awarding_def_loans"]], "get_agencies_details() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_agencies_details"]], "get_agencies_receiving_def_funding() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_agencies_receiving_def_funding"]], "get_agency_by_slug() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_agency_by_slug"]], "get_agency_overview_by_agency_id() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_agency_overview_by_agency_id"]], "get_agency_overview_by_toptier_code() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_agency_overview_by_toptier_code"]], "get_agency_overview_by_year() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_agency_overview_by_year"]], "get_agency_overview_info() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_agency_overview_info"]], "get_agency_reporting_publish_dates() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_agency_reporting_publish_dates"]], "get_agency_summary_info() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_agency_summary_info"]], "get_aggregated_def_spending() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_aggregated_def_spending"]], "get_aggregated_def_spending_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_aggregated_def_spending_count"]], "get_award_accounts() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_award_accounts"]], "get_award_data() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_award_data"]], "get_award_funding_data() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_award_funding_data"]], "get_award_funding_obligations_and_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_award_funding_obligations_and_count"]], "get_award_last_updated() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_award_last_updated"]], "get_award_transactions_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_award_transactions_count"]], "get_award_types() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_award_types"]], "get_awards_type_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_awards_type_count"]], "get_budget_function_count_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_budget_function_count_for_agency"]], "get_budget_functions() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_budget_functions"]], "get_budget_functions_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_budget_functions_for_agency"]], "get_budget_subfunctions() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_budget_subfunctions"]], "get_budgetary_resources_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_budgetary_resources_for_agency"]], "get_cfda_programs_receiving_def_funding() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_cfda_programs_receiving_def_funding"]], "get_cfda_receiving_def_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_cfda_receiving_def_count"]], "get_child_recipients_by_duns_or_uei() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_child_recipients_by_duns_or_uei"]], "get_count_agencies_receiving_def() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_count_agencies_receiving_def"]], "get_current_public_inspection_documents() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_current_public_inspection_documents"]], "get_data_dictionary() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_data_dictionary"]], "get_def_codes() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_def_codes"]], "get_def_loans_for_cfda() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_def_loans_for_cfda"]], "get_def_loans_for_federal_accounts() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_def_loans_for_federal_accounts"]], "get_def_loans_for_object_classes() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_def_loans_for_object_classes"]], "get_def_loans_for_recipients() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_def_loans_for_recipients"]], "get_def_spending_by_geography() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_def_spending_by_geography"]], "get_defc_receiving_def_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_defc_receiving_def_count"]], "get_docs_url() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_docs_url"]], "get_docs_url() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_docs_url"]], "get_document_counts_by_facet() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_document_counts_by_facet"]], "get_document_toc_by_date() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_document_toc_by_date"]], "get_download_status() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_download_status"]], "get_fed_reg_document() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_fed_reg_document"]], "get_federal_account() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_federal_account"]], "get_federal_account_by_obligation() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_federal_account_by_obligation"]], "get_federal_accounts_by_bureau_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_federal_accounts_by_bureau_for_agency"]], "get_federal_accounts_count_by_award() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_federal_accounts_count_by_award"]], "get_federal_accounts_count_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_federal_accounts_count_for_agency"]], "get_federal_accounts_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_federal_accounts_for_agency"]], "get_federal_accounts_receiving_def_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_federal_accounts_receiving_def_count"]], "get_federal_accounts_receiving_def_funding() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_federal_accounts_receiving_def_funding"]], "get_federal_accounts_under_idv() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_federal_accounts_under_idv"]], "get_filter_hash_for_url() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_filter_hash_for_url"]], "get_filter_object_from_hash() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_filter_object_from_hash"]], "get_financial_balances() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_financial_balances"]], "get_financial_spending_by_object_class() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_financial_spending_by_object_class"]], "get_financial_spending_for_minor_object_class() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_financial_spending_for_minor_object_class"]], "get_fiscal_year_snapshot_for_federal_account() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_fiscal_year_snapshot_for_federal_account"]], "get_glossary() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_glossary"]], "get_idv_activity() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_idv_activity"]], "get_idv_amounts() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_idv_amounts"]], "get_idv_awards() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_idv_awards"]], "get_idv_federal_account_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_idv_federal_account_count"]], "get_idv_funding() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_idv_funding"]], "get_idv_funding_totals() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_idv_funding_totals"]], "get_image_variants_by_id() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_image_variants_by_id"]], "get_multiple_fed_reg_documents() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_multiple_fed_reg_documents"]], "get_multiple_public_inspection_documents() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_multiple_public_inspection_documents"]], "get_naics_codes() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_naics_codes"]], "get_new_awards_count_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_new_awards_count_for_agency"]], "get_new_awards_over_time() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_new_awards_over_time"]], "get_object_classes_count_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_object_classes_count_for_agency"]], "get_object_classes_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_object_classes_for_agency"]], "get_object_classes_for_tas() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_object_classes_for_tas"]], "get_object_classes_receiving_def_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_object_classes_receiving_def_count"]], "get_object_classes_receiving_def_funding() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_object_classes_receiving_def_funding"]], "get_obligation_difference_data() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_obligation_difference_data"]], "get_obligations_by_award_category_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_obligations_by_award_category_for_agency"]], "get_program_activities_for_tas() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_program_activities_for_tas"]], "get_program_activity_count_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_program_activity_count_for_agency"]], "get_program_activity_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_program_activity_for_agency"]], "get_psc_search_tree_nodes() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_psc_search_tree_nodes"]], "get_public_inspection_document() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_public_inspection_document"]], "get_recipient_award_spending() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_recipient_award_spending"]], "get_recipient_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_recipient_count"]], "get_recipient_overview() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_recipient_overview"]], "get_recipients_receiving_def_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_recipients_receiving_def_count"]], "get_recipients_receiving_def_funding() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_recipients_receiving_def_funding"]], "get_reporting_publishing_dates_for_single_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_reporting_publishing_dates_for_single_agency"]], "get_spending_by_award() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_award"]], "get_spending_by_award_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_award_count"]], "get_spending_by_awarding_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_awarding_agency"]], "get_spending_by_awarding_subagency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_awarding_subagency"]], "get_spending_by_cfda() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_cfda"]], "get_spending_by_country() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_country"]], "get_spending_by_county() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_county"]], "get_spending_by_district() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_district"]], "get_spending_by_federal_account() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_federal_account"]], "get_spending_by_funding_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_funding_agency"]], "get_spending_by_funding_subagency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_funding_subagency"]], "get_spending_by_geography() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_geography"]], "get_spending_by_naics() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_naics"]], "get_spending_by_psc() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_psc"]], "get_spending_by_state_territory() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_state_territory"]], "get_spending_by_transaction() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_transaction"]], "get_spending_by_transaction_count() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_by_transaction_count"]], "get_spending_data_by_object_class() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_data_by_object_class"]], "get_spending_over_time() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_spending_over_time"]], "get_state_award_breakdown() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_state_award_breakdown"]], "get_state_metadata() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_state_metadata"]], "get_states() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_states"]], "get_sub_agencies_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_sub_agencies_for_agency"]], "get_sub_agency_count_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_sub_agency_count_for_agency"]], "get_subawards() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_subawards"]], "get_subawards_for_award() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_subawards_for_award"]], "get_subcomponents_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_subcomponents_for_agency"]], "get_submission_periods() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_submission_periods"]], "get_suggested_search_by_slug() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_suggested_search_by_slug"]], "get_suggested_searches_by_section() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.get_suggested_searches_by_section"]], "get_tas_discrepancies_data() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_tas_discrepancies_data"]], "get_tas_search_tree_nodes() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_tas_search_tree_nodes"]], "get_toptier_agencies() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_toptier_agencies"]], "get_total_budgetary_resources() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_total_budgetary_resources"]], "get_transaction_spending_summary() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_transaction_spending_summary"]], "get_transactions() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_transactions"]], "get_unlinked_awards_for_agency() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.get_unlinked_awards_for_agency"]], "glossary_autocomplete() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.glossary_autocomplete"]], "list_agencies() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.list_agencies"]], "list_monthly_files() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.list_monthly_files"]], "location_autocomplete() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.location_autocomplete"]], "naics_autocomplete() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.naics_autocomplete"]], "nokey.government": [[15, "module-nokey.government"]], "nokey.government.federal_register": [[15, "module-nokey.government.federal_register"]], "nokey.government.usa_spending": [[15, "module-nokey.government.usa_spending"]], "psc_autocomplete() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.psc_autocomplete"]], "recipient_autocomplete() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.recipient_autocomplete"]], "search_all_documents() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.search_all_documents"]], "search_all_public_inspection_documents() (nokey.government.federal_register.federalregister method)": [[15, "nokey.government.federal_register.FederalRegister.search_all_public_inspection_documents"]], "search_federal_accounts() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.search_federal_accounts"]], "search_recipients() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.search_recipients"]], "tas_autocomplete_a() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.tas_autocomplete_a"]], "tas_autocomplete_aid() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.tas_autocomplete_aid"]], "tas_autocomplete_ata() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.tas_autocomplete_ata"]], "tas_autocomplete_bpoa() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.tas_autocomplete_bpoa"]], "tas_autocomplete_epoa() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.tas_autocomplete_epoa"]], "tas_autocomplete_main() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.tas_autocomplete_main"]], "tas_autocomplete_sub() (nokey.government.usa_spending.usaspending method)": [[15, "nokey.government.usa_spending.USAspending.tas_autocomplete_sub"]], "opendisease (class in nokey.health.open_disease)": [[16, "nokey.health.open_disease.OpenDisease"]], "get_all_countries_apple() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_all_countries_apple"]], "get_all_countries_ecdc() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_all_countries_ecdc"]], "get_all_countries_gov() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_all_countries_gov"]], "get_all_us_states_jhu() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_all_us_states_jhu"]], "get_apple_mobility_data_for_subregions() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_apple_mobility_data_for_subregions"]], "get_apple_supported_subregions_for_country() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_apple_supported_subregions_for_country"]], "get_docs_url() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_docs_url"]], "get_ecdc_covid_variant_data_for_country() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_ecdc_covid_variant_data_for_country"]], "get_gov_covid_data_for_country() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_gov_covid_data_for_country"]], "get_jhu_global_accumulated_covid_data() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_jhu_global_accumulated_covid_data"]], "get_jhu_global_time_series_covid_data() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_jhu_global_time_series_covid_data"]], "get_jhu_time_series_covid_data_for_countries() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_jhu_time_series_covid_data_for_countries"]], "get_jhu_time_series_covid_data_for_country() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_jhu_time_series_covid_data_for_country"]], "get_jhu_time_series_covid_data_for_province() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_jhu_time_series_covid_data_for_province"]], "get_jhu_time_series_covid_data_for_provinces() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_jhu_time_series_covid_data_for_provinces"]], "get_jhu_time_series_covid_data_for_state() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_jhu_time_series_covid_data_for_state"]], "get_nyt_time_series_covid_data_for_all_states() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_nyt_time_series_covid_data_for_all_states"]], "get_nyt_time_series_covid_data_for_all_us_counties() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_nyt_time_series_covid_data_for_all_us_counties"]], "get_nyt_time_series_covid_data_for_entire_usa() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_nyt_time_series_covid_data_for_entire_usa"]], "get_nyt_time_series_covid_data_for_specific_states() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_nyt_time_series_covid_data_for_specific_states"]], "get_nyt_time_series_covid_data_for_specific_us_counties() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_nyt_time_series_covid_data_for_specific_us_counties"]], "get_raps_covid_vaccines_administered_for_all_countries() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_raps_covid_vaccines_administered_for_all_countries"]], "get_raps_covid_vaccines_administered_for_all_states() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_raps_covid_vaccines_administered_for_all_states"]], "get_raps_covid_vaccines_administered_for_country() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_raps_covid_vaccines_administered_for_country"]], "get_raps_covid_vaccines_administered_for_state() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_raps_covid_vaccines_administered_for_state"]], "get_raps_total_covid_vaccines_administered() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_raps_total_covid_vaccines_administered"]], "get_worldometers_covid_data_for_all_continents() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_worldometers_covid_data_for_all_continents"]], "get_worldometers_covid_data_for_all_countries() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_worldometers_covid_data_for_all_countries"]], "get_worldometers_covid_data_for_all_states() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_worldometers_covid_data_for_all_states"]], "get_worldometers_covid_data_for_specific_continent() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_worldometers_covid_data_for_specific_continent"]], "get_worldometers_covid_data_for_specific_countries() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_worldometers_covid_data_for_specific_countries"]], "get_worldometers_covid_data_for_specific_country() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_worldometers_covid_data_for_specific_country"]], "get_worldometers_covid_data_for_specific_states() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_worldometers_covid_data_for_specific_states"]], "get_worldometers_global_covid_data() (nokey.health.open_disease.opendisease method)": [[16, "nokey.health.open_disease.OpenDisease.get_worldometers_global_covid_data"]], "nokey.health": [[16, "module-nokey.health"]], "nokey.health.open_disease": [[16, "module-nokey.health.open_disease"]], "throttler (class in nokey.helperfuncs.throttler)": [[17, "nokey.helperFuncs.throttler.Throttler"]], "add_params() (in module nokey.helperfuncs.make_request)": [[17, "nokey.helperFuncs.make_request.add_params"]], "get_api_list() (in module nokey.helperfuncs.get_api_list)": [[17, "nokey.helperFuncs.get_api_list.get_api_list"]], "make_request() (in module nokey.helperfuncs.make_request)": [[17, "nokey.helperFuncs.make_request.make_request"]], "make_request_for_content() (in module nokey.helperfuncs.make_request)": [[17, "nokey.helperFuncs.make_request.make_request_for_content"]], "make_request_for_content_with_params() (in module nokey.helperfuncs.make_request)": [[17, "nokey.helperFuncs.make_request.make_request_for_content_with_params"]], "make_request_with_params() (in module nokey.helperfuncs.make_request)": [[17, "nokey.helperFuncs.make_request.make_request_with_params"]], "make_request_with_post_and_data() (in module nokey.helperfuncs.make_request)": [[17, "nokey.helperFuncs.make_request.make_request_with_post_and_data"]], "make_request_with_post_and_json() (in module nokey.helperfuncs.make_request)": [[17, "nokey.helperFuncs.make_request.make_request_with_post_and_json"]], "nokey.helperfuncs": [[17, "module-nokey.helperFuncs"]], "nokey.helperfuncs.get_api_list": [[17, "module-nokey.helperFuncs.get_api_list"]], "nokey.helperfuncs.make_request": [[17, "module-nokey.helperFuncs.make_request"]], "nokey.helperfuncs.nokey_apis": [[17, "module-nokey.helperFuncs.nokey_apis"]], "nokey.helperfuncs.throttler": [[17, "module-nokey.helperFuncs.throttler"]], "throttle() (nokey.helperfuncs.throttler.throttler method)": [[17, "nokey.helperFuncs.throttler.Throttler.throttle"]], "throttle_class() (in module nokey.helperfuncs.throttler)": [[17, "nokey.helperFuncs.throttler.throttle_class"]], "dictum (class in nokey.inspiration.dictum)": [[18, "nokey.inspiration.dictum.Dictum"]], "get_docs_url() (nokey.inspiration.dictum.dictum method)": [[18, "nokey.inspiration.dictum.Dictum.get_docs_url"]], "get_inspiring_author_by_id() (nokey.inspiration.dictum.dictum method)": [[18, "nokey.inspiration.dictum.Dictum.get_inspiring_author_by_id"]], "get_inspiring_authors() (nokey.inspiration.dictum.dictum method)": [[18, "nokey.inspiration.dictum.Dictum.get_inspiring_authors"]], "get_inspiring_quote_by_quote_id() (nokey.inspiration.dictum.dictum method)": [[18, "nokey.inspiration.dictum.Dictum.get_inspiring_quote_by_quote_id"]], "get_inspiring_quotes() (nokey.inspiration.dictum.dictum method)": [[18, "nokey.inspiration.dictum.Dictum.get_inspiring_quotes"]], "get_inspiring_quotes_by_author_id() (nokey.inspiration.dictum.dictum method)": [[18, "nokey.inspiration.dictum.Dictum.get_inspiring_quotes_by_author_id"]], "get_languages() (nokey.inspiration.dictum.dictum method)": [[18, "nokey.inspiration.dictum.Dictum.get_languages"]], "get_number_of_quotes_and_authors() (nokey.inspiration.dictum.dictum method)": [[18, "nokey.inspiration.dictum.Dictum.get_number_of_quotes_and_authors"]], "get_random_quote() (nokey.inspiration.dictum.dictum method)": [[18, "nokey.inspiration.dictum.Dictum.get_random_quote"]], "nokey.inspiration": [[18, "module-nokey.inspiration"]], "nokey.inspiration.dictum": [[18, "module-nokey.inspiration.dictum"]], "jokeapi (class in nokey.jokes.joke_api)": [[19, "nokey.jokes.joke_api.JokeAPI"]], "get_docs_url() (nokey.jokes.joke_api.jokeapi method)": [[19, "nokey.jokes.joke_api.JokeAPI.get_docs_url"]], "get_joke() (nokey.jokes.joke_api.jokeapi method)": [[19, "nokey.jokes.joke_api.JokeAPI.get_joke"]], "nokey.jokes": [[19, "module-nokey.jokes"]], "nokey.jokes.joke_api": [[19, "module-nokey.jokes.joke_api"]], "freedictionary (class in nokey.language.free_dictionary)": [[20, "nokey.language.free_dictionary.FreeDictionary"]], "get_docs_url() (nokey.language.free_dictionary.freedictionary method)": [[20, "nokey.language.free_dictionary.FreeDictionary.get_docs_url"]], "look_up_word() (nokey.language.free_dictionary.freedictionary method)": [[20, "nokey.language.free_dictionary.FreeDictionary.look_up_word"]], "nokey.language": [[20, "module-nokey.language"]], "nokey.language.free_dictionary": [[20, "module-nokey.language.free_dictionary"]], "randomusergenerator (class in nokey.random.random_user)": [[21, "nokey.random.random_user.RandomUserGenerator"]], "generate_random_user() (nokey.random.random_user.randomusergenerator method)": [[21, "nokey.random.random_user.RandomUserGenerator.generate_random_user"]], "get_docs_url() (nokey.random.random_user.randomusergenerator method)": [[21, "nokey.random.random_user.RandomUserGenerator.get_docs_url"]], "nokey.random": [[21, "module-nokey.random"]], "nokey.random.random_user": [[21, "module-nokey.random.random_user"]], "itis (class in nokey.science_and_nature.integrated_taxonomic_information_system)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS"]], "nobelprizeapi (class in nokey.science_and_nature.nobel_prize)": [[22, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI"]], "get_itis_terms() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_ITIS_terms"]], "get_itis_terms_from_common_name() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_ITIS_terms_from_common_name"]], "get_itis_terms_from_scientific_name() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_ITIS_terms_from_scientific_name"]], "get_lsid_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_LSID_from_TSN"]], "get_tsn_from_lsid() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_TSN_from_LSID"]], "get_tsns_by_vernacular_language() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_TSNs_by_vernacular_language"]], "get_accepted_names_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_accepted_names_from_TSN"]], "get_all_nobel_prizes() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[22, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_all_nobel_prizes"]], "get_any_match_count() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_any_match_count"]], "get_comment_detail_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_comment_detail_from_TSN"]], "get_common_names_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_common_names_from_TSN"]], "get_core_metadata_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_core_metadata_from_TSN"]], "get_coverage_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_coverage_from_TSN"]], "get_credibility_rating_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_credibility_rating_from_TSN"]], "get_credibility_ratings() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_credibility_ratings"]], "get_currency_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_currency_from_TSN"]], "get_date_data_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_date_data_from_TSN"]], "get_description() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_description"]], "get_docs_url() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_docs_url"]], "get_docs_url() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[22, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_docs_url"]], "get_experts_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_experts_from_TSN"]], "get_full_hierarchy_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_full_hierarchy_from_TSN"]], "get_full_record_from_lsid() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_full_record_from_LSID"]], "get_full_record_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_full_record_from_TSN"]], "get_geographic_divisions_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_geographic_divisions_from_TSN"]], "get_geographic_values() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_geographic_values"]], "get_global_species_completeness_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_global_species_completeness_from_TSN"]], "get_hierarchy_down_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_hierarchy_down_from_TSN"]], "get_hierarchy_up_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_hierarchy_up_from_TSN"]], "get_jurisdiction_values() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_jurisdiction_values"]], "get_jurisdictional_origin_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_jurisdictional_origin_from_TSN"]], "get_jurisdictional_origin_values() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_jurisdictional_origin_values"]], "get_kingdom_name_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_kingdom_name_from_TSN"]], "get_kingdom_names() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_kingdom_names"]], "get_last_change_date() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_last_change_date"]], "get_nobel_laureate_by_id() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[22, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_nobel_laureate_by_id"]], "get_nobel_prize_laureates() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[22, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_nobel_prize_laureates"]], "get_one_nobel_prize() (nokey.science_and_nature.nobel_prize.nobelprizeapi method)": [[22, "nokey.science_and_nature.nobel_prize.NobelPrizeAPI.get_one_nobel_prize"]], "get_other_sources_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_other_sources_from_TSN"]], "get_parent_tsn_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_parent_TSN_from_TSN"]], "get_publications_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_publications_from_TSN"]], "get_rank_names() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_rank_names"]], "get_record_from_lsid() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_record_from_LSID"]], "get_review_year_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_review_year_from_TSN"]], "get_scientific_name_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_scientific_name_from_TSN"]], "get_synonym_names_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_synonym_names_from_TSN"]], "get_taxon_authorship_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_taxon_authorship_from_TSN"]], "get_taxonomic_rank_name_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_taxonomic_rank_name_from_TSN"]], "get_taxonomic_usage_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_taxonomic_usage_from_TSN"]], "get_unacceptability_reason_from_tsn() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_unacceptability_reason_from_TSN"]], "get_vernacular_languages() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.get_vernacular_languages"]], "nokey.science_and_nature": [[22, "module-nokey.science_and_nature"]], "nokey.science_and_nature.integrated_taxonomic_information_system": [[22, "module-nokey.science_and_nature.integrated_taxonomic_information_system"]], "nokey.science_and_nature.nobel_prize": [[22, "module-nokey.science_and_nature.nobel_prize"]], "search_by_common_name() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_by_common_name"]], "search_by_common_name_begins_with() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_by_common_name_begins_with"]], "search_by_common_name_ends_with() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_by_common_name_ends_with"]], "search_by_scientific_name() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_by_scientific_name"]], "search_for_any_match() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_for_any_match"]], "search_for_any_match_paged() (nokey.science_and_nature.integrated_taxonomic_information_system.itis method)": [[22, "nokey.science_and_nature.integrated_taxonomic_information_system.ITIS.search_for_any_match_paged"]], "spaceflightnews (class in nokey.spaceflight.spaceflight_news)": [[23, "nokey.spaceflight.spaceflight_news.SpaceflightNews"]], "get_article_by_id() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[23, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_article_by_id"]], "get_articles() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[23, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_articles"]], "get_blog_by_id() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[23, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_blog_by_id"]], "get_blogs() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[23, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_blogs"]], "get_docs_url() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[23, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_docs_url"]], "get_info() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[23, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_info"]], "get_report_by_id() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[23, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_report_by_id"]], "get_reports() (nokey.spaceflight.spaceflight_news.spaceflightnews method)": [[23, "nokey.spaceflight.spaceflight_news.SpaceflightNews.get_reports"]], "nokey.spaceflight": [[23, "module-nokey.spaceflight"]], "nokey.spaceflight.spaceflight_news": [[23, "module-nokey.spaceflight.spaceflight_news"]], "stapi (class in nokey.tv_and_film.star_trek_api)": [[24, "nokey.tv_and_film.star_trek_api.STAPI"]], "get_animal_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_animal_by_id"]], "get_animals() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_animals"]], "get_astronomical_object_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_astronomical_object_by_id"]], "get_astronomical_objects() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_astronomical_objects"]], "get_book_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_book_by_id"]], "get_book_collection_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_book_collection_by_id"]], "get_book_collections() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_book_collections"]], "get_book_series() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_book_series"]], "get_book_series_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_book_series_by_id"]], "get_books() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_books"]], "get_character_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_character_by_id"]], "get_characters() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_characters"]], "get_comic_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_by_id"]], "get_comic_collection_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_collection_by_id"]], "get_comic_collections() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_collections"]], "get_comic_series() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_series"]], "get_comic_series_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_series_by_id"]], "get_comic_strip_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_strip_by_id"]], "get_comic_strips() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_comic_strips"]], "get_comics() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_comics"]], "get_companies() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_companies"]], "get_company_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_company_by_id"]], "get_conflict_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_conflict_by_id"]], "get_conflicts() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_conflicts"]], "get_data_version() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_data_version"]], "get_docs_url() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_docs_url"]], "get_element_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_element_by_id"]], "get_elements() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_elements"]], "get_episode_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_episode_by_id"]], "get_episodes() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_episodes"]], "get_food_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_food_by_id"]], "get_foods() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_foods"]], "get_literature() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_literature"]], "get_literature_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_literature_by_id"]], "get_location_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_location_by_id"]], "get_locations() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_locations"]], "get_magazine_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_magazine_by_id"]], "get_magazine_series() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_magazine_series"]], "get_magazine_series_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_magazine_series_by_id"]], "get_magazines() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_magazines"]], "get_material_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_material_by_id"]], "get_materials() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_materials"]], "get_medical_condition_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_medical_condition_by_id"]], "get_medical_conditions() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_medical_conditions"]], "get_movie_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_movie_by_id"]], "get_movies() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_movies"]], "get_occupation_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_occupation_by_id"]], "get_occupations() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_occupations"]], "get_organization_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_organization_by_id"]], "get_organizations() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_organizations"]], "get_performer_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_performer_by_id"]], "get_performers() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_performers"]], "get_season_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_season_by_id"]], "get_seasons() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_seasons"]], "get_series() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_series"]], "get_series_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_series_by_id"]], "get_soundtrack_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_soundtrack_by_id"]], "get_soundtracks() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_soundtracks"]], "get_spacecraft_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_spacecraft_by_id"]], "get_spacecraft_class_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_spacecraft_class_by_id"]], "get_spacecraft_classes() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_spacecraft_classes"]], "get_spacecrafts() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_spacecrafts"]], "get_species() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_species"]], "get_species_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_species_by_id"]], "get_staff() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_staff"]], "get_staff_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_staff_by_id"]], "get_technologies() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_technologies"]], "get_technology_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_technology_by_id"]], "get_title_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_title_by_id"]], "get_titles() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_titles"]], "get_trading_card_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_by_id"]], "get_trading_card_deck_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_deck_by_id"]], "get_trading_card_decks() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_decks"]], "get_trading_card_set_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_set_by_id"]], "get_trading_card_sets() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_card_sets"]], "get_trading_cards() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_trading_cards"]], "get_video_game_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_video_game_by_id"]], "get_video_games() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_video_games"]], "get_video_release_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_video_release_by_id"]], "get_video_releases() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_video_releases"]], "get_weapon_by_id() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_weapon_by_id"]], "get_weapons() (nokey.tv_and_film.star_trek_api.stapi method)": [[24, "nokey.tv_and_film.star_trek_api.STAPI.get_weapons"]], "nokey.tv_and_film": [[24, "module-nokey.tv_and_film"]], "nokey.tv_and_film.star_trek_api": [[24, "module-nokey.tv_and_film.star_trek_api"]], "nationalweatherservice (class in nokey.weather.national_weather_service)": [[25, "nokey.weather.national_weather_service.NationalWeatherService"]], "get_nws_office_headline_by_headline_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_NWS_office_headline_by_headline_id"]], "get_nws_office_headlines() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_NWS_office_headlines"]], "get_nws_office_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_NWS_office_metadata"]], "get_active_alerts() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts"]], "get_active_alerts_by_area() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts_by_area"]], "get_active_alerts_by_region() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts_by_region"]], "get_active_alerts_by_zone() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts_by_zone"]], "get_active_alerts_count() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_active_alerts_count"]], "get_alert_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_alert_by_id"]], "get_alert_types() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_alert_types"]], "get_alerts() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_alerts"]], "get_cwsu_advisories() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_cwsu_advisories"]], "get_cwsu_advisories_by_date_and_seq() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_cwsu_advisories_by_date_and_seq"]], "get_cwsu_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_cwsu_metadata"]], "get_docs_url() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_docs_url"]], "get_glossary() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_glossary"]], "get_observation_stations_by_gridpoints() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_observation_stations_by_gridpoints"]], "get_observation_stations_by_zone() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_observation_stations_by_zone"]], "get_observations_by_station() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_observations_by_station"]], "get_radar_queue_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_queue_metadata"]], "get_radar_server_metadata_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_server_metadata_by_id"]], "get_radar_servers() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_servers"]], "get_radar_station_alarms_metadata_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_station_alarms_metadata_by_id"]], "get_radar_station_metadata_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_station_metadata_by_id"]], "get_radar_stations() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_stations"]], "get_radar_wind_profiler_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_radar_wind_profiler_metadata"]], "get_raw_data_by_gridpoints() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_raw_data_by_gridpoints"]], "get_sigmets_by_atsu() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_sigmets_by_atsu"]], "get_sigmets_by_atsu_and_date() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_sigmets_by_atsu_and_date"]], "get_specific_sigmet() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_specific_sigmet"]], "get_station_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_station_metadata"]], "get_station_observation_by_time() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_station_observation_by_time"]], "get_stations() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_stations"]], "get_taf_by_date_time() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_taf_by_date_time"]], "get_tafs_by_station() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_tafs_by_station"]], "get_text_product_by_id() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_by_id"]], "get_text_product_locations() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_locations"]], "get_text_product_locations_by_type() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_locations_by_type"]], "get_text_product_types() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_types"]], "get_text_product_types_by_location() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_text_product_types_by_location"]], "get_text_products() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_text_products"]], "get_text_products_by_type() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_text_products_by_type"]], "get_text_products_by_type_and_location() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_text_products_by_type_and_location"]], "get_textual_forecast_by_gridpoints() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_textual_forecast_by_gridpoints"]], "get_textual_hourly_forecast_by_gridpoints() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_textual_hourly_forecast_by_gridpoints"]], "get_zone_forecast() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_zone_forecast"]], "get_zone_metadata() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_zone_metadata"]], "get_zone_observations() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_zone_observations"]], "get_zones() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_zones"]], "get_zones_by_type() (nokey.weather.national_weather_service.nationalweatherservice method)": [[25, "nokey.weather.national_weather_service.NationalWeatherService.get_zones_by_type"]], "nokey.weather": [[25, "module-nokey.weather"]], "nokey.weather.national_weather_service": [[25, "module-nokey.weather.national_weather_service"]]}})